ADA e C
ADD B STORE
APLICACAO_ORDENACAO A primeira
APLICAÇÃO creation comece
APLICAÇÃO creation inicio
APLICAÇÃO_ORDENACAO creation comece
AVIÃO class BARCO
AVIÃO inherit VEÍCULO
AVIÃO_A_JATO e AVIÃO_A_HÉLICE
Abordagem Orientada Por
Ace para Listagem
Acrescente alguns métodos
Agora vamos considerar
Aided Software Engineering
Algol e PL/1
Algumas classes sãoabstratas
Algumas linguagens assembly
Algumas linguagens fornecem
Alguns estudantes terminam
Alguns exemplos destringssão
Alto Research Center
Ambas ações dadas
Análise Análise
Análise Análise desoftware
Análise da classe
Apesar da abordagem
Apesar de reconhecer
Apesar desta ideologia
Apesar disto poder
Aplicação A figura
Após o programador
Ascondições_de_saída_do_loopsão testadas antes
Aspectos do objeto
Através do índice
Atribui a substring
Atribuição de objetos
Atributo de consulta
BARCO class APLICAÇÃO
BARCO e TREM
BARCO inherit VEÍCULO
Baseadas em objetos
Baseado na descrição
Bem-vindo à ciência
Bibliotecas de classes
Booch na figura
Booch para herança
Básicos de Programas
C++ e Smalltalk
CARRO class AVIÃO
CARRO creation criar
CARRO e AVIAO
CARRO inherit VEÍCULO
CARRO providencie três
CONTADOR de maneira
CONTADOR definida anteriormente
CONTADOR para ilustrar
CONTADOR por outro
Cada atributo representa
Cada característica herdada
Cada classe criança
Cada módulo contém
Cada nuvem pontilhada
Cada nuvem sólida
Cada objeto assume
Cadeias de caracteres
Centro de Pesquisa
Cenários de objetos
Cientistas da computação
Cite algumas profissões
Cite várias maneiras
Ciência da computação
Ciência em geral
Classe básica
Classificações de Cães
Coad e Yourdon
Comandos e consultas
Comandos tipicamente mudam
Common Lisp Object
Como a entrada
Como a saída
Como discutido anteriormente
Como humanos parecemos
Como indicado anteriormente
Como muitos programadores
Comparação Usado
Computação do imposto
Computer Aided Software
Considere agora duas
Considere o caso
Considere o segmento
Considere outro caso
Consultas nunca mudam
Contudo o leitor
Conversão Usado
Copiando Objetos Supondo
Corporation no Palo
Criando e destruindo
Criação e comando
Crie o objetoseu_carroe
Dados e operações
Das linguagens mencionadas
DeMarco e Edward
Deveria ficar claro
Diagrama de cenário
Diagrama de classe
Discutiremos alguns elementos
Disponibiliza o resultado
Durante o projeto
EIFFEL para detalhes
ELEVADOR à classe
Eiffel 31 Programando
Eiffel A linguagem
Eiffel a classe
Eiffel class APLICAÇÃO
Eiffel contém aproximadamente
Eiffel devem estar
Eiffel na construção
Eiffel para computar
Eiffel para maiores
Eiffel permita alguém
Embora a linguagem
Embora podendo certamente
Engenheiros elétricos aprendem
Engineering programação exclusivamente
Entrada de dados
Então o atributo
Escreve mudança
Escreve o valor
Estado Interno Suponhamos
Estruturação e programação
Exemplos de contagem
Existem muitos comandos
Existem operações adicionais
Existem vários tipos
Explique em detalhes
Figura 21 representa
Figura 211 usando
Figura 27 Demostra
From instruções_de_inicialização Until
Função consulta
Função consulta imposto_devido
Gráfica da Classe
Haverá três tipos
Herança A palavra
IMPOSTO Na funçãoimposto_devido
IMPOSTO creation criar
IMPOSTO cujos detalhes
IMPOSTO do 
IMPOSTO eAPLICAÇÃO constituem
IMPOSTO para ilustrar
INTEGER do from
INTEGER do if
INTEGER from 
INTEGER if meu_valor/seu_valor
INTEGER número
INTEGERdentro dos parênteses
Ilustre o princípio
Inspirado nas idéias
Inverte a seqüência
KENNEL americano classificou
LISP e programação
LISP significa processamento
LOAD A ADD
Linguagens Lógicas 
Linguagens assembly representam
Linguagens assembly usam
Linguagens de alto
Linguagens de programação
Linguagens funcionais 
Linguagens orientadas por
Linguagens procedurais 
Lisp Object System
Listagem 31 serve
Listagem 34 Classe
Lógicas PROLOG
MATEMÁTICA e GRÁFICOS
Modelagem de objetos
Modula-2 e Ada
Muda o primeiro
Mudança de elementos
Muitas crianças desenvolvem
Muitas crianças podem
Muitos dos objetos
Muitos exemplos adicionais
Muitos leitores deste
Nenhum detalhe mostrado
Nenhum dos detalhes
Nenhuma dessas linguagens
Normalmente o arquivo
Noruega no fim
Objective-C Nestas construções
Objetos como abstração
Objetos ordinários
Objetos para Resolver
Obtém a primeira
Operador de desigualdade
Operador de igualdade
Operadores básicos
Orientada Por Objetos
Outra estrutura simples
Outras linguagens procedurais
Outros atributos como
Outros leitores podem
PRIMEIRO_PROGRAMA Na listagem
PRIMEIRO_PROGRAMA creation inicio
PROLOG em aplicativos
Palo Alto Research
Partes da interface
Parâmetros Suponha
Periódica de Elementos
Pesquisa da Xerox
Poderosas e dispendiosas
Porção da interfase
Primeiro programa em
Produtores e consumidores
Produção de Lixo
Programa teste simples
Programas comerciais usualmente
Programas de Eiffel
Programas de aplicações
Programas de computador
Programas de sistemas
Programas nessa linguagem
REAL Criação
REAL e BOOLEAN
REAL from soma
REAL if meu_valorseu_valor
REAL ioreadint 
REAL is 
Random House dictionary
Raramente nos preocupamos
Relato de Status
Relação de Herança
Relação de Uso
Relação de associação
Relação de uso
Relações de associação
Relações ent
Relações ent re
Resolver o problema
Rotinas Rotinas existem
Rotinas existem em
SIMULAÇÃO precisa desenhar
STANDARD_FILES A classeAPLICAÇÃO
STANDARD_FILES feature specification
STD_FILES class interface
STD_FILES de Eiffel
STD_FILES feature 
STRING O apêndice
STRING contida na
STRING has astring
STRING make aloca
Saída de dados
Semântica da clonagem
Semântica da cópia
Sistemas orientado por
Sistemas orientados por
Smalltalk e Eiffel
Software Engineering programação
Softwareé o produto
Suponha quemeu_carrotivesse sido
Tabela 31 Análise
Tal linguagem usa
Tanto a informação
Tanto artistas quanto
Teoria de autômatos
Tipos básicos
Tipos de objetos
Três categorias principais
Until condições_de_saída_do_loop loop
Usado para comparar
Usado para converterstring
Usado para obter
Usando a abordagem
Use a rotinacopy
Uso 2613 Relação
Uso Como exemplo
VEÍCULO Classe
VEÍCULO Nenhum
VEÍCULO class CARRO
VEÍCULO contêm características
Vamos rever novamente
Vetor de três
Várias relações importantes
Vários capítulos posteriores
Xerox Corporation no
abaixo da declaração
abaixo de loop
abordagem da orientação
abordagem de 
abordagem de classificação
abordagem de solução
abordagem do 
abordagem orientada por
abordagem totalmente nova
abordagem usada neste
abstratas de carros
abstrato de dados
abstratos de dados
abstração da classe
abstração de algo
abstração desta entidade
abstração do objeto
abstração em FORTRAN
abstração funcional forma
abstrações na resolução
abstrações nestas linguagens
acentos em identificadores
acessada diretamente usando
acessar e manipular
acessar o imposto
acessar o seuresultadoatual
acessos de dados
achada em instâncias
achar a sintaxe
acima da linha
acima sugere ação
acimameu_vetoré o nome
acomodar o número
aconselhável usar recursos
acrescentadas no modelo
acrescentar algumas entidades
aderência dos pneus
adiciona umastring na
adicionais de construções
adicionais para enriquecer
adicionaisnumero_de_cilindros e cavalos_de_forca
adicionar alguns comandos
adicionar dois números
adicionar o valor
adquirir o maior
afetará o original
agora bastante usuais
agora duas subclasses
agrupadas em várias
agrupar atributos comuns
ainda sendo utilizadas
ajuda a determinar
ajuda na geração
ajudam a determinar
ajudar na solução
ajustar o estado
alfabéticos para representar
algo no contexto
algo no domínio
algoritmos e estruturas
algum modo diferente
algum objeto como
alguma atitude 
alguma atitude end
alguma ação
alguma ação apenas
alguma ação end
algumas aplicações comerciais
algumas características importantes
algumas das melhores
algumas das propriedades
algumas das rotinas
algumas destas funções
algumas entidades adicionais
algumas pesquisas inovadoras
algumas vezes chamadas
alguns elementos simples
alguns poucos laboratórios
alguns princípios básicos
alguém quiser mudar
alguém quiser testar
alocada para si
alocado count 
alocar memória paraseu_carroe
alocação de memória
altera o valor
alterado para 200000
alterado para metade
alterar o peso
alternativo à item
alto de abstração
alto de entusiasmo
alto nível assemelham-se
alto nível em
aluno iniciante vai
amarelo e vermelho
ambiente de desenvolvimento
ambiente gráfico tipicamente
amplamente usadas na
amplo e complexo
amplos e complexos
analise estruturados apresentados
and then ""
and then c//b
and usada em
andar em particular
anel de diamante
anexado àquela região
anos e reler
antes de aprender
antes de cada
antes de entrar
antes de iniciar
antes de olhar
antigo deindex por
análise de desempenho
análise de objetos
análise e planejamento
análise e projeto
análise orientada por
análise para completar
análises orientada por
aparece em umastring
aparece na string
aparelho de interface
apenas valores inteiros
aplicativo Eiffel roda
aplicativo para determinar
aplicativos de inteligência
aplicativos para aprendizagem
aplicação a menos
aplicação dada na
aplicação de ciência
aplicação doshort na
aplicação e especifica
aplicação nos permitirá
aplicação vamos aproximar
aplicações a partir
aplicações comerciais escritas
aplicações de software
aplicações em Eiffell
aplicações em engenharia
aplicações o carro
apoiada por computador
apoiar a programação
apoiar interfaces gráficas
apoio continuado em
apontam da criança
apreciar o trabalho
aprendem a linguagem
aprendemos a classificar
aprender a palavra
aprender a resolver
aprender logo cedo
aprender matemática básica
aprender princípios básicos
aprendizado de máquina
aprendizado e indução
aprendizagem de máquina
aprendizagem de máquinas
apresenta o atributo
apresenta o atributoimpulso_maximo
apresentado na última
apresentado à noção
apresentados e corrigidos
apresentados na seção
apresentados por Larry
apropriado de granularidade
aproximadamente 60 rotinas
aproximar a bem
aproximar a soma
apta para fazer
aqui share faz
aquisição de características
aritmético de computadores
armazenada em cada
armazenamento de dados
armazenamento de informações
armazenamento de memória
armazenamento para cada
aro de ouro
arquitetura inicial destes
arquivo das bibliotecas
arquivo de configuração
arredondamento presente nas
artefatos de baixo
artificial e PROLOG
artificial e aprendizagem
artista irá enfatizar
artistas quanto engenheiros
asinstruções_de_inicializaçãosão executados exatamente
aspecto e comportamento
assembly e linguagens
assembly modernas suportam
assembly usam caracteres
associado de operações
associado à construção
associados a cada
associações incluem relações
assuma o valor
assumem inicialmente valores
assumem o valor
assumindo o valor
assunto da ordenação
assunto das rotinas
assuntos de desenvolvimento
astring atual compartilhe
astring destino extend
atingir desejada meta
atitude end Operador
atividade de consumidor
ato de escrever
através da seqüência
através das consultas
através das nuvens
através de mensagens
através de objetos
através do conhecimento
através do conjunto
através do envio
através do objeto
através do uso
atribuição de outrastring
atribuição de valoresdefaultpara
atribuição do Eiffel
atribuições Existem vários
atributo de consultarenda_dedutivel
atributo peso deseu_carro
atributos da classe
atributos da definição
atributos demeu_carrofor modificado
atribuído a c1
atribuído para outro
atrás dessas duas
atual de caracteres
atual do contador
atual para zero
aumentar o valor
aumento de alguns
automatica de memória
automática de lixo
automático de lixo
automóvel real na
autor da listagem
autor deste livro
auxiliar a engenharia
avalia a expressão
avaliada como falsa
avaliação de expressões
avançadas para expressar
avançados outros componentes
avião a jato
avião decola else
avião decola end
avião podem compartilhar
avó das linguagens
ação e comportamento
ação end and
ação end implies
ações a seguir
açõesincrementarefetuadas em cada
baixo para cima
banco de dados
barcos e trens
base para resolver
base para solução
base sólida em
base sólida nos
baseada na avaliação
baseada na distribuição
baseada na habilidade
baseada no atributo
baseada no domínio
baseada no problema
baseada no resultado
baseadas em C
baseadas em algum
baseadas em fenômenos
baseadas em objeto
baseadas nas relações
baseado na avaliação
baseado no contexto
baseados em caracter
baseando-se em algumas
bases de dados
bem como sendo
bem conhecida série
bem enfocada porção
bem escrito deve
biblioteca de classes
biblioteca do Eiffel
biblioteca externa como
bibliotecas de classes
bibliotecas e como
bibliotecas existentes nele
bibliotecas para fazer
bibliotecas reutilizáveis desoftware
binário para adição
binário para divisão
binário para exponenciação
binário para maior
binário para menor
binário para multiplicação
binário para resto
binário para subtração
bits da linguagem
bloco de comandos
bloco de código
bloco_1 e bloco_2
bloco_1 else bloco_2
bloco_2 end Aqui
blocos de código
botões de controle
branco head remove
brinquedo do tamanho
básica de abstração
básicas de veículo
básicas poderiam incluir
básico de objeto
básico enquanto outras
básicos 35 Tipos
básicos apresentados na
básicos da programação
básicos de ciência
básicos de construção
básicos de objetos
cachede alta velocidade
cachorros de raça
cachorros em vários
cada casa decimal
cada classe concreta
cada classe em
cada classe encapsula
cada classe na
cada comando dado
cada comando indica
cada módulo representa
cada objeto enquanto
cada posição assumem
cada processador específico
cadeiras e zero
caixa de fósforo
caixas de diálogo
caixinha de fósforos
calcula e informa
calcular o volume
calcule a expressão
canto superior esquerdo
capa de plástico
capacidade de aceleração
capacidade de fazer
capacidade de frear
capacity espaço alocado
capaz de construir
capaz de distinguir
capaz de escrever
capaz de inspecionar
capaz de raciocinar
capaz de saber
capaz de satisfazer
capazes de desempenhar
capítulos posteriores enfatizam
caracter da entrada
caracter da string
caracter em particular
caracter em índice
caracter específico aparece
caracter específico prune_all
caracter específico remove
caracter item 
caracter na frente
caracter no fim
caracter replace_substring copia
caracter wipe_out remove
caractere da posição
caracteres atuais dastring
caracteres da entrada
caracteres dastring fonte
caracteres de outro
caracteres delimitados por
caracteres do índice
caracteres em branco
caracteres em modelo
caracteres em umastring
caracteres end 
caracteres grow 
caracteres insert 
caracteres limitada por
caracteres maiúsculos em
caracteres minúsculos em
caracteres na string
caracteres nastring em
caracteres nastring mirrored
caracterizado tanto por
caracterizar objetos baseando
característica dos seres
características de aceleração
características de cada
características de tal
características do modelos
características do objeto
características e na
características encontradas nas
características essenciais das
carrinho de brinquedo
carro como massa
carro como produto
carro desenvolvido por
carro e podem
carro no livro
carro real bem
carros chegam em
carros de brinquedo
carros e caminhões
caso dado acima
caso programação orientada
categorias baseadas nas
causa da natureza
causa das diferentes
causa dos vetores
causam alocação automatica
cedo na vida
centenas de linguagens
central de processamento
centro do triângulo
cenário de objeto
cenário de objetos
certastring por novas
chamada decomposição funcional
chamada programação estruturada
chamadas somente através
chamado arquivoACE informa
chamou a função
chamou a rotina
chave na definição
chegam em faixas
cheque pessoal usando
ciclo de vida
cientista da computação
cientistas da computação
cima da computação
ciência da computação
claro nessa discussão
class APLICAÇÃO
class APLICAÇÃO creation
class APLICAÇÃO_ORDENACAO creation
class AVIÃO inherit
class BARCO inherit
class CARRO creation
class CARRO inherit
class IMPOSTO Na
class IMPOSTO creation
class PRIMEIRO_PROGRAMA Na
class PRIMEIRO_PROGRAMA creation
class VEÍCULO 
class interface STANDARD_FILES
class interface STD_FILES
classe APLICAÇÃO
classe AVIÃO
classe AVIÃO class
classe AVIÃO_A_HÉLICE apresenta
classe AVIÄO_A_JATO apresenta
classe Aplicação
classe BARCO class
classe CARRO class
classe CARRO providencie
classe CONTADOR definida
classe ELEVADOR contém
classe MATEMÁTICAAlém disso
classe PRIMEIRO_PROGRAMA contém
classe SIMULAÇÃO indicam
classe SIMULAÇÃO precisa
classe STD_FILES class
classe STRING armazena
classe STRING contida
classe STRING deve
classe STRING make
classe VEÍCULO
classe VEÍCULO class
classe VEÍCULO contêm
classe abstrata jamais
classe concreta adquire
classe criança contém
classe da Figura
classe dada na
classe de aplicação
classe de nome
classe detalham precisamente
classe deve estar
classe em Eiffel
classe em volta
classe fica escrito
classe incluam parâmetros
classe mãe devem
classe padrão chamada
classe pai define
classe paraelevador Cada
classe precisa acessar
classe precisa usar
classe raiz nesta
classe simplificada IMPOSTO
classe tal como
classeAPLICAÇÃO na Listagem
classes 24 Tipos
classes IMPOSTO eAPLICAÇÃO
classes de cachorros
classes e como
classes em linguagens
classes especificadas acima
classes no topo
classes para aplicações
classes para outros
classes para serem
classes principais identificadas
classes unidas por
classificamos objetos por
classificar objetosNós chamaremos
classificar tipos similares
classificação serve como
classificações de classes
clonagem 38 Operadores
clube KENNEL americano
coeficiente de aerodinâmica
coerente de operações
coisa de útil
colegas de ciências
coleta de lixo
coleção de classes
coleção de elementos
coleção de objetosbotões
colocada no centro
colocadas para usar
colocados no topo
colocando o menor
comados e consultas
comando cria einicializa
comando dado no
comando de criaçãocriar
comando de leitura
comando e consulta
comando ordinário criar
comando para alterar
comando permite modificar
comando1 else if
comando1 elseif expressão2
comando2 else comando3
comando2 elseif expressão3
comando3 else comando4
comando3 end end
comandoput da classe
comandoreadintmuda o estado
comandos de entrada
comandos de inicialização
comandos de saída
comandos definidos em
comandos e constultas
comandos e consultas
comandos na seção
comdadosenviado como parâmetro
comece feature comece
comece is local
comerciais escritas em
comerciais usualmente vêm
comercial da linguagem
comercialmente em 1980
começa de baixo
começamos a pensar
começaremos a programar
começo da década
como a avó
como a capacidade
como a seguir
como a unidade
como a velocidade
como adicionar alguns
como em qualquer
como entidades lógicas
como função calcular
como mencionado acima
como mostrado nos
como o representado
como objetos interagem
como ocorre neste
como parâmetros nas
como produto comercial
como sendo diferentes
como sendo umaclasse
comopré e pós
comparar duasstrings is_equal
compartilhados por muitas
compartilhados por quaisquer
compartilhados por várias
compartilhar certos atributos
compartilhe o texto
compilador gera instruções
compilar e executá-lo
compilar e linkar
complexa linguagem orientada
complexidade de C++
complexidade e algoritmos
complexos sistemas desoftwaresão
compondo o aplicativo
componente de software
componente do computador
componentes de software
componentes de texto
componentes desoftwareé construída
componentes do interior
comportam de maneira
comportamental da classe
comportamento consistindo em
comportamento da classe
comportamento da subclasse
comportamento das classes
comportamento de cada
comportamento do carro
comportamento do semáforo
composta de outros
composto da parte
composto de objetos
composto de vários
compostos de outros
compostos de partes
compreendem asinstruções_de_inicializaçãosão executados
compreensão de sistemas
comprimento de 100
computacional para aplicações
computada e retornada
computador chamado compilador
computador digital realizar
computador possa entender
computadores iriam querer
computadores somente podiam
computar a soma
computação Muitos leitores
computação e acessos
computação em particular
computação incluem sistemas
computação precisa aprender
comuns de CARRO
comuns de software
comuns desoftware normalmente
conceito de comando
conceito de funções
conceitos chave na
conceitos e produzir
conceitos fundamentais dedesigne
condição de parada
condições_de_saída_do_loop loop corpo_do_loop
conectado à operação
conectando a classeCarro
configuração chamado arquivoACE
configurações de bits
conhecida série geométrica
conhecimento dos serviços
conjunto de botões
conjunto de classes
conjunto de funções
conjunto de instruções
conjunto de mecanismos
conjunto de operações
conjunto de proposições
conjunto de rotinas
conjunto de serviços
conjunto logicamente coerente
conjunto logicamente relacionado
considerada como sendo
considerar a classe
considerar o mundo
consideraremos o problema
considere a classe
considere a ligação
consistent a string
constituem a aplicação
constituem o estado
constituinte e essencial
constituída de vários
constituídos de classe
construir Algumas expressões
construir envolve somente
construir feature criar
construir tal janela
construção de aplicações
construção de bibliotecas
construção de modelos
construção de programas
construção de software
construção demeu_vetorcontendo três
construções comloop aparecerão
construções de iteração
construções de linguagens
construída como segue
construída de maneira
construída retorna informações
construídas para apoiar
constultas class IMPOSTO
consulta corretamente construída
consulta da classe
consulta permite verificar
consultaitemdearray discutido na
consultameu_pontoangulocomputa a coordenada
consultar o manual
consultas de cada
consultas definidas na
consultas e comandos
consultas na seção
consultasde outros objetos
consumidor competente antes
contador_de_caminhoesincrementar contador_de_carrosincrementar contador_de_caminhoesincrementar
contador_de_caminhoeszerar contador_de_onibuszerar contador_de_carrosincrementar
contador_de_carroscriar contador_de_carrosincrementar contador_de_carroszerar
contador_de_carrosincrementar contador_de_caminhoesincrementar contador_de_carrosincrementar
contador_de_carrosincrementar contador_de_carrosincrementar contador_de_onibusincrementar
contador_de_carrosincrementar contador_de_carroszerar Consulta
contador_de_carrosincrementar contador_de_onibusincrementar contador_de_carrosincrementar
contador_de_carrosresultado Em cada
contador_de_carroszerar contador_de_caminhoeszerar contador_de_onibuszerar
contador_de_onibusincrementar contador_de_carrosincrementar contador_de_caminhoesincrementar
contador_de_onibuszerar contador_de_carrosincrementar contador_de_carrosincrementar
contagem de veículos
contagem do número
contagem podem incluir
contas em valores
contexto da orientação
contexto de orientação
contexto de programa
contexto do programa
contida na biblioteca
contida nastring dada
contida no próprio
contidas nesta classe
contidas no modelo
contidos na descrição
continuado em artefatos
continuar a subdividir
continuar adicionando números
controla a aplicação
controle de fluxo
controle de tráfego
controle do número
controle do programador
contém aproximadamente 60
contêm características comuns
converte para letras
converter a string
coordenada polar doangulodemeu_ponto
coordenada superior esquerda
coordenada x igual
coordenadas do canto
coordenadasx e y
copy transfere caracteres
cor da luz
corpo da rotina
corpo do loop
corrente do atributorenda_dedutivel
correta porém desnecessária
corretamente construída retorna
count número
creation comece feature
creation criar feature
creation inicio feature
crescentes nas posições
criada por Grady
criadas para cada
criado e inicializado
criado explicitamente por
criado no Eiffel
criador da classe
criador de cães
criança contém atributos
criança no início
criança parece apta
crianças podem distinguir
criar e inicializar
criar o objetomeu_carroincluem
criar o vetor
criar para criar
criativo e cálculos
criaturas orientadas por
criação da classe
criação de programas
criação de rotinas
criação do vetordadoscom
criação específica em
cuidadosa e disciplinada
cujo objetivo principal
cujo valor teórico
culminou no lançamento
curso de ciência
cursos em muitas
curvas do carro
custo e potência
cálculos usados em
círculo escuro conectando
círculos claros ligados
código a seguir
código da listagem
código de bibliotecas
código do Eiffel
código executável compondo
código ilustra como
código logo abaixo
cópia de 
cópia de umastring
cópia de umasubstring
dada na Figura
dada na Listagem
dada na listagem
dada replace_substring_all substitui
dadas na descrição
dadas por duas
dado na Figura
dado na listagem
dado no modelo
dados como parâmetros
dados consiste em
dados contidas nesta
dados da classe
dados da luz
dados de entrada
dados de saída
dados definiu propriedades
dados disponível em
dados e algoritmos
dados e comportamento
dados e servem
dados em particular
dados fornecem poderosas
dados na classe
dados next_line 
dados para armazenamento
dados para representação
dados permitiria somente
dados proporcionam poderosas
dados servem como
daqui em diante
darenda_dedutivelse o rendimento
das bibliotecas existentes
das bibliotecas padrão
das características essenciais
das ciências requerem
das declarações dentro
das diferentes açõesincrementarefetuadas
das linguagens funcionais
das melhores características
das muitas rotinas
das nuvens sólidas
das propriedades visuais
das relações hierárquicas
das rotinas nas
das três classes
dastring dada replace_substring_all
datilografada no teclado
declarados como sendo
declaração de objetos
declaração de tais
declaração index65536 representa
declaração_de_objetos do 
decola else 
decola end Outra
decomposição de dados
decomposição de funções
decomposição funcional 
decriar da classe
decriar da classePONTO
dedução e resolução
default e atribuições
default feature 
define a classe
define atributos gerais
define o objeto
definem o comportamento
definem objetos ordinários
definida para serem
definida por bordas
definidas geralmente em
definidas na classe
definidas nesta biblioteca
definido e discutido
definidos na classe
definidos no modelo
definir a classe
definiu propriedades singulares
definição acima sugere
definição dada acima
definição de abstração
definição de objetos
deinformação e atributos
deixando o antigo
deixem-me dizer porque
deixemos a entidadecontador_de_carrosrepresentar
delimitadoresdo e end
deloop para aproximar
demeu_carro para seu_carro
demeu_vetorcontendo três veículos
demostra a relação
denominada linguagem híbrida
dentro da classe
dentro da nuvem
dentro da programação
dentro de umprograma
dentro do loop
dentro dos limites
depende das metas
dependem da informação
dependente da presença
depositar a soma
deresultadoem três unidades
desafio de dominar
desanexado de qualquer
descoberta de classes
descreve a construção
descreve o vetordadosdepois
descrever a arquitetura
descrever o propósito
descrita na seção
descrito na figura
descritos no modelo
descrição da classe
descrição de classe
descrição do objeto
descrição do problema
descrição e modelagem
desde o começo
desde o início
deseja alocar memória
desejado do software
desejado incrementar oresultadodo
desejamos adicionar dois
desejamos construir envolve
desejar acrescentar algumas
deseje desenvolver novas
desejáveis em umastring
desempenho da execução
desencoraja a solução
desenhar figuras geométricas
desenho mal feito
desenvolvedor da classe
desenvolver a habilidade
desenvolver novas aplicações
desenvolver tal abstração
desenvolvida na Noruega
desenvolvida no começo
desenvolvida no nível
desenvolvida por outros
desenvolvidas nos últimos
desenvolvidas para apoiar
desenvolvidos em linguagem
desenvolvimento da linguagem
desenvolvimento de software
desenvolvimento desoftwarealtamente individual
desenvolvimento desoftwarefoi feita
desenvolvimento desoftwarenão começa
desoftware normalmente disponíveis
desoftwarecontendo vários objetos
desoftwarenão começa escrevendo-se
desoftwareé visto como
dessa última operação
dessas duas no
dessas linguagens suporta
dessas operações menores
dessas partes constituintes
desta linha indica
destas duas linguagens
destas expressões envolvem
deste livro acredita
deste livro considera
deste livro podem
deste simples exemplo
destes componentes desoftwareé
destes objetos evoluem
destino extend adiciona
destringssão fornecidos abaixo
destruindo objetos Programas
destruído o espaço
detalham precisamente quais
detalhar a fase
detalhes a respeito
detalhes das três
detalhes de baixo
detalhes de implementação
detalhes de interface
detalhes de programação
detalhes definidos no
detalhes no capítulo
detectado no programa
determina o nível
determinadastring fill_blank 
determinadastring left_adjust 
determinadastring prepend adiciona
determinadastring put 
determinadastring set impróprio
determinado caracter replace_substring
determinado tamanho 
determinados do texto
determinar a ação
determinar o local
determinar o modelo
deve estar no
deve estudar cuidadosamente
deve unificar formato
devem estar acompanhados
devem fazer sentido
diagrama de Booch
diagrama de cenário
diagrama de classe
diagrama de classes
diagramas de circuitos
diante chamados deatributos
diferencial e outras
diferente de desenvolvimento
diferente de números
diferente de onde
diferente do ponto
diferente dos valores
diferentes açõesincrementarefetuadas em
diferentes na mesma
diferentes tipos trabalhando
diferentes trabalhando juntos
diferenças de aspecto
difíceis de serem
digitar o código
diminuir a velocidade
dinamicamente o tamanho
dinâmico da classe
direcionadas das subclasses
direto à programação
direção da generalização
disciplina inicial em
discussão e raciocínio
discutidas e ilustradas
discutido na sessão
discutido na seção
discutido no próximo
discutir aqui share
discutiremos diversos métodos
dispendiosas ferramentas desoftwarepara
disponibiliza o resultado
disponíveis para programadores
dispositivo de armazenamento
dispositivo de entrada
dispositivo de saída
distinta da abordagem
distinto do modelo
disto poder tomar
distraem do objetivo
distribuição e reunião
distribuição e reuso
diversas seções seguintes
diversos métodos importantes
dividida em menores
dividida em operações
dividida em várias
dividido em pequeno
dizer porque C++
documentos de apoio
dois componentes principais
dois nomes diferentes
dois objetos independentes
dois parâmetros decriar
dois pontos representam
dois primeiros elementos
domeu_ojetocomo o quarto
dominantes da época
domínio do problema
doshort na classe
double da entrada
duas classes IMPOSTO
duas classes diferentes
duas linguagens baseadas
duas linguagens orientadas
duas mensagens acima
duas no momento
duas vezes maior
duasstringscontém a mesma
década de 50
década de 60
década de 70
décadas de 70
editor de programa
editor de textos
editor então gera
editores de programa
editores de programas
efetuados na luz
efetuar em tal
efetuar nenhuma tarefa
eficiente no processo
eficiência para modificá-la
elaborada classificação hierárquica
elegante e talvez
elemento do princípio
elemento do vetor
elemento em particular
elemento na posição
elemento new_line 
elemento unificado cujo
elementos do princípio
elementos do problema
elementos do vetore
elementos em cada
elementos nos vetores
elevador Discutiremos alguns
elevador e deseja
else bloco_2 end
else comando3 end
else comando4 end
else if expressão2
elseif expressão2 then
elseif expressão3 then
embora existam três
embrulhado em embalagem
embutido e considerado
emergiram várias novas
encapsulamento bem como
encapsulamento de atributos
encapsulamento de valores
encerra o loop
encontradas nas outras
encontradas no corpo
encontrado na maioria
encontrados na classe
encontrará no nível
end - class
end A expressãoelse
end A instrução
end A parte
end Função
end O comando
end O comandoif-then-else
end Outra estrutura
end and then
end end 
end end end
end end imprimir
end if dadositem
end interface 
end ionew_line 
end ionew_line end
endereço único dito
enfatiza a programação
enfatizar abstrações na
enfatizar o contorno
enfatizar o formato
enfocar em detalhes
engenharia e ciências
engenheiro de software
engenheiro deve unificar
engenheiro irá enfatizar
engenheiros precisam desenvolver
enquanto o parâmetrocustoé
enquanto o programa
enquanto outras linguagens
ent re objetos
entender e possivelmente
entendimento e modelagem
entendimento para outro
entidade única apesar
entidades da ciência
entidades do problema
entidades lógicas auto-suficientes
entidades no aplicativo
entra no elevador
entrada de dados
entrada e saída
entrada padrão 
entrada padrão readchar
entrada usados sãoreadint
entradas e saídas
entrando no elevador
entrar no bloco
entusiasmo na solução
entusiasmo para carros
então compara 
então o maior
envergadura de asa
enviada nos dois
enviadas a cada
enviando a mensagemcaminhao_chegapara
envolve a construção
envolve a descoberta
envolve análise edesign
envolve dois componentes
envolvem a reação
envolvem muitos objetos
envolvem o envio
envolvem vários objetos
envolvendo o ato
eproximo_termo para 05
erelação de uso
erro de arredondamento
erro de tempo
erro em qualquer
erro no layout
erros de formatação
erros de identação
esboço mal feito
escapamento e componentes
escolhida para apoiar
escrevendo-se o código
escrever umastring out
escrita de programas
escrita deste livro
escritas de acordo
escritas em LISP
escrito em linguagem
escritos em itálico
esforço culminou no
esforço por causa
esforços no sentido
espaço alocado count
espaço em branco
espaço na memória
espaço para acomodar
espaço para no
espaços iniciais em
especial de vetor
especial de veículo
especialização da classe
especifica a informação
especifica no texto
especificado resize realoca
especificados em duas
especificação de tal
especificação dos comandos
especificações do problema
especifico das linguagens
específica em conjunto
específicas dastring dada
específico aparece em
específico de caracteres
específico de espaços
específico item_code código
específico prune_all 
específico remove remove
específico substring_index posição
espelho da primeira
espécies de organismos
esquerda da posição
esquerda do índice
esquerdo dado porum_ponto
essenciais do carro
essencial do carro
essencial na descoberta
essencial para grande
estado da situação
estado da subclasse
estado do objeto
estados internos verde
estar baseada na
estar fazendo qualquer
estar inscritos em
estar intimamente relacionada
estar querendo aprender
estações de trabalho
estratégia altamente recomendável
estrutura de controle
estrutura de sintaxe
estruturada na mesma
estruturada para resolução
estruturados apresentados por
estruturas de controle
estruturas de dados
estruturas de informações
estudante de ciência
estudante de física
estudantes terminam tal
estudioso da tecnologia
estudo de complexidade
estudo de programação
estática da classe
estático da classe
evento de contagem
evento na figura
eventualmente tornarão ascondições_de_saída_do_loop
evitar o uso
examinar a funcionalidade
examinaremos outros exemplos
excesso de 22000
exceto osn últimos
exceção de alguns
exclusivamente orientada por
executadas de maneira
executado baseado na
executado em conjunto
executado o comando2
executado o comando3
executados no objeto
execute a ação
executável de código
execução da rotinacomeceé
execução das declarações
execução do loop
execução do programa
execução do software
exemplo da classe
exemplo de modelo
exemplos destringssão fornecidos
exemplos para ilustrar
exercita a classe
exercite algumas destas
exibida na saída
exibindo a classe
existam três objetos
existe na memória
existem em duas
existente para desenvolver
existência ocorre por
experiência de vida
explica o orientação
explorado e introduzido
explorados nesta sessão
exploração muitos princípios
expressão c//b apenas
expressão do tipoboolean
expressão do tipoif
expressão1 then comando1
expressão2 then comando2
expressão3 then comando3
expressão_booleana then bloco_1
expressãoelse na construção
externa como suporte
externa da classe
externa dos dados
externa enviada nos
externas do TAD
externos de entrada
extrair características essenciais
faixas diferentes na
falar a respeito
falta de segurança
familiar e confortável
fascinação parece estar
fase de projeto
favor restrinja-se no
faz a identação
faz o papel
faz o projeto
fazemos contas em
fazendo qualquer coisa
fazer o objetomeu_carroexistir
fazer sentido como
feature comece is
feature inicio is
feature relatório
feature specification 
feitas no modelo
feito da seguinte
feitos a partir
feitos esforços no
feitos no desenvolvimento
ferramenta de pesquisa
ferramentas comuns desoftware
ferramentas de softwarepara
ferramentas desoftwarepara auxiliar
fez algumas pesquisas
fica atrás dessas
fica escrito acima
fica na hierarquia
ficar claro nessa
ficou o vetor
figura 21 mostra
figura 25 mostra
figura 26 mostra
figura 28 demostra
figura 310 descreve
figura 311 mostra
figura 312 mostra
figura 32 mostra
figura 33 representa
figura 36 mostra
figura 37 retrata
figura 38 mostra
figura 39 descreve
figura inclui objetos
figuras geométricas na
fim da década
fim da saída
fim de apreciar
fim deste livro
final da linha
final da saída
final de outra
final de saída
final desta linha
final do processo
final dos anos
finalidade de traduzir
finita de armazenamento
fluxo e repetição
fonte para astring
forma a parte
forma descrita na
forma desta estrutura
forma geral das
forma para outra
formais para escrita
formal de educação
formal e demonstrar
formando a base
formato e comportamento
formular abstrações nestas
fornecem o vetor
fornecem poderosas abstrações
fornecem valores externos
fortemente influenciado por
frente do objeto
frente no livro
freqüentemente embrulhado em
fricção dos pneus
funcionais para produzir
funcionalidade da classe
funcionamento do carro
funcionamento do monitor
fundamentais de programação
fundamentais dedesigne análise
fundamental da computação
fundamental da programação
fundamental para classificação
função de consulta
função de consultaimposto_devidoé
funções chamadas consultas
física precisa aprender
físicas e comportamentais
ganhando popularidade rapidamente
gasta em diversas
generalizações de maneira
geometria de cada
geométrica definida por
geométricas na tela
gera o resto
gerais e comportamento
geral das construções
geral de armazenamento
geral do Eiffel
geral e ciência
geralmente aconselhável usar
geralmente baseada na
geralmente em duas
geralmente menos manobrável
geração de documentos
gerações de programadores
grande e pesado
granularidade na modelagem
grupo de objetos
gráfica da classe
gráficas de usuário
gráfico tipicamente encontrado
guia do usuário
habilidade de definir
habilidade de identificar
habilidades de reconhecimento
has astring inclui
herança para classes
herdada da classe
herdados da classe
hierarquia da classe
hierarquia de classes
hierarquia de herança
hierarquia de veículos
hierárquica de espécies
hierárquicas das classes
humanos a habilidade
hábeis em obter
identação do texto
identação na listagem
identidade d aro
identifica-se precisamente classes
identificadas na análise
ideologia do C
idéias anteriores construindo
idéias de Alan
iguais tome alguma
igual a 10
igual a 50
igual a b
igual a zero
ilegal para enviar
ilustra a importância
ilustradas a seguir
ilustrado na seção
ilustrar o conceito
ilustrar o modelo
ilustrar o uso
implementação da rotina
implementação e revela
implica em armazenamento
implica em especialização
importante componente reusável
importante de bibliotecas
importante de consistência
importante em programação
importante primeiro tornar-se
importantes de computação
importantes de ordenação
importantes do Eiffel
importantes na determinação
importância da programação
importância de permitir
importância o interior
imposto baseada no
imposto_devido para retornar
impostos a pagar
impróprio para detalhar
impróprio para discutir
incluem o valor
incluem sistemas operacionais
incluem tal aritmética
inclui o comprimento
incluir a contagem
incluída na descrição
incluído no modelo
incrementar oresultadodo objeto
incrementarpara o objetocontador_de_carros
incremento da linguagem
index recebe index
index65536 loop index
index_of posição
indicam a relação
indicam a seqüência
indice1000000 condição
individuais de umastring
individual e robusto
infinito de casas
influenciado de forma
informa o tempo
informação contida no
informação datilografada no
informação de interface
informação do objeto
informação externa enviada
informação externa requerida
informações contidas no
informações da interface
informações do objeto
inglês Computer Aided
inherit VEÍCULO 
inicia a aplicação
iniciais em umastring
inicial de programação
inicial de três
inicial destes componentes
inicial em ciência
inicializar o objeto
inicialização do loop
inicialização dos atributos
inicialmente valores padrão
iniciar a execução
iniciar o desafio
inicio contém somente
inicio feature inicio
inicio is local
inovadoras no modelo
inseridos no vetor
inserir caracteres nastring
inserir valores inteiros
inspecionar a interface
inspecionar o código
inspecionar outra parte
instrumento de análise
instruções de baixo
instruções de inicialização
instruções fornecidas no
instruções_de_inicialização Until condições_de_saída_do_loop
instância da classe
instância de COR_DE_LUZ
instância de classe
instância de umaclasse
instâncias da classe
instâncias de CARRO
instâncias de classes
instâncias de objetos
instâncias de verdade
instâncias na classe
integra várias partes
integração de componentes
inteiro da entrada
inteiro do índice
inteiros de tamanho
inteiros do índice
inteiros nas posições
inteiros no índice
inteiroslimite_inferior e limite_superiorespecificam
intenção de aumentar
interagindo de maneira
interconectada de unidades
interessado por computadores
interesse e entusiasmo
interface STANDARD_FILES feature
interface STD_FILES feature
interface da classe
interface da rotina
interface das bibliotecas
interface desta classe
interface deste apêndice
interface gráfica extremamente
interfase para classe
interior do objeto
interior dos TADs
interligadas e cooperando
interna do objetoio
interno da luz
interno do carro
interno do objeto
internos de cada
internos do TAD
internos dos objetos
interrompida em lugares
introdutória deste livro
introduz a modelagem
introduzidos no capítulo
inverte a ordem
invocar a rotinacopysobre
invés da decomposição
ionew_line A instrução
ionew_line Obtém
ionew_line end end
iriam querer ler
item_code código numérico
itálico e em
janela no vídeo
jogo de rodas
juntos para alcançar
juntos para atingir
juros do empréstimo
laboratórios de pesquisa
lançada comercialmente em
largamente usada em
largura da janela
lastchar e lastreal
legal do índice
leitor deve consultar
leitor deve estudar
leitores deste livro
leitores podem estar
leitura ioreadchar 
leitura ioreadreal 
ler a linguagem
letras maiúsculas substring
letras usadas descrevem
leva à introdução
liberado e poderá
ligado à mesma
ligados à classe
ligados à mesma
like Current 
limitada por aspas
limite_superiorespecificam a variação
linguagem Eiffel permita
linguagem de alto
linguagem de baixo
linguagem de cálculos
linguagem de diagramas
linguagem de maquina
linguagem de máquina
linguagem de programação
linguagem de símbolos
linguagem nasceu no
linguagem orientada por
linguagem para usar
linguagem precisa chamada
linguagem totalmente orientada
linguagem usa seqüências
linguagem visava proporcionar
linguagens assembly modernas
linguagens baseadas em
linguagens de alto
linguagens de máquina
linguagens de programação
linguagens orientadas por
linguagens para expressar
linguagens procedurais como
linguagens procedurais populares
linguagens suporta herança
linha da entrada
linha especifica no
linha na entrada
linha na saída
linha no fim
linhas de código
linhas do código
lista de algumas
lista de nomes
lista de parâmetros
lista relativamente pequena
listagem 21 agiu
listagem 32 mostra
listagem 35 exibe
listagem 36 nos
listagens de programa
livre para fazer
livro inspire em
livro introduzirá técnicas
livro o faz
livro podem estar
livro visa propiciar
local a outro
local de armazenamento
local para armazenarmeu_carro
local único no
localiza a palavra
logo seguida por
loop continuará indefinidamente
loop corpo_do_loop end
loop corretamente construído
loop e end
loop loop 
lugar seguro por
lugares 211 Objetos
lugares pré- determinados
luz deve permitir
lógica do encapsulamento
lógica e legível
maior dos três
maior na posição
maioria das aplicações
maioria das ciências
maioria das estações
maioria das linguagens
maioria dos editores
maioria dos programadores
maiúsculas para classes
maiúsculos em minúsculos
make aloca espaço
maneira o loop
maneira orientada por
maneiras nas quais
manter o controle
mantida em cada
manual de instruções
manutenção de rotina
mapeados em componentes
massa do carro
matemática e científica
meados de 1970
meados de 1980
mecanismo de interface
mecanismos para solução
meio de vida
melhoramentos em capacidade
melhores características encontradas
melhorias em eficiência
memória alocada count
memória cachede alta
memória corretamente alocada
memória de acesso
memória do computador
memória e atribuição
menor na posição
menores e menos
menos complexas operações
menos guiá- lo
menos o número
menos osn primeiros
mensagem novamente str1mirror
mensagemcaminhao_chegapara o objeto
mensagemcarro_chegapara o objetoposto_de_pedagio
mensagemincrementarpara o objetocontador_de_caminhoes
mensagens O diagrama
mensagens acima dependem
mesas e cadeiras
meses do empréstimo
mesmos tome alguma
metas do problema
metáfora do nome-verbo
meu_carro A figura
meu_valor/seu_valor then 
meu_valorseu_valor then 
minúsculos em maiúsculos
minúsculos to_real 
misto de solução
mistura de programação
modelados como classes
modelagem de algum
modelagem de como
modelagem de objetos
modelagem de quaisquer
modelagem do problema
modelagem e compreensão
modelo a identidade
modelo de análise
modelo de comportamento
modelo de comércio
modelo de dados
modelo de objeto
modelo de objetos
modelo depende das
modelo do objeto
modelos de carro
modelos de dados
modelos e idéias
modernas suportam estruturas
moderno de estações
modificada da classe
modificado apenas através
modificado de cenário
modificado para 2500
modificá-la na versão
modo diferente precisa
momento da escrita
monitor de vídeo
mostra a atribuição
mostra a hierarquia
mostra como ficou
mostra o elemento
mostra parte destes
mostrada na Figura
mostrada na figura
mostrada na tela
mostrada no diagrama
mostradas e comentadas
mostradas em negrito
mostrado na Figura
mostrado na Listagem
mostrado na figura
mostrado nos três
mostrado por três
mostrados através das
mostrados end 
mostrados na Figura
mostrados na figura
mostrados na listagem
mostrar novos dados
mostrar o nome
motor de combustão
mouse como aparelho
move o marcador
muda elemento new_line
muda o tamanho
muda o valor
mudam o estado
mudança de linha
mudança no texto
mudar o valor
mude o estado
muitas rotinas definidas
muitas subclasses devem
muitos ainda consideram
muitos carros chegam
muitos outros componentes
muitos princípios importantes
mundo de cachorros
mundo do desenvolvimento
máquina e ciência
máquina e engenharia
máximo nb_char
mãe devem fazer
métodos e técnicas
nasceu no final
nastring em diferentes
nastring mirrored 
naturais e artificiais
naturais e engenharia
natural de associação
natural de classificar
natural para solução
natureza dos objetos
natureza introdutória deste
natureza preliminar deste
necessários nas classes
nenhuma tarefa proveitosa
nesse caso programação
nesse objeto usando
nesta hierarquia deverá
neste livro representa
nome da classe
nome da rotina
nome dado dentro
nome de classe
nome de objeto
nome de variável
nome do objeto
nome do objetomeu_carro
nome do objetomeu_carroanexado
nome do usuário
nome do vetor
nome e 
nome na tela
nome- substantivo Introduziremos
nome-verbo e nome
nome_rotina O nome
nomes de objetos
nomes de pessoas
nomes dos objetos
notação acima sugere
notação de Booch
notação para realizar
notação para representar
notações e linguagens
nova do desenvolvimento
novamente o modelo
novamente str1mirror ioput_string
novas linguagens orientadas
novas right_adjust 
novo serviçoincrementar_emé mostrado
noção de função
num índice especificadoé
numera quantas vezes
numérico de caracter
numéricos de umastring
nuvem de Booch
nuvem pontilhada representa
nuvem sólida representa
nível de análise
nível de detalhes
nível do modelo
nível e técnicas
nível em linguagem
número atual
número da série
número de aviões
número de caracteres
número de expressões
número de meses
número de pagamentos
número de pistões
número de série
número de vezes
número de veículos
número do array
número especificado resize
números a serem
números crescentes nas
números e depositar
números no vetor
objetivo de aprender
objeto CONTADOR em
objeto CONTADOR por
objeto Na figura
objeto STRING has
objeto Vamos considerar
objeto citado incrementou
objeto contador_de_carrosa mensagemaumentar_valor_em_tres
objeto cujas propriedades
objeto da classe
objeto dado na
objeto de Booch
objeto de destino
objeto de origem
objeto do lado
objeto em Eiffel
objeto em questão
objeto envolve determinar
objeto existe na
objeto menos conhecidas
objeto na classe
objeto na memória
objeto ordinário éVoid
objeto por conhecer
objeto temdadose comportamento
objeto vista neste
objetoposto_de_pedagioemitindo a mensagemincrementarpara
objetoposto_de_pedagioenviando a mensagem
objetos A palavra
objetos CONTADOR distintos
objetos CONTADOR no
objetos Modula-2
objetos Raramente nos
objetos baseando no
objetos causam alocação
objetos da classe
objetos de Eiffel
objetos de diferentes
objetos de importância
objetos de outras
objetos de problemas
objetos de tipos
objetos desenvolvidas nos
objetos e classes
objetos e estruturada
objetos e mensagens
objetos em Eiffel
objetos em maiores
objetos envolve dois
objetos envolvem muitos
objetos envolvem vários
objetos envolvidos em
objetos evoluem dinamicamente
objetos nos capítulos
objetos à medida
objetoscontador_de_carrose contador_de_caminhoessão instâncias
objetoseu_carroda seção anterior
objetosx e y
objetouma_pessoaenviando a mensagemapertar
objetouma_pessoamandando a mensagementrar
objetouma_pessoamandando a mensagemselecionar_botãopara
observação do mundo
obter algumas características
obter aspectos numéricos
obter várias partes
obtida no programa
ocomportamento do objeto
ocorre neste caso
ocorre por padrão
ocorrência da letra
ocorrência da substring
ocorrência de outrastring
ocorrências de certastring
ocorência de 
oi-ésimo caracter wipe_out
omissão de dados
onde a classe
onde dez ações
onde o carro
onde o elevador
onde o objeto
onde o usuário
operador de atribuição
operador de criação
operador lógico binário
operadores de curto
operação de cópia
operação de troca
operação lógica fundamental
operação nesse objeto
operação no objeto
operaçãoprossigamuda a cor
operações a serem
operações de atribuição
operações de comparação
operações de entrada
operações e conexões
operações menores ainda
operações pré- definidas
operações semelhantes comosearch
oportunidade de formular
oportuno o processo
ordem de execução
ordem dos caracteres
ordenação no Capítulo
ordene_3é a próxima
ordinário a outro
oresultadodo objeto CONTADOR
organismos vivosbaseados em
organização orientada por
orienta por objetos
orientada por objeto
orientada por objetos
orientadas por objeto
orientadas por objetos
orientado por objeto
orientado por objetos
orientados por objetos
orientação por objeto
orientação por objetos
original tail 
os_dadoscount loop índice
osn primeiros caracteres
outra aplicação vamos
outra copy transfere
outra mirror 
outra substring 
outras classes importantes
outras linguagens orientadas
outras matemáticas avançadas
outrastring contida nastring
outrastring para posições
outro caso onde
outro dado 
outro objeto CONTADOR
outros componentes essenciais
outros objetos criados
outros por causa
padrão Disponibiliza
padrão chamada ARRAY
padrão de Void
padrão de entrada
padrão de formatação
padrão disponibiliza
padrão readchar 
pai define atributos
palavra chave em
palavra da entrada
palavra herança sugere
palavra no texto
palavra paradigma significa
palavras o significado
palavras reservadas na
palavras técnicas importantes
papel dos dois
papel essencial na
par de aspas
par de parênteses
paradigma da programação
paradigma orientado por
paradigmas de programação
paraelevador Cada nuvem
parar e considerar
parece estar baseada
parte da classe
parte de inicialização
parte de interface
parte destes detalhes
parte do comportamento
parte do estado
parte do processo
partes da construção
partes de umastring
partes do elevador
partes do objeto
partes e seções
particular baseados em
particular do prédio
particular envolve modelagem
partir de outros
parâmetros nas várias
parâmetrospeso e potencia
parênteses vazios perto
passo a passo
passos fundamentais envolvendo
passos tradicionais no
pedal do acelerador
pedal do freio
pedaço potencialmente reutilizável
pedra de diamante
pedágio da ponte
pequeno e leve
pequeno erro em
percepção dos objetos
permita alguém definir
permite a integração
permitiria somente três
perspectiva orientada por
perto de cada
período de tempo
pesado geralmente requer
pesquisa na área
pesquisas inovadoras no
pessoa entra em
pessoa entra no
pessoa entrando no
pessoas ouvem falar
pisar no pedal
pista de pouso
planador e mobilete
planejamento vem primeiro
plano e detectando
pneus e coeficiente
podem coexistir tanto
podem compartilhar certos
podem estar inscritos
podem estar querendo
podemos citar Objective-C
podemos efetuar em
podemos executar em
podemos nunca desenvolver
podemos rapidamente desenvolver
poder aquisitivo aumentam
poder tomar algum
poderosos e complexos
ponteiros e referências
ponto de coordenadasx
ponto de entrada
ponto de vista
popular no últimos
populares usadas hoje
popularidade de C++
porque a possibilidade
porum_ponto e comprimento
porção da interface
porção de código
porção do comportamento
positivo e c
positivo e c//b
posição da primeira
posição de ocorrência
posição do cursor
posição i
posições específicas dastring
possa imprimir caracteres
possibilidade para fazer
possibilite o aumento
possivelmente desenvolvida por
possuem operações semelhantes
possível to_integer 
possível to_upper 
posto de pedágio
postos em classes
pouco das relações
praticantes para expressem
precisa acessar somente
precisa aprender matemática
precisa chamada linguagem
precisa desenhar figuras
precisa dos serviços
precisam desenvolver tal
precisamente classes adicionais
precisamente o sentido
precisamente quais serviços
precisar realizar operações
precisas para computação
precoA classe CARRO
preliminar deste livro
prepend adiciona umastring
presente nas unidades
presentes no pai
previstas somente em
preço de tabela
primeira to_double converte
primeiras ações iniciam
primeiras linguagens procedurais
primeiro caso dado
primeiro comando cria
primeiro programa ""
primeiro tornar-se eficiente
primeiros caracteres insert
primeiros computadores somente
principais de linguagem
principais identificadas na
principal do capítulo
principal para classificação
principalmente para computação
princípio cada módulo
princípio de consistência
princípio de ignorar
princípio decomposição construindo
princípio do encapsulamento
princípios da programação
problema a fim
problema da ordenação
problema dado deve
problema dado devem
problema em funções
problema especificado corretamente
problema sendo resolvido
problema sofram mudanças
problemas de maneira
problemas e proporcione
problemas orientada por
problemas orientado por
problemas reais após
problemas usando objetos
procedurais a fornecer
procedurais como C
processador de texto
processadores de texto
processamento de dados
processamento de listas
processamento de textos
processo de aprendizagem
processo de classificação
processo de coleta
processo de criação
processo de desenvolvimento
processo de engenharia
processo de interação
processo de resolução
processo de solução
processo de transformação
processo intelectual associado
procura e altera
produto freqüentemente embrulhado
produtor e consumidor
produzido em local
produzindo algumas classes
produzirá 1230 to_upper
profilers e browsers
programa ""
programa "" monolítico
programa bem escrito
programa consiste em
programa de Eiffel
programa de alguém
programa de computador
programa de simulação
programa deverá mostrar
programa em Eiffel
programa em desenvolvimento
programa escrito em
programa especifico das
programa executado em
programa gasta em
programa orientado por
programa poder funcionar
programa tipicamente parece
programa transfere informação
programador a possibilidade
programador cujo objetivo
programador deEiffel fazer
programador possa imprimir
programador simular TADs
programados usando linguagem
programar neste capítulo
programas de aplicações
programas de sistemas
programas desenvolvidos em
programas em Eiffel
programas orientados por
programas possuem operações
programação Três categorias
programação de alto
programação e enfatiza
programação e projetou
programação em Eiffel
programação em Windows
programação estruturada quanto
programação exclusivamente orientada
programação lógica exemplificada
programação orientada por
programação para ajudar
projetista do Eiffel
projeto e analise
projetos de software
propensas a erros
proporcionam a oportunidade
proporcionam poderosas abstrações
propriedades deste importante
propriedades visuais abstratas
propósito da rotina
propósito e mostre
propósitos deste simples
prossiga A operaçãomuda_cor
protegido de corrupções
providenciar qualquer inicialização
providencie três rotinas
pré-determinado de caracteres
próprio de instruções
próprio objeto CONTADOR
próxima linha na
próximo capítulo explica
próximo exemplo suponha
put_stringe new_linequando enviados
quadrado no final
quaisquer outros objetos
qualquer mudança no
qualquer outra coisa
qualquer outro nome
qualquer outro objeto
quantia end 
quantidade como 1/3
quantidade de memória
quanto a programação
quanto engenheiros precisam
quarto dos cinco
quase qualquer coisa
quemeu_carrotivesse sido criado
queremos continuar adicionando
queremos inserir valores
raciocinar em cima
raiz da aplicação
raiz nesta hierarquia
raça de cães
readchar lê
readdouble lê
readint lê
readline lê
readreal lê
readword lê
real bem como
real da entrada
real na garagem
realiza alguma ação
realizada nesses dados
realizado no desenvolvimento
realizados no objeto
realizando ações em
realizar operações matemáticas
realizar tarefas úteis
reação do veículo
recebe index vezes
recebendo a ação
receber qualquer comando
reconhecer a enorme
reconhecimento de padrões
referentes à forma
referir a quase
refletindo a capacidade
registrar o número
região de memória
região geométrica definida
regras de sintaxe
reinventar a roda
relacionado de operações
relacionados de alguma
relacionamento de uso
relatório de status
relação de associação
relação de associaçãoé
relação de uso
relações de associação
relações de generalização
relações de herança
relações hierárquicas das
remove a primeira
remove oi-ésimo caracter
remove remove oi-ésimo
renda dedutível atual
renda ultrapassa 22000
renda_dedutivel do if
renda_dedutivel else Result
renda_dedutivel para retornar
replace_substring copia caracteres
representa a semântica
representa asinstruções_de_inicialização
representa o passo
representa o total
representada no modelo
representado na figura
representados no modelo
representados por classes
representados por declarações
representam a seqüência
representam instruções precisas
representam o corpo
representam o corpo_do_loop
representam o menos
representam o modelo
representam o produto
representar o estado
representação de tipos
requer a avaliação
requerem a entrada
requerida para construir
reservadas na linguagem
resize realoca espaço
resolução de problemas
resolver problemas usando
respeito a cada
respeito de arquivos
respeito do comportamento
respeito do paradigma
responsabilidade do programador
responsabilidades do produtor
responsabilidadesdo objeto CONTADOR
responsável por apenas
resto do livro
restrinja-se no uso
resultado da aplicação
resultado desta expressão
resultado em 
resumo destes serviços
retornada como resultado
retornar informação ioput_real
retornar o tamanho
retornaremos o assunto
retém o valor
reunião de atributos
reuso dos atributos
reusável de software
reutilizado por outros
reutilizável de código
rever o assunto
rica e potente
rico e direto
rigoroso de separação
rodando em segundo
rodas e pneus
rotina de criação
rotina de ordenação
rotina end 
rotina inicio contém
rotina neste capítulo
rotinacloneestá mostrada na
rotinacomeceé a criação
rotinacopyé mostrada na
rotinas dadas na
rotinas de criação
rotinas de ramificação
rotinas de saída
rotinas definidas nesta
rotinas nas seçõesfeaturesão
rotinas para uso
rotineiro e talvez
sala ainda existe
sala de aula
salas de aula
salienta a importância
satisfeita no momento
saída de comandos
saída de dados
saída default feature
saída default put_int
saída default put_real
saída default put_string
saída e entrada
saída e outras
saída padrão put_char
segmento de código
segmento do código
segue o estilo
segue o padrão
seguida por C++
seguidos de dois
seguinte de código
seguinte estado interno
segunda expressão nunca
segundo evento na
segundo menor na
seguro por alguns
semelhanças e diferenças
semântica da rotinacloneestá
semântica da rotinacopyé
semântica de referência
semântica do segmento
sendo denominada linguagem
sendo diferentes exemplos
sendo resolvido determina
sendo umaclasse abstrataem
sendo utilizadas hoje
sentido como parte
sentido de modelar
separa o interior
separado do motor
separação das características
sequência de caracteres
seqüência das ações
seqüência de ações
seqüência de caracteres
seqüência de instruções
seqüências de zeros
serem escritos porque
serem tão importante
serem usadas por
seres humanos possuem
serve como base
serve para contar
serve para iniciar
serviçoincrementar_emé mostrado na
serviços da classe
serviços de saída
serviços descritos no
serviços em torno
serviços para fazer
sete ações restantes
seuresultadoatual e retornar
seção de características
seção de memória
seções de estantes
sido a abordagem
sido agrupadas em
sido largamente usada
sido usada como
sigla LISP significa
significado de valores
significativa a maneira
significativo ""
similar à modelagem
similares de objetos
simples aplicação nos
simples da análise
simples de controle
simples de ramificação
simples e atrativa
simples entidade única
simples para classe
simples para ilustrar
simplificada IMPOSTO cujos
simplificada da realidade
simulacaoenviando a mensagemcarro_chegapara
simulador de tráfego
simulação de tráfego
sintaxe de alguma
sintaxe de linguagem
sintaxe do Eiffel
sintaxe relativamente simples
sistemas ""
sistemas Eiffel proporcionam
sistemas desoftwaresão construídos
sistemas e programas
sistemas visam controlar
sistemático de análise
situado na hierarquia
sob o controle
software e solução
software orientado por
software reutilizável como
softwares Eiffel devem
solicitada comdadosenviado como
solução de problemas
solução de vários
solução do problema
solução orientada por
soma dos valores
soma mostrada na
soma para 10
soma+indice end ioput_string
somente a informação
somente a parte
somente computadores iriam
somente em linguagens
somente o comando
somente três valores
str1 e então
str1 e mensagem
str1 str1mirror str1to_upper
str1mirror str1to_upper ioput_string
string atual put
string contida em
string de no
string para real
string str1 str1mirror
string str2 str2
string true_constant ioput_string
string wipe_out 
strings e valores
subclasse da classe
subclasse de outra
subclasses da classe
subclasses de AVIÃO
subdiretório da classe
subproduto deste trabalho
substitui o valor
substring cópia
substring de str1
sucessão de mensagens
sugere a aquisição
sugere o seguinte
superior esquerdo dado
superior quanto inferior
suporta a noção
suporte para tipos
suporte para vetores
suportes para alguma
system test root
séria de outras
séria e discutiremos
série de janelas
série de operações
série de serviços
série de transformações
símbolos do teclado
sólida em alguns
sólida nos princípios
sólidas de Booch
tabela do carro
tabulações baseado no
tais objetos causam
tal comando em
tal como CARRO
tal como Eiffel
tal como STRING
tal janela inclui
tamanho de umastring
tamanho e complexidade
tamanho para acomodar
tanto a objeto
tanto a programação
tanto orientado por
tanto superior quanto
tarde em listagens
tarde nesse capítulo
taxa de juros
teclado como 
tecnologia de linguagens
tempo de execução
tendo algumas aplicações
tendência de enfatizar
tentador fazerreadint retornar
tentamos extrair características
teoria das linguagens
terceiro evento exibido
terminais de computador
terminal de vídeo
terminam tal curso
termo em associação
termodinâmicas da combustão
test root aplication
teste lógico requer
teste para ver
texto da outrastring
texto de outrastring
texto do programa
textos e gráficos
textura e cor
teórica quanto aplicada
teórica quanto prática
then bloco_1 else
then comando1 else
then comando1 elseif
then comando2 else
then comando2 elseif
then comando3 else
tipicamente definido por
tipicamente encontrado na
tipicamente realizada nesses
tipoif x/y poderia
tipos básicos 35
tipos básicos INTEGER
tipos básicos apresentados
tipos básicos recebe
tipos de classe
tipos de problemas
tipos de referência
tipos de relação
tipos de veículos
tipos diferentes trabalhando
tipos trabalhando juntos
transmissão do carro
transportado para outro
tratamos umastring como
tratável em tamanho
troca o atributox
tráfego para manter
trás das operações
três contadores em
três exemplos acima
três expressões acima
três inteiros no
três maneiras diferentes
três números conforme
três objetos CONTADOR
três parâmetros decriar
três primeiras ações
tubo de vídeo
tão importante em
tão teórica quanto
técnicas de dedução
técnicas de resolução
técnicas para projeto
típica aplicação inicial
típica linguagem assembly
uma_expressão_booleana then comando
umaclasse abstrataem contraste
umastring adapt_size muda
umastring append adiciona
umastring capacity espaço
umastring na frente
umastring occurrences número
umastring out 
umastring para outra
umastring precede adiciona
umastring prune 
umastring à esquerda
umprograma e interagem
une a classe
unidade básica física
unidade básica lógica
unidades algumas vezes
unidades de processamento
unificado cujo propósito
uns dos outros
until index65536 loop
until indice1000000 
unário para negação
usada em aplicativos
usada em assertivas
usada neste livro
usada para acessar
usada para adquirir
usada para copiar
usada para criar
usada para discussão
usada para escrever
usada para modificar
usada para mudar
usada para obter
usada para produzir
usada para remover
usada para significar
usadas como base
usadas letras maiúsculas
usadas na área
usadas por outras
usadas por outros
usadas rotinas importante
usado na construção
usado para administrar
usado para criar
usado para descrever
usado para dizer
usado para gerenciar
usado para registrar
usados para armazenar
usados para mostrar
usados para representar
usam a linguagem
usam caracteres alfabéticos
usam para resolução
usamosstrings para nomes
usando a consultaitemdearray
usando a rotinaclone
usando o atributo
usando o comando
usando o comandocriar
usando o computador
usando o operador
usando o resultado
usar na solução
usar o seguinte
usar para representar
usar recursos disponíveis
usar tal notação
use a rotina
use o atributo
use o comando
uso Muitas vezes
uso da biblioteca
uso da classe
uso das bibliotecas
uso de acentos
uso de componentes
uso de palavras
uso desta classe
uso destas duas
uso e relações
uso o novo
uso para zero
uso por outras
usualmente baseada na
usualmente vêm acompanhados
usuário deve substituir
usuário e computador
usuário e outros
usuário no terminal
usuário transfere informação
utiliza algumas das
utilizadas hoje embora
utilizado para descrever
utilizarcomandosou consultasde outros
valor 40000 usando
valor antigo deindex
valor corrente deproximo_termo
valor da consulta
valor da renda
valor da string
valor de caracter
valor de empréstimo
valor de soma
valor deproximo_termoé alterado
valor deresultadoem três
valor deste atributo
valor dos dados
valor duas vezes
valor inicial igual
valor inteiro arbitrário
valor inteiro dentro
valor passado altera
valor real r
valor teórico equivale
valor total das
valordefault do caracter
valores dados como
valores de alguns
valores de atributos
valores de várias
valores dos atributos
valores dos números
valores e serviços
valores inteiros nas
vantagem do uso
vantagem no uso
variedade de notações
variedade de tarefas
variável c representa
vaso de flor
velocidade do carro
velocidade e armazenamento
velocidade_maxima e preco
ver figura 31
verificado através das
verificar o valor
vermelho do tamanho
verá como inspecionar
verá o processo
vetor de caracteres
vetor de elementos
vetor de números
vetor de veículos
vetor na figura
vetor ondemeu_objetoé inserido
vetordadoscom índice inferior
vetore mostrado na
vetores baseados em
vetores em Eiffel
vezes chamadas módulos
veículo a vários
veículo do problema
veículos incluindo carros
veículos no vetor
vida e poder
virar o volante
vista de 
vista de modelo
vista examinado aqui
vista na seção
vista neste livro
visível e tangível
volume de cada
várias categorias baseadas
várias entidades no
várias linguagens orientadas
várias maneiras nas
várias novas linguagens
várias seçõesfeaturesão mostradas
vários componentes individuais
vários tipos básicos
vídeo e botões
zero A figura
zeros e uns
área de aplicação
área de inteligência
áreas de aplicação
áreas de aplicações
átomo em particular
época incluíam FORTRAN
índice do vetor
índice e outro
índice especificado em
índice especificado por
índice específico item_code
índice específico substring_index
índice inferior igual
índice recebe índice
índices 24
últimos 10 anos
últimos dois operadores
única e completa
única linha executável
único no vetor
