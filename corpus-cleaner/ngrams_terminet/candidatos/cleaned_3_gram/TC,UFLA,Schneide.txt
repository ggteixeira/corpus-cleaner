1.1 Ciência da
Ciência da computação
da computação Muitos
computação Muitos leitores
Muitos leitores deste
leitores deste livro
deste livro podem
livro podem estar
podem estar inscritos
estar inscritos em
primeiro curso de
curso de ciência
de ciência da
ciência da computação
Bem-vindo à ciência
à ciência da
ciência da computação
Outros leitores podem
leitores podem estar
podem estar querendo
estar querendo aprender
assuntos de desenvolvimento
de desenvolvimento de
desenvolvimento de software
de software orientado
software orientado por
orientado por objeto
Bem- vindo a
A palavra paradigma
palavra paradigma significa
elemento em particular.
Random House dictionary
primeiro curso de
curso de ciência
de ciência da
ciência da computação
da computação apresenta
linguagem de programação
de programação e
programação e enfatiza
e enfatiza a
enfatiza a programação
Alguns estudantes terminam
estudantes terminam tal
terminam tal curso
a impressão de
ciência da computação
o estudo de
estudo de programação
Softwareé o produto
o produto final
produto final de
processo de engenharia
análise e projeto
entidade visível e
visível e tangível
conjunto de instruções
computador digital realizar
variedade de tarefas
produto freqüentemente embrulhado
freqüentemente embrulhado em
embrulhado em embalagem
em embalagem bonitinha.Softwareé
linguagem de programação
de programação proporciona
expressar algoritmos e
algoritmos e estruturas
e estruturas de
estruturas de informações
usar tal notação
tal notação para
notação para realizar
para realizar tarefas
realizar tarefas úteis
para muitos cientistas
muitos cientistas da
cientistas da computação
programas representam o
representam o menos
o menos produtivo
rotineiro e talvez
e talvez a
monótona parte do
parte do processo
do processo de
processo de desenvolvimento
de desenvolvimento de
desenvolvimento de software
alguns cientistas da
cientistas da computação
Para outros cientistas
outros cientistas da
cientistas da computação
a criação de
criação de programas
a ciência da
ciência da computação
da computação representa
A teoria das
teoria das linguagens
das linguagens de
linguagens de programação
de programação salienta
programação salienta a
salienta a importância
a importância da
importância da programação
a ciência da
ciência da computação
Ciência da computação
da computação lida
trabalho criativo e
criativo e cálculos
e cálculos usados
cálculos usados em
Ciência da computação
tão teórica quanto
teórica quanto prática
tão teórica quanto
teórica quanto aplicada
Teoria de autômatos
linguagens naturais e
naturais e artificiais
aprendizado e indução
estruturas de dados
estudo de complexidade
de complexidade e
complexidade e algoritmos
e algoritmos desempenham
papel central e
reforço teórico para
a ciência da
ciência da computação
maiores áreas de
áreas de aplicação
de aplicação de
aplicação de ciência
de ciência da
ciência da computação
da computação incluem
computação incluem sistemas
incluem sistemas operacionais
estruturas de dados
de dados e
dados e algoritmos
bases de dados
linguagens de programação
aprendizado de máquina
de máquina e
máquina e engenharia
e engenharia desoftware
estudante de ciência
de ciência da
ciência da computação
estará apto a
cursos em muitas
A maioria das
maioria das ciências
das ciências requerem
praticantes para expressem
Químicos aprendem a
aprendem a linguagem
a linguagem de
linguagem de símbolos
de símbolos químicos
operações e conexões
Físicos usam a
usam a linguagem
a linguagem de
linguagem de cálculos
equação diferencial e
diferencial e outras
e outras matemáticas
outras matemáticas avançadas
matemáticas avançadas para
avançadas para expressar
modelos e idéias
Engenheiros elétricos aprendem
elétricos aprendem a
aprendem a linguagem
a linguagem de
linguagem de diagramas
de diagramas de
diagramas de circuitos
Cientistas da computação
variedade de notações
de notações e
notações e linguagens
e linguagens para
linguagens para expressar
conceitos e produzir
e produzir resultados
estudante de física
de física precisa
física precisa aprender
precisa aprender matemática
aprender matemática básica
matemática básica para
usada para discussão
para discussão e
discussão e raciocínio
estudante de ciência
de ciência da
ciência da computação
da computação precisa
computação precisa aprender
linguagem de programação
de programação de
programação de alto
de alto nível
alto nível e
nível e técnicas
e técnicas de
técnicas de resolução
de resolução de
resolução de problemas
de problemas para
capaz de raciocinar
de raciocinar em
raciocinar em cima
em cima da
cima da computação
cientista da computação
físico Cientistas da
Cientistas da computação
colegas de ciências
de ciências naturais
ciências naturais e
naturais e engenharia
a construção de
construção de modelos
desoftwarefreqüentemente representa o
representa o passo
o passo final
passo final de
processo de resolução
de resolução de
resolução de problemas
livro introduzirá técnicas
introduzirá técnicas de
técnicas de dedução
de dedução e
dedução e resolução
e resolução de
resolução de problemas
de problemas usando
problemas usando objetos
O princípio fundamental
princípio fundamental da
fundamental da programação
da programação orientada
programação orientada por
orientada por objeto
explorado e introduzido
exploração muitos princípios
muitos princípios importantes
princípios importantes de
importantes de computação
1.2 Programas de
Programas de computador
programa consiste em
seqüência de instruções
de instruções escritas
linguagem precisa chamada
precisa chamada linguagem
chamada linguagem de
linguagem de programação
linguagem de baixo
de baixo nível
a linguagem de
linguagem de máquina
o computador possa
computador possa entender
definidas geralmente em
geralmente em duas
em duas categorias
programas de sistemas
de sistemas e
sistemas e programas
e programas de
programas de aplicações
Programas de sistemas
de sistemas visam
sistemas visam controlar
componente do computador
dispositivo de armazenamento
dispositivo de saída
o próprio computador
Programas de aplicações
de aplicações resolvem
de controle de
controle de tráfego
de tráfego aéreo
de processamento de
processamento de textos
outra área de
área de aplicação
Programas de computador
de computador representam
computador representam o
representam o produto
o produto final
produto final do
final do processo
do processo de
processo de desenvolvimento
de desenvolvimento desoftware
liberados para o
para o cliente
Programas comerciais usualmente
comerciais usualmente vêm
usualmente vêm acompanhados
vêm acompanhados de
guia do usuário
do usuário e
usuário e outros
e outros documentos
outros documentos de
documentos de apoio
de apoio escritos
1.3 Linguagens de
Linguagens de programação
de programação Três
programação Três categorias
Três categorias principais
categorias principais de
principais de linguagem
de linguagem de
linguagem de programação
linguagem de máquina
linguagens assembly e
assembly e linguagens
e linguagens de
linguagens de alto
de alto nível
primeiros computadores somente
computadores somente podiam
programados usando linguagem
usando linguagem de
linguagem de máquina
Tal linguagem usa
linguagem usa seqüências
usa seqüências de
seqüências de zeros
de zeros e
zeros e uns
representam instruções precisas
instruções precisas para
precisas para computação
para computação e
computação e acessos
e acessos de
acessos de dados
Linguagens assembly usam
assembly usam caracteres
usam caracteres alfabéticos
caracteres alfabéticos para
alfabéticos para representar
configurações de bits
de bits da
bits da linguagem
da linguagem de
linguagem de máquina
letras usadas descrevem
operações a serem
a serem realizadas
Linguagens assembly representam
alto de abstração
de abstração do
linguagens de máquina
Algumas linguagens assembly
linguagens assembly modernas
assembly modernas suportam
modernas suportam estruturas
suportam estruturas de
estruturas de controle
previstas somente em
somente em linguagens
em linguagens de
linguagens de alto
de alto nível
Linguagens de alto
de alto nível
alto nível assemelham-se
Dados e operações
representados por declarações
por declarações descritivas
desejamos adicionar dois
adicionar dois números
dois números e
números e depositar
e depositar a
depositar a soma
a soma em
Na maioria das
maioria das linguagens
das linguagens de
linguagens de alto
de alto nível
operandos a e
a e b
e b representam
dois números a
números a serem
a serem adicionados
serem adicionados e
adicionados e a
e a variável
a variável c
variável c representa
c representa o
representa o total
o operador de
operador de atribuição
a soma dos
soma dos valores
dos valores em
valores em a
em a e
a e b
atribuído a c1
típica linguagem assembly
LOAD A ADD
A ADD B
ADD B STORE
B STORE C
linguagem de máquina
00011000 00000101 00100001
00000101 00100001 00000011
00100001 00000011 00101101
00000011 00101101 11100001
00101101 11100001 Como
somente computadores iriam
computadores iriam querer
iriam querer ler
querer ler a
ler a linguagem
a linguagem de
linguagem de máquina
1.4 Estruturação e
Estruturação e programação
e programação orientada
programação orientada por
orientada por objetos
por objetos A
objetos A palavra
A palavra paradigma
tornado popular no
popular no últimos
no últimos anos
pessoas ouvem falar
ouvem falar a
falar a respeito
a respeito do
respeito do paradigma
do paradigma orientado
paradigma orientado por
orientado por objeto
No mundo do
mundo do desenvolvimento
do desenvolvimento de
desenvolvimento de software
décadas de 70
de 70 e
70 e 80
abordagem de solução
de solução de
solução de problemas
chamada programação estruturada
linguagens dominantes da
dominantes da época
da época incluíam
época incluíam FORTRAN
ADA e C.
e C. Consideráveis
C. Consideráveis investimentos
feitos no desenvolvimento
no desenvolvimento ferramentas
desenvolvimento ferramentas de
ferramentas de softwarepara
de softwarepara apoiar
softwarepara apoiar a
apoiar a programação
a programação e
programação e o
e o processo
o processo de
processo de desenvolvimento
de desenvolvimento de
desenvolvimento de software
de software durante
métodos e técnicas
e técnicas para
técnicas para projeto
para projeto e
projeto e analise
e analise estruturados
analise estruturados apresentados
estruturados apresentados por
apresentados por Larry
por Larry Constantine
Tom DeMarco e
DeMarco e Edward
e Edward Yourdon
influenciado de forma
de forma significativa
forma significativa a
significativa a maneira
a maneira em
amplos e complexos
e complexos sistemas
complexos sistemas desoftwaresão
sistemas desoftwaresão construídos
Poderosas e dispendiosas
e dispendiosas ferramentas
dispendiosas ferramentas desoftwarepara
ferramentas desoftwarepara auxiliar
desoftwarepara auxiliar a
auxiliar a engenharia
a engenharia desoftware
Em português lê-se
c recebe a
apoiada por computador
sido desenvolvidas para
desenvolvidas para apoiar
paradigma da programação
da programação estruturada
A abordagem estruturada
abordagem estruturada para
estruturada para resolução
para resolução de
resolução de problemas
de problemas decompõe
problema em funções
chamada decomposição funcional
decomposição funcional –
dividida em operações
em operações menores
dessas operações menores
operações menores ainda
dividida em menores
em menores e
menores e menos
e menos complexas
menos complexas operações
tratável em tamanho
em tamanho e
tamanho e complexidade
desoftwareé visto como
processo de transformação
de transformação –
transformação – processamento
– processamento de
processamento de dados
de dados de
dados de entrada
série de transformações
de transformações funcionais
transformações funcionais para
funcionais para produzir
para produzir dados
produzir dados de
dados de saída
dados servem como
Por várias gerações
várias gerações de
gerações de programadores
sido a abordagem
natural para solução
para solução de
solução de problemas
meio de vida
Em meados de
meados de 1970
paradigma diferente de
diferente de desenvolvimento
de desenvolvimento desoftwarefoi
desenvolvimento desoftwarefoi feita
Xerox Corporation no
Corporation no Palo
no Palo Alto
Palo Alto Research
Alto Research Center
esforço culminou no
culminou no lançamento
no lançamento comercial
lançamento comercial da
comercial da linguagem
da linguagem de
linguagem de programação
de programação orientada
programação orientada por
orientada por objetos
por objetos Smalltalk-80
Inspirado nas idéias
nas idéias de
idéias de Alan
de Alan Kay
Alan Kay e
linguagem visava proporcionar
ambiente de desenvolvimento
de desenvolvimento desoftwarealtamente
desenvolvimento desoftwarealtamente individual
desoftwarealtamente individual e
individual e robusto
de muitas maneiras
o ambiente moderno
ambiente moderno de
moderno de estações
de estações de
estações de trabalho
mecanismo de interface
de interface gráfica
interface gráfica extremamente
subproduto deste trabalho
deste trabalho e
de ambiente gráfico
ambiente gráfico tipicamente
gráfico tipicamente encontrado
tipicamente encontrado na
encontrado na maioria
na maioria das
maioria das estações
das estações de
estações de trabalho
em computadores pessoais
mouse como aparelho
como aparelho de
aparelho de interface
série de janelas
caixas de diálogo
tornado agora bastante
agora bastante usuais
exceção de alguns
de alguns poucos
alguns poucos laboratórios
poucos laboratórios de
laboratórios de pesquisa
o Smalltalk exemplificou
abordagem totalmente nova
totalmente nova do
nova do desenvolvimento
do desenvolvimento de
desenvolvimento de software
de software e
software e solução
e solução de
solução de problemas
a abordagem da
abordagem da orientação
da orientação por
orientação por objetos
a decomposição de
decomposição de dados
invés da decomposição
da decomposição de
decomposição de funções
tornam-se a idéia
a idéia central
tornam ligadas a
modelo de dados
de dados e
dados e servem
e servem a
modelo de dados
A solução de
solução de problemas
de problemas passa
problemas passa a
a descrição e
descrição e modelagem
e modelagem de
modelagem de como
de como objetos
como objetos interagem
Em meados de
meados de 1980
emergiram várias novas
várias novas linguagens
novas linguagens orientadas
linguagens orientadas por
orientadas por objetos
por objetos de
objetos de importância
de importância considerável
podemos citar Objective-C
ainda sendo utilizadas
sendo utilizadas hoje
utilizadas hoje embora
tornado a linguagem
a linguagem orientada
linguagem orientada por
orientada por objetos
Das linguagens mencionadas
somente Smalltalk e
Smalltalk e Eiffel
linguagens orientadas por
orientadas por objeto
baseadas em algum
em algum substrato
orientado por objetos
Objective-C. Nestas construções
Nestas construções de
construções de linguagens
de linguagens baseadas
linguagens baseadas em
baseadas em C
podem coexistir tanto
coexistir tanto a
tanto a programação
a programação estruturada
programação estruturada quanto
estruturada quanto a
quanto a programação
a programação orientada
programação orientada por
orientada por objetos
freqüentemente leva a
modo misto de
misto de solução
de solução de
solução de problemas
Somente Smalltalk e
Smalltalk e Eiffel
e Eiffel oferecem
programador a possibilidade
a possibilidade para
possibilidade para fazer
Do inglês Computer
inglês Computer Aided
Computer Aided Software
Aided Software Engineering
Software Engineering programação
Engineering programação exclusivamente
programação exclusivamente orientada
exclusivamente orientada por
orientada por objetos
O autor deste
autor deste livro
deste livro considera
grande vantagem do
vantagem do uso
do uso destas
uso destas duas
destas duas linguagens
O próximo capítulo
próximo capítulo explica
capítulo explica o
explica o orientação
o orientação por
orientação por objetos
por objetos em
objetos em maiores
em maiores detalhes
Outros paradigmas de
paradigmas de programação
do estruturado e
estruturado e do
e do orientado
do orientado por
orientado por objetos
linguagem de programação
de programação LISP
programação LISP e
LISP e programação
e programação lógica
programação lógica exemplificada
linguagem de programação
de programação PROLOG
sido largamente usada
largamente usada em
usada em aplicativos
em aplicativos de
aplicativos de inteligência
de inteligência artificial
inteligência artificial e
artificial e PROLOG
e PROLOG em
PROLOG em aplicativos
em aplicativos para
aplicativos para aprendizagem
para aprendizagem de
aprendizagem de máquinas
1.5 Ferramentas comuns
Ferramentas comuns de
comuns de software
de software Incluídas
ferramentas comuns desoftware
comuns desoftware normalmente
desoftware normalmente disponíveis
normalmente disponíveis para
disponíveis para programadores
editores de programa
processadores de texto
profilers e browsers
editor de programa
editor de textos
o texto de
Alguns editores de
editores de programa
estrutura de sintaxe
palavra chave em
determinada linguagem de
linguagem de programação
de programação e
programação e o
e o editor
o editor então
editor então gera
então gera o
gera o resto
o resto de
A maioria dos
maioria dos editores
dos editores de
editores de programas
de programas possuem
programas possuem operações
possuem operações semelhantes
operações semelhantes comosearch
localiza a palavra
a palavra no
palavra no texto
procura e altera
faz a identação
a identação do
identação do texto
do texto de
número específico de
específico de espaços
de tabulações baseado
tabulações baseado no
baseado no contexto
no contexto do
contexto do programa
move o marcador
linha especifica no
especifica no texto
processador de texto
ajuda na geração
na geração de
geração de documentos
freqüentemente permite a
permite a integração
a integração de
integração de componentes
de componentes gráficos
componentes de texto
processadores de texto
de texto modernos
bem poderosos e
poderosos e complexos
programa especifico das
especifico das linguagens
das linguagens de
linguagens de programação
traduz o texto
o texto do
texto do programa
do programa escrito
programa escrito em
escrito em linguagem
em linguagem de
linguagem de alto
de alto nível
alto nível em
nível em linguagem
em linguagem de
linguagem de maquina
cumprido para o
para o programa
o programa poder
programa poder funcionar
integra várias partes
várias partes de
código executável compondo
executável compondo o
compondo o aplicativo
compilar e linkar
operações executadas de
executadas de maneira
de maneira integrada
a finalidade de
finalidade de traduzir
de traduzir o
traduzir o texto
o texto de
executado sob o
sob o controle
o controle do
controle do programador
A execução do
execução do programa
interrompida em lugares
em lugares pré-
lugares pré- determinados
pré- determinados do
determinados do texto
do texto de
executada passo a
passo a passo
inspecionar valores de
valores de várias
de várias entidades
várias entidades no
entidades no aplicativo
no aplicativo para
aplicativo para determinar
detectado no programa
programa executado em
executado em conjunto
programa em desenvolvimento
calcula e informa
e informa o
informa o tempo
o programa gasta
programa gasta em
gasta em diversas
em diversas partes
diversas partes e
partes e seções
programador determinar o
determinar o local
eficiência para modificá-la
para modificá-la na
modificá-la na versão
na versão final
instrumento de análise
de análise de
análise de desempenho
de desempenho da
desempenho da execução
da execução de
inspeção visual de
programa amplo e
amplo e complexo
instrumento essencial para
essencial para grande
para grande projetos
grande projetos de
projetos de software
capaz de inspecionar
de inspecionar outra
inspecionar outra parte
outra parte de
possivelmente desenvolvida por
desenvolvida por outros
por outros programadores
inspecionar o código
o código de
código de bibliotecas
de bibliotecas reutilizáveis
bibliotecas reutilizáveis desoftware
programa de computador
conjunto de instruções
de instruções escritas
instruções escritas de
escritas de acordo
regras de sintaxe
de sintaxe de
sintaxe de alguma
de alguma linguagem
alguma linguagem de
linguagem de programação
traduzidas por outro
por outro programa
outro programa de
programa de computador
de computador chamado
computador chamado compilador
O compilador gera
compilador gera instruções
linguagem de baixo
de baixo nível
instruções fornecidas no
entender e possivelmente
e possivelmente ainda
para a maioria
a maioria dos
maioria dos programadores
programa bem escrito
bem escrito deve
claro e de
e de fácil
de fácil entendimento
fácil entendimento para
entendimento para outro
para outro programador
• Resolver o
Resolver o problema
o problema especificado
problema especificado corretamente
especificações do problema
1.6.1 Linguagens de
Linguagens de programação
criadas centenas de
centenas de linguagens
de linguagens de
linguagens de programação
de programação para
programação para ajudar
para ajudar na
ajudar na solução
na solução de
solução de vários
de vários tipos
vários tipos de
tipos de problemas
sido agrupadas em
agrupadas em várias
em várias categorias
várias categorias baseadas
categorias baseadas nas
características e na
e na abordagem
usam para resolução
para resolução de
resolução de problemas
criadas para cada
para cada processador
cada processador específico
conjunto próprio de
próprio de instruções
de instruções de
instruções de baixo
de baixo nível
Programas nessa linguagem
difíceis de serem
de serem escritos
serem escritos porque
escritos porque a
porque a possibilidade
a possibilidade de
formular abstrações nestas
abstrações nestas linguagens
bastante propensas a
propensas a erros
a erros e
especificações do problema
do problema sofram
problema sofram mudanças
programas desenvolvidos em
desenvolvidos em linguagem
em linguagem assemblysão
linguagens de programação
Linguagens procedurais –
primeiras linguagens de
desenvolvida no começo
no começo da
começo da década
da década de
década de 50
usada principalmente para
principalmente para computação
para computação matemática
computação matemática e
matemática e científica
A unidade básica
unidade básica de
básica de abstração
de abstração em
abstração em FORTRAN
descrição de classe
subrotina através de
tipicamente realizada nesses
realizada nesses dados
nesses dados e
retornada como resultado
Outras linguagens procedurais
linguagens procedurais populares
Algol e PL/1
• Linguagens funcionais
Linguagens funcionais –
funcionais – LISP
vista como a
como a avó
a avó das
avó das linguagens
das linguagens funcionais
A sigla LISP
sigla LISP significa
LISP significa processamento
significa processamento de
processamento de listas
amplamente usadas na
usadas na área
na área de
área de inteligência
de inteligência artificial
aprendizagem de máquina
de máquina e
máquina e ciência
e ciência cognitiva
tendo algumas aplicações
algumas aplicações comerciais
aplicações comerciais escritas
comerciais escritas em
escritas em LISP
muitos ainda consideram
ferramenta de pesquisa
• Linguagens Lógicas
Linguagens Lógicas –
Lógicas – PROLOG
– PROLOG e
variações proporcionam a
proporcionam a oportunidade
a oportunidade de
oportunidade de formular
conjunto de proposições
de proposições lógicas
proposições lógicas e
sido usada como
ferramenta de pesquisa
de pesquisa na
pesquisa na área
na área de
área de inteligência
de inteligência artificial
inteligência artificial e
artificial e aprendizagem
e aprendizagem de
aprendizagem de máquina
• Baseadas em
Baseadas em objetos
em objetos –
objetos – Modula-2
– Modula-2 e
Modula-2 e Ada
duas linguagens baseadas
linguagens baseadas em
baseadas em objeto
suporta a noção
a noção de
abstrato de dados
tarde nesse capítulo
primeiras linguagens procedurais
linguagens procedurais a
procedurais a fornecer
modelo de dados
de dados e
serviços em torno
a visão externa
visão externa dos
externa dos dados
Nenhuma dessas linguagens
dessas linguagens suporta
linguagens suporta herança
• Linguagens orientadas
Linguagens orientadas por
orientadas por objetos
por objetos –
objetos – Simula
desenvolvida na Noruega
na Noruega no
Noruega no fim
no fim da
fim da década
da década de
década de 60
a primeira linguagem
primeira linguagem de
linguagem de programação
de programação orientada
programação orientada por
orientada por objeto
Na década de
década de 70
de 70 o
70 o Centro
o Centro de
Centro de Pesquisa
de Pesquisa da
Pesquisa da Xerox
em Palo Alto
fez algumas pesquisas
algumas pesquisas inovadoras
pesquisas inovadoras no
inovadoras no modelo
no modelo de
modelo de objeto
desenvolvimento da linguagem
da linguagem de
linguagem de programação
de programação Smalltalk
lançada comercialmente em
comercialmente em 1980
logo seguida por
seguida por C++
Common Lisp Object
Lisp Object System
como Eiffel e
séria de outras
de outras linguagens
outras linguagens orientadas
linguagens orientadas por
orientadas por objeto
por objeto menos
objeto menos conhecidas
duas linguagens orientadas
linguagens orientadas por
orientadas por objeto
populares usadas hoje
C++ e Smalltalk
ganhando popularidade rapidamente
fica atrás dessas
atrás dessas duas
dessas duas no
duas no momento
no momento da
momento da escrita
da escrita deste
escrita deste livro
livro visa propiciar
base sólida nos
sólida nos princípios
nos princípios fundamentais
princípios fundamentais de
fundamentais de programação
nesse caso programação
caso programação orientada
programação orientada por
orientada por objeto
e na resolução
na resolução de
resolução de problemas
A perspectiva orientada
perspectiva orientada por
orientada por objeto
por objeto vista
objeto vista neste
vista neste livro
neste livro representa
tendência de enfatizar
de enfatizar abstrações
enfatizar abstrações na
abstrações na resolução
na resolução de
resolução de problemas
de problemas usando
problemas usando o
usando o computador
o computador e
computador e o
e o uso
o uso do
abstrato de dados
de dados em
dados em particular
definido e discutido
e discutido no
discutido no próximo
no próximo capítulo
livro introduz a
introduz a modelagem
a modelagem de
modelagem de objetos
O autor deste
autor deste livro
deste livro acredita
aluno iniciante vai
aprender logo cedo
o processo de
processo de desenvolvimento
de desenvolvimento desoftwarenão
desenvolvimento desoftwarenão começa
desoftwarenão começa escrevendo-se
começa escrevendo-se o
escrevendo-se o código
o código de
processo sistemático de
sistemático de análise
de análise e
análise e planejamento
e planejamento vem
planejamento vem primeiro
o leitor aprenda
parte do processo
do processo intelectual
processo intelectual associado
intelectual associado à
associado à construção
à construção de
construção de software
de software e
software e à
e à ciência
à ciência da
ciência da computação
abordagem orientada por
orientada por objetos
apresentado à noção
à noção simples
noção simples e
simples e atrativa
e atrativa de
desoftwareé composto de
composto de objetos
de objetos interagindo
objetos interagindo de
interagindo de maneira
de maneira harmoniosa
si através de
através de mensagens
Como muitos programadores
a perspectiva orientada
perspectiva orientada por
orientada por objetos
bastante distinta da
distinta da abordagem
da abordagem antiga
começa de baixo
de baixo para
baixo para cima
operações de atribuição
operações de comparação
controle de fluxo
de fluxo e
fluxo e repetição
o conceito de
conceito de funções
Apesar da abordagem
da abordagem usada
abordagem usada neste
usada neste livro
A noção de
noção de função
apresentada desde o
desde o início
and usada em
o resto do
resto do livro
O princípio do
princípio do encapsulamento
modelo de dados
abstração funcional forma
funcional forma a
forma a parte
a parte principal
parte principal do
principal do capítulo
enfocar em detalhes
em detalhes de
detalhes de programação
processo de resolução
de resolução de
resolução de problemas
de problemas orientado
problemas orientado por
orientado por objetos
por objetos nos
objetos nos capítulos
escolhida para apoiar
esforço por causa
por causa de
sintaxe relativamente simples
suporte rico e
rico e direto
e direto à
direto à programação
várias linguagens orientadas
linguagens orientadas por
orientadas por objetos
por objetos desenvolvidas
objetos desenvolvidas nos
desenvolvidas nos últimos
nos últimos 10
últimos 10 anos
elegante e talvez
e talvez a
disciplina inicial em
inicial em ciência
em ciência da
ciência da computação
deixem-me dizer porque
dizer porque C++
Apesar de reconhecer
de reconhecer a
reconhecer a enorme
a enorme popularidade
enorme popularidade de
popularidade de C++
de C++ e
C++ e a
e a possibilidade
a possibilidade de
a complexidade de
complexidade de C++
de certa maneira
falta de segurança
apoio continuado em
continuado em artefatos
em artefatos de
artefatos de baixo
de baixo nível
ponteiros e referências
distraem do objetivo
do objetivo de
objetivo de aprender
de aprender a
aprender a resolver
a resolver problemas
resolver problemas usando
problemas usando objetos
desencoraja a solução
a solução de
solução de problemas
de problemas de
problemas de maneira
de maneira orientada
maneira orientada por
orientada por objetos
ideologia do C
Apesar desta ideologia
novo conjunto de
conjunto de mecanismos
de mecanismos para
mecanismos para solução
para solução de
solução de problemas
importante primeiro tornar-se
primeiro tornar-se eficiente
tornar-se eficiente no
eficiente no processo
no processo de
processo de solução
de solução de
solução de problemas
de problemas orientada
problemas orientada por
orientada por objetos
antes de iniciar
de iniciar o
iniciar o desafio
o desafio de
desafio de dominar
pequeno incremento da
incremento da linguagem
da linguagem C.
linguagem C. E
C. E acredito
notável linguagem para
aprender princípios básicos
princípios básicos de
básicos de construção
de construção de
construção de programas
de programas orientados
programas orientados por
orientados por objetos
rica e potente
e potente linguagem
potente linguagem para
linguagem para usar
para usar na
usar na solução
na solução de
solução de problemas
de problemas reais
problemas reais após
princípios da programação
da programação orientada
programação orientada por
orientada por objetos
livro inspire em
interesse e entusiasmo
e entusiasmo na
entusiasmo na solução
na solução orientada
solução orientada por
orientada por objetos
por objetos de
objetos de problemas
de problemas e
problemas e proporcione
e proporcione a
base sólida em
sólida em alguns
em alguns princípios
alguns princípios básicos
princípios básicos de
básicos de ciência
de ciência da
ciência da computação
1.8 Exercícios •
Exercícios • Cite
• Cite várias
Cite várias maneiras
várias maneiras nas
maneiras nas quais
nas quais computadores
Por favor restrinja-se
favor restrinja-se no
restrinja-se no uso
no uso de
uso de palavras
de palavras tolas
• Cite algumas
Cite algumas profissões
principais componentes de
a vantagem no
vantagem no uso
no uso de
linguagem de alto
de alto nível
linguagem de máquina
passos tradicionais no
tradicionais no ciclo
no ciclo de
ciclo de vida
de vida de
interessado por computadores
ciência da computação
lugar seguro por
seguro por alguns
por alguns anos
alguns anos e
anos e reler
Abordagem Orientada Por
Orientada Por Objetos
Por Objetos para
Objetos para Resolver
para Resolver Problemas
objetos e classes
e classes e
classes e como
e como cada
usado na construção
na construção de
palavras técnicas importantes
mostradas em negrito
instância de umaclasse
objeto temdadose comportamento
utilizarcomandosou consultasde outros
consultasde outros objetos
comando permite modificar
consulta permite verificar
permite verificar o
verificar o valor
o valor dos
valor dos dados
dos dados mantidos
• O estadode
verificado através das
através das consultas
• Classes podem
si de três
de três maneiras
três maneiras diferentes
• Algumas classes
Algumas classes sãoabstratas
criados dentro de
dentro de umprograma
de umprograma e
umprograma e interagem
outros objetos à
objetos à medida
o programa executa
lugares 2.1.1 Objetos
2.1.1 Objetos ordinários
Objetos ordinários O
caracterizado tanto por
Para objetos ordinários
separa o interior
o interior do
interior do objeto
do objeto do
objeto do lado
do lado de
definem objetos ordinários
criança no início
no início de
capaz de distinguir
de distinguir objetos
criaturas orientadas por
orientadas por objetos
a caracterizar objetos
caracterizar objetos baseando
objetos baseando no
aspecto e comportamento
orientação por objetos
a observação do
observação do mundo
do mundo a
processo formal de
formal de educação
átomo em particular
em particular baseados
particular baseados em
Tabela Periódica de
Periódica de Elementos
várias espécies de
espécies de organismos
de organismos vivosbaseados
organismos vivosbaseados em
elaborada classificação hierárquica
classificação hierárquica de
hierárquica de espécies
classificamos objetos por
semelhanças e diferenças
e diferenças de
diferenças de aspecto
de aspecto e
aspecto e comportamento
rapidamente aprendemos a
aprendemos a classificar
a classificar tipos
classificar tipos similares
tipos similares de
similares de objetos
de objetos como
carro independente de
desenho mal feito
mal feito de
carro no livro
carrinho de brinquedo
de brinquedo do
brinquedo do tamanho
do tamanho de
caixinha de fósforos
carro real bem
real bem como
bem como sendo
como sendo diferentes
sendo diferentes exemplos
da classificação CARRO
Muitas crianças podem
crianças podem distinguir
outro dado ``
dado `` significativo
`` significativo ""
significativo "" de
baseando-se em algumas
em algumas das
algumas das propriedades
das propriedades visuais
propriedades visuais abstratas
visuais abstratas de
abstratas de carros
de carros e
carros e caminhões
característica dos seres
dos seres humanos
seres humanos a
humanos a habilidade
a habilidade natural
habilidade natural de
natural de classificar
de classificar objetos.Nós
classificar objetos.Nós chamaremos
classificações de classes
usada para significar
membro particular de
carro vermelho do
vermelho do tamanho
do tamanho de
caixa de fósforo
o brinquedo favorito
brinquedo favorito de
instância da classe
da classe CARRO
usadas letras maiúsculas
letras maiúsculas para
maiúsculas para classes
da mesma maneira
o esboço mal
esboço mal feito
mal feito de
carro no livro
no livro de
o automóvel real
automóvel real na
real na garagem
outras instâncias de
instâncias de CARRO
Muitas crianças desenvolvem
nível alto de
alto de entusiasmo
de entusiasmo para
entusiasmo para carros
para carros de
carros de brinquedo
fascinação parece estar
parece estar baseada
estar baseada na
baseada na habilidade
na habilidade comum
habilidade comum de
objetos moverem-se de
local a outro
a outro e
hábeis em obter
entendimento abstrato de
traços comuns a
veículos incluindo carros
barcos e trens
e outros tipos
outros tipos de
tipos de veículos
de veículos conhecidos
no momento em
experiência de vida
de vida e
vida e poder
e poder aquisitivo
poder aquisitivo aumentam
criança parece apta
parece apta para
apta para fazer
generalização antes de
antes de aprender
de aprender a
aprender a palavra
Como humanos parecemos
capazes de desempenhar
tais generalizações de
generalizações de maneira
de maneira natural
abordagem de classificação
de classificação serve
classificação serve como
serve como base
como base para
orienta por objetos
para solução de
solução de problemas
A classe VEÍCULO
considerada como sendo
como sendo umaclasse
sendo umaclasse abstrataem
umaclasse abstrataem contraste
tal como CARRO
criança pede para
traga-me o veículo
o veículo vermelho
veículo vermelho do
possui instâncias de
instâncias de verdade
usada para produzir
para produzir instâncias
produzir instâncias de
instâncias de classes
de classes concretas
A abstração da
abstração da classe
da classe VEÍCULO
classe VEÍCULO contêm
VEÍCULO contêm características
contêm características comuns
características comuns de
comuns de CARRO
BARCO e TREM
formando a base
a base para
base para a
para a noção
a noção deherança
A classe concreta
classe concreta adquire
a classe abstrata
Cada característica herdada
característica herdada da
herdada da classe
da classe abstrata
achada em instâncias
em instâncias na
instâncias na classe
na classe concreta
percepção dos objetos
dos objetos ordinários
características de cada
de cada classe
cada classe concreta
podemos rapidamente desenvolver
rapidamente desenvolver a
desenvolver a habilidade
a habilidade de
habilidade de identificar
podemos nunca desenvolver
nunca desenvolver a
desenvolver a habilidade
a habilidade de
habilidade de definir
de definir a
definir a classe
a classe CARRO
habilidades de reconhecimento
de reconhecimento de
reconhecimento de padrões
baseadas em fenômenos
em fenômenos complexos
tentamos extrair características
extrair características essenciais
menos guiá- lo
2.1.2 Objetos como
Objetos como abstração
começamos a pensar
abstração desta entidade
cedo na vida
Tanto artistas quanto
artistas quanto engenheiros
quanto engenheiros precisam
engenheiros precisam desenvolver
precisam desenvolver tal
desenvolver tal abstração
de maneira diferente
O artista irá
artista irá enfatizar
irá enfatizar o
enfatizar o contorno
a textura e
textura e a
e a cor
o engenheiro irá
engenheiro irá enfatizar
irá enfatizar o
enfatizar o formato
o formato e
formato e o
e o comportamento
o comportamento do
comportamento do carro
formato e comportamento
O modelo abstrato
modelo abstrato de
carro desenvolvido por
engenheiro deve unificar
deve unificar formato
unificar formato e
formato e comportamento
aspectos referentes à
referentes à forma
textura e cor
e cor devem
questões como a
como a capacidade
a capacidade de
capacidade de fazer
de fazer curvas
fazer curvas do
curvas do carro
capacidade de frear
fenômenos envolvem a
envolvem a reação
a reação do
reação do veículo
do veículo a
veículo a vários
a vários estímulos
pisar no pedal
no pedal do
pedal do acelerador
pisar no pedal
no pedal do
pedal do freio
virar o volante
O comportamento de
fortemente influenciado por
carro grande e
grande e pesado
e pesado geralmente
pesado geralmente requer
determinada capacidade de
capacidade de aceleração
carro pequeno e
pequeno e leve
geralmente menos manobrável
características de aceleração
de aceleração de
daqui em diante
em diante chamados
diante chamados deatributos
a massa do
massa do carro
fricção dos pneus
dos pneus e
pneus e coeficiente
e coeficiente aerodinâmico
variáveis constituem o
constituem o estado
o estado interno
atributos da classe
da classe CARRO
Outros atributos como
Aspectos como a
como a velocidade
a velocidade do
velocidade do carro
do carro podem
calculados através do
através do conhecimento
abstração onde o
onde o carro
devemos usar para
usar para representar
para representar o
representar o estado
o estado interno
estado interno do
interno do carro
do carro incluem
carro incluem o
incluem o valor
o valor de
valor de empréstimo
a taxa de
taxa de juros
de juros do
juros do empréstimo
o número de
número de meses
de meses do
meses do empréstimo
o número de
número de pagamentos
e o preço
o preço de
preço de tabela
de tabela do
tabela do carro
do carro como
carro como produto
como produto comercial
A modelagem de
modelagem de objetos
similar à modelagem
à modelagem de
modelagem de quaisquer
de quaisquer entidades
quaisquer entidades da
entidades da ciência
O nível de
nível de detalhes
de detalhes definidos
detalhes definidos no
definidos no modelo
no modelo depende
modelo depende das
depende das metas
das metas do
metas do problema
propriedades termodinâmicas da
termodinâmicas da combustão
da combustão de
motor de combustão
de combustão interna
a geometria de
geometria de cada
de cada cilindro
cada cilindro e
cilindro e a
e a geometria
a geometria de
geometria de cada
de cada pistão
a descrição de
a abstração do
abstração do objeto
baseada no problema
no problema onde
problema onde o
onde o objeto
o objeto existe
Aspectos do objeto
papel essencial na
essencial na descoberta
na descoberta de
solução para o
para o problema
o problema dado
problema dado devem
representados no modelo
no modelo de
modelo de objeto
descrição simplificada da
simplificada da realidade
sugere o seguinte
O princípio de
princípio de ignorar
relevantes para o
para o problema
o problema a
problema a fim
a fim de
2.2 O modelo
O modelo de
modelo de objetos
de objetos Coad
objetos Coad e
Coad e Yourdon
abstração de algo
de algo no
algo no contexto
no contexto de
refletindo a capacidade
a capacidade do
em manter informações
encapsulamento de valores
de valores característicos
valores característicos e
referir a quase
a quase qualquer
quase qualquer coisa
conceitos chave na
chave na definição
na definição dada
definição dada acima
valores e serviços
e serviços exclusivos
como mencionado acima
separação das características
das características essenciais
características essenciais das
Na definição de
definição de abstração
ilustrado na seção
na seção 2.1.2
dois modelos de
modelos de carro
modelo físico e
modelo de comércio
O conceito deinformação
conceito deinformação e
deinformação e atributos
e atributos da
atributos da definição
da definição de
definição de objetos
de objetos acima
implica em armazenamento
em armazenamento de
armazenamento de dados
Cada atributo representa
componente distinto do
distinto do modelo
do modelo geral
modelo geral de
geral de armazenamento
de armazenamento de
armazenamento de dados
ilustrado na seção
na seção 2.1.2
carro como massa
aderência dos pneus
torque e coeficiente
e coeficiente de
coeficiente de aerodinâmica
consultas na seção
na seção externa
seção externa da
externa da classe
a parte da
parte da classe
valores de alguns
de alguns atributos
O conceito de
na definição acima
definição acima sugere
acima sugere ação
sugere ação e
ação e comportamento
objeto descrevem o
para o objeto
ocomportamento do objeto
comandos na seção
na seção externa
seção externa da
externa da classe
da classe detalham
classe detalham precisamente
detalham precisamente quais
precisamente quais serviços
objetos da classe
O modelo de
modelo de objetos
de objetos envolve
objetos envolve dois
envolve dois componentes
dois componentes principais
modelo de dados
de dados e
modelo de comportamento
contidos na descrição
na descrição do
descrição do objeto
do objeto na
objeto na classe
O modelo de
modelo de dados
de dados fornece
especificação precisa do
armazenada em cada
em cada objeto
cada objeto enquanto
o modelo de
modelo de comportamento
de comportamento fornece
especificação precisa dos
precisa dos serviços
executados no objeto
serviços descritos no
descritos no modelo
no modelo de
modelo de comportamento
de comportamento podem
acrescentadas no modelo
no modelo de
modelo de comportamento
de comportamento da
comportamento da classe
define o objeto
o objeto em
objeto em questão
exemplo de modelo
de modelo de
modelo de objeto
de objeto Vamos
objeto Vamos considerar
exemplo simples para
simples para ilustrar
modelo de objeto
modelo de objeto
de objeto para
serve para contar
para contar coisas
usado para registrar
para registrar o
registrar o número
o número de
número de vezes
evento de contagem
Exemplos de contagem
de contagem podem
contagem podem incluir
podem incluir a
incluir a contagem
a contagem de
contagem de veículos
simulação de tráfego
a contagem do
contagem do número
do número de
número de aviões
pista de pouso
de pouso em
determinado período de
período de tempo
classe de nome
de nome CONTADOR
nome CONTADOR para
CONTADOR para ilustrar
para ilustrar o
ilustrar o modelo
o modelo de
modelo de objeto
O estado do
estado do objeto
do objeto CONTADOR
instância da classe
da classe CONTADOR
totalmente descrito por
O valor da
valor da consulta
retém o valor
o valor total
valor total das
total das vezes
o objeto citado
objeto citado incrementou
consulta especifica a
especifica a informação
a informação contida
informação contida no
contida no próprio
no próprio objeto
próprio objeto CONTADOR
objeto CONTADOR de
CONTADOR de maneira
de maneira única
maneira única e
única e completa
• criar –
criar – construir
valor inicial igual
inicial igual a
igual a zero
a zero •
zero • incrementar–
• incrementar– adicionar
incrementar– adicionar o
adicionar o valor
estado atual do
atual do contador
do contador •
contador • zerar–
• zerar– muda
zerar– muda o
muda o valor
o valor atual
valor atual para
atual para zero
para zero A
zero A figura
A figura 2.1
figura 2.1 mostra
descrição gráfica da
gráfica da classe
da classe CONTADOR
Descrição Gráfica da
Gráfica da Classe
da Classe CONTADOR
criada por Grady
por Grady Booch
nuvem de Booch
apenas diagrama de
diagrama de classe
O nome da
nome da classe
da classe fica
classe fica escrito
fica escrito acima
escrito acima da
acima da linha
da linha horizontal
O par de
par de parênteses
de parênteses vazios
parênteses vazios perto
vazios perto de
perto de cada
de cada comando
cada comando indica
comandos requerem a
requerem a entrada
a entrada de
2.2.2 A metáfora
A metáfora do
metáfora do nome-verbo
do nome-verbo e
nome-verbo e nome-
e nome- substantivo
nome- substantivo Introduziremos
notação para representar
podemos executar em
o exemplo da
exemplo da classe
da classe CONTADOR
apresentado na última
na última seção
acessar o seuresultadoatual
o seuresultadoatual e
seuresultadoatual e retornar
e retornar o
responsabilidadesdo objeto CONTADOR
deixemos a entidadecontador_de_carrosrepresentar
programa de simulação
de simulação de
simulação de tráfego
de tráfego para
tráfego para manter
para manter o
manter o controle
o controle do
controle do número
do número de
número de veículos
posto de pedágio
de pedágio de
comandos e a
e a consulta
podemos efetuar em
efetuar em tal
em tal objeto
contador_de_carros.criar contador_de_carros.incrementar contador_de_carros.zerar
contador_de_carros.incrementar contador_de_carros.zerar Consulta
contador_de_carros.resultado Em cada
o objeto recebendo
objeto recebendo a
recebendo a ação
conectado à operação
à operação no
operação no objeto
no objeto por
a notação acima
notação acima sugere
realizando ações em
objeto particular para
obtendo informação do
informação do objeto
do objeto para
objeto para a
para a consulta
a consulta ..
consulta .. Para
substantivo e a
e a ação
Para a consulta
a consulta tanto
consulta tanto a
tanto a objeto
a objeto e
objeto e a
e a consulta
2.2.3 Estado Interno
Estado Interno Suponhamos
três objetos CONTADOR
objetos CONTADOR no
programa simulador de
simulador de tráfego
posto de pedágio
de pedágio da
pedágio da ponte
a seguinte seqüência
seguinte seqüência de
seqüência de ações
de ações acontece
contador_de_carros.zerar contador_de_caminhoes.zerar contador_de_onibus.zerar
contador_de_caminhoes.zerar contador_de_onibus.zerar contador_de_carros.incrementar
contador_de_onibus.zerar contador_de_carros.incrementar contador_de_carros.incrementar
contador_de_carros.incrementar contador_de_carros.incrementar contador_de_onibus.incrementar
contador_de_carros.incrementar contador_de_onibus.incrementar contador_de_carros.incrementar
contador_de_onibus.incrementar contador_de_carros.incrementar contador_de_caminhoes.incrementar
contador_de_carros.incrementar contador_de_caminhoes.incrementar contador_de_carros.incrementar
contador_de_caminhoes.incrementar contador_de_carros.incrementar contador_de_caminhoes.incrementar
três primeiras ações
primeiras ações iniciam
três contadores em
sete ações restantes
o seguinte estado
seguinte estado interno
estados internos dos
internos dos objetos
diferentes uns dos
uns dos outros
dos outros por
outros por causa
por causa das
causa das diferentes
das diferentes açõesincrementarefetuadas
diferentes açõesincrementarefetuadas em
açõesincrementarefetuadas em cada
O ponto principal
embora existam três
existam três objetos
três objetos CONTADOR
objetos CONTADOR distintos
modelo de objeto
descrição de classe
de classe dada
classe dada na
dada na Figura
na Figura 2.1
estados internos de
internos de cada
destes objetos evoluem
objetos evoluem dinamicamente
devemos evitar o
evitar o uso
o uso de
uso de acentos
de acentos em
acentos em identificadores
nomes usados para
usados para representar
para representar algo
linguagem de programação
de programação qualquer
2.2.4 Cenários de
Cenários de objetos
de objetos e
objetos e mensagens
e mensagens O
mensagens O diagrama
O diagrama de
diagrama de classe
de classe da
classe da Figura
da Figura 2.1
Figura 2.1 representa
modelo estático da
estático da classe
da classe CONTADOR
O comportamento dinâmico
diagrama de cenário
de cenário de
cenário de objeto
utilizado para descrever
Para cada comando
cada comando dado
comando dado no
dado no modelo
no modelo de
modelo de comportamento
de comportamento de
mensagem correspondente a
instância da classe
mensagens tomam a
tomam a forma
a forma descrita
forma descrita na
descrita na seção
na seção 2.2.3
onde dez ações
destas expressões envolvem
expressões envolvem o
envolvem o envio
o envio de
O comportamento dinâmico
comportamento dinâmico da
dinâmico da classe
da classe CONTADOR
mostrado na Figura
na Figura 2.2
figura inclui objetos
inclui objetos de
objetos de outras
de outras classes
objetos da classe
da classe CONTADOR
Diagrama de cenário
de cenário de
cenário de objeto
de objeto Na
objeto Na figura
Na figura 2.2
mostrados através das
através das nuvens
das nuvens sólidas
nuvens sólidas de
sólidas de Booch
instância da classe
da classe SIMULACAO
O objeto posto_de_pedagioé
instância da classe
da classe POSTO_DE_PEDAGIO
objetoscontador_de_carrose contador_de_caminhoessão instâncias
contador_de_caminhoessão instâncias da
instâncias da classe
da classe CONTADOR
números indicam a
indicam a seqüência
a seqüência das
seqüência das ações
A primeira ação
o objeto simulacaoenviando
objeto simulacaoenviando a
simulacaoenviando a mensagemcarro_chegapara
a mensagemcarro_chegapara o
mensagemcarro_chegapara o objetoposto_de_pedagio
A segunda ação
o objetoposto_de_pedagioenviando a
objetoposto_de_pedagioenviando a mensagem
a mensagem incrementarpara
mensagem incrementarpara o
incrementarpara o objetocontador_de_carros.
A terceira ação
o objetosimulacaode enviando
objetosimulacaode enviando a
enviando a mensagemcaminhao_chegapara
a mensagemcaminhao_chegapara o
mensagemcaminhao_chegapara o objeto
o objeto posto_de_pedagio
A quarta ação
o objetoposto_de_pedagioemitindo a
objetoposto_de_pedagioemitindo a mensagemincrementarpara
a mensagemincrementarpara o
mensagemincrementarpara o objetocontador_de_caminhoes
ilegal para enviar
para enviar para
enviar para o
para o objeto
o objeto contador_de_carrosa
objeto contador_de_carrosa mensagemaumentar_valor_em_tres
intenção de aumentar
de aumentar o
aumentar o valor
o valor deresultadoem
valor deresultadoem três
deresultadoem três unidades
incluída na descrição
na descrição estática
descrição estática da
estática da classe
da classe CONTADOR
2.2.5 Parâmetros Suponha
desejado incrementar oresultadodo
incrementar oresultadodo objeto
oresultadodo objeto CONTADOR
objeto CONTADOR em
muitos carros chegam
carros chegam em
chegam em faixas
em faixas diferentes
faixas diferentes na
diferentes na mesma
na mesma cabinedepedágio
modelo comportamental da
comportamental da classe
da classe CONTADOR
INTEGERdentro dos parênteses
dos parênteses indica
parâmetro eINTEGERé a
O parâmetroquantia indica
o valor a
diagrama de classes
de classes modificado
mostrado na figura
na figura 2.3
figura 2.3 e
diagrama de cenário
de cenário de
cenário de objeto
uso o novo
o novo serviçoincrementar_emé
novo serviçoincrementar_emé mostrado
serviçoincrementar_emé mostrado na
mostrado na figura
na figura 2.4
Descrição modificada da
modificada da classe
da classe CONTADOR
Diagrama modificado de
modificado de cenário
de cenário de
cenário de objeto
fornecem valores externos
valores externos de
externos de entrada
de entrada para
entrada para o
para o comando
ajudam a determinar
a determinar a
determinar a ação
a ação executada
Como exemplo de
envolve a construção
a construção de
janela no vídeo
no vídeo de
região geométrica definida
geométrica definida por
definida por bordas
por bordas em
textos e gráficos
e gráficos podem
A informação externa
informação externa requerida
externa requerida para
requerida para construir
para construir tal
construir tal janela
tal janela inclui
janela inclui o
inclui o comprimento
o comprimento e
comprimento e a
e a largura
a largura da
largura da janela
coordenada superior esquerda
A especificação de
especificação de tal
de tal comando
tal comando em
O primeiro parâmetro
objeto ponto de
ponto de coordenadasx
de coordenadasx e
coordenadasx e y
ações a seguir
dadas por duas
por duas mensagens
tomadas para criar
cujas coordenadas do
coordenadas do canto
100 e cuja
e cuja altura
O primeiro comando
primeiro comando cria
comando cria einicializa
coordenada x igual
x igual a
e coordenaday igual
coordenaday igual a
igual a 10
usado para criar
para criar einicializar
canto superior esquerdo
superior esquerdo dado
esquerdo dado porum_ponto
dado porum_ponto e
porum_ponto e comprimento
e comprimento de
comprimento de 100
de 100 e
100 e altura
e altura 200
Ambas ações dadas
duas mensagens acima
mensagens acima dependem
acima dependem da
dependem da informação
da informação externa
informação externa enviada
externa enviada nos
enviada nos dois
nos dois parâmetros
dois parâmetros decriar
parâmetros decriar da
decriar da classePONTO
da classePONTO e
três parâmetros decriar
parâmetros decriar da
decriar da classe
da classe JANELA
ilustra a importância
a importância de
importância de permitir
comandos definidos em
classe incluam parâmetros
considere a classe
a classe VEÍCULO
custo e potência
O comandocriar para
comandocriar para a
para a classe
a classe VEÍCULO
seqüência de caracteres
de caracteres em
caracteres em modelo
em modelo de
modelo de dados
características de tal
de tal classe
a frente no
frente no livro
parâmetrospeso e potencia
INTEGER enquanto o
enquanto o parâmetrocustoé
o parâmetrocustoé do
leitor e de
e de fato
valores numéricos do
comportamento diferente dos
diferente dos valores
dos valores numéricos
valores numéricos do
apenas valores inteiros
Por outro lado
fazemos contas em
contas em valores
em valores do
possível chegar a
erro de arredondamento
de arredondamento presente
arredondamento presente nas
presente nas unidades
nas unidades de
unidades de processamento
de processamento aritmético
processamento aritmético de
aritmético de computadores
de computadores digitais
capacidade finita de
finita de armazenamento
de armazenamento para
armazenamento para cada
para cada casa
cada casa decimal
quantidade como 1/3
número infinito de
infinito de casas
de casas decimais
leva à introdução
à introdução de
pequeno erro em
erro em qualquer
em qualquer computação
Como números do
comportam de maneira
de maneira diferente
maneira diferente de
diferente de números
de números do
especificados em duas
em duas classes
duas classes diferentes
2.3 Relações ent
Relações ent re
ent re objetos
re objetos Raramente
objetos Raramente nos
Raramente nos preocupamos
Ciência em geral
em geral e
geral e ciência
e ciência da
ciência da computação
da computação em
computação em particular
modelagem e compreensão
e compreensão de
compreensão de sistemas
Sistemas orientado por
orientado por objetos
por objetos envolvem
objetos envolvem vários
envolvem vários objetos
vários objetos de
objetos de diferentes
de diferentes tipos
diferentes tipos trabalhando
tipos trabalhando juntos
trabalhando juntos para
juntos para atingir
para atingir desejada
atingir desejada meta
tipos de relação
Várias relações importantes
baseadas nas relações
vista na seção
na seção 2.3.1
vista na seção
na seção 2.3.2
erelação de uso
vista na seção
na seção 2.3.3
2.3.1 Herança A
Herança A palavra
A palavra herança
palavra herança sugere
herança sugere a
sugere a aquisição
a aquisição de
aquisição de características
de características de
precisamente o sentido
o sentido no
termo em associação
a solução de
solução de problemas
de problemas orientada
problemas orientada por
orientada por objetos
a subclasse possibilite
subclasse possibilite o
possibilite o aumento
o aumento de
aumento de alguns
de alguns atributos
dados da classe
da classe mãe
como adicionar alguns
adicionar alguns comandos
a subclasse compartilhe
características do modelos
do modelos de
modelos de dados
de dados da
dados da classe
da classe mãe
classe mãe e
serviços da classe
da classe mãe
princípio importante de
importante de consistência
subclasse de outra
• A subclasse
A subclasse deve
da classe mãe
atributos da classe
da classe mãe
classe mãe devem
mãe devem fazer
devem fazer sentido
fazer sentido como
sentido como parte
como parte do
parte do estado
do estado da
estado da subclasse
serviços da classe
da classe mãe
classe mãe devem
mãe devem fazer
devem fazer sentido
fazer sentido como
sentido como parte
como parte do
parte do comportamento
do comportamento da
comportamento da subclasse
considere a ligação
a classe VEÍCULO
classe VEÍCULO e
VEÍCULO e a
e a classe
a classe CARRO
especialização da classe
da classe VEÍCULO
muitos tipos de
tipos de veículos
propósitos deste simples
deste simples exemplo
a classe VEÍCULO
e preco.A classe
preco.A classe CARRO
atributos adicionaisnumero_de_cilindros e
adicionaisnumero_de_cilindros e cavalos_de_forca
Agora vamos considerar
vamos considerar a
considerar a classe
a classe AVIÃO
outra subclasse da
subclasse da classe
da classe VEÍCULO
velocidade_maxima e preco
herdados da classe
da classe VEÍCULO
o atributo adicionalenvergadura_da_asa
Considere agora duas
agora duas subclasses
duas subclasses de
subclasses de AVIÃO
AVIÃO_A_JATO e AVIÃO_A_HÉLICE
A classe AVIÄO_A_JATO
classe AVIÄO_A_JATO apresenta
AVIÄO_A_JATO apresenta o
apresenta o atributoimpulso_maximo
e a classe
a classe AVIÃO_A_HÉLICE
classe AVIÃO_A_HÉLICE apresenta
AVIÃO_A_HÉLICE apresenta o
apresenta o atributo
o atributo volume_deslocado
o volume de
volume de cada
de cada cilindro
feitos esforços no
esforços no sentido
no sentido de
sentido de modelar
comandos e consultas
e consultas de
consultas de cada
O diagrama de
diagrama de Booch
de Booch na
Booch na figura
na figura 2.5
figura 2.5 mostra
2.5 mostra a
mostra a hierarquia
a hierarquia de
hierarquia de herança
de herança para
classes básicas de
básicas de veículo
direcionadas das subclasses
das subclasses para
relações de herança
de herança para
herança para classes
para classes VEÍCULO
o processo de
processo de classificação
usado para administrar
para administrar complexidade
de algum modo
algum modo diferente
modo diferente precisa
análise cuidadosa de
semelhanças e diferenças
hierarquia de classes
compartilhados por várias
por várias devem
colocados no topo
no topo da
topo da hierarquia
compartilhados por muitas
por muitas subclasses
muitas subclasses devem
colocados no topo
no topo da
topo da hierarquia
A base principal
base principal para
principal para classificação
usualmente baseada na
baseada na distribuição
na distribuição e
distribuição e reuso
e reuso dos
reuso dos atributos
o modelo de
modelo de dados
vamos considerar o
considerar o mundo
o mundo de
mundo de cachorros
de cachorros de
cachorros de raça
de raça pura
O clube KENNEL
clube KENNEL americano
KENNEL americano classificou
cachorros em vários
em vários subgrupos
características físicas e
físicas e comportamentais
A figura 2.6
figura 2.6 mostra
pouco das relações
das relações hierárquicas
relações hierárquicas das
hierárquicas das classes
das classes de
classes de cachorros
de cachorros de
cachorros de raça
colocada no centro
no centro do
centro do triângulo
O símbolo indica
classe abstrata jamais
agrupar atributos comuns
necessários nas classes
nas classes descendentes
mostrados na figura
na figura 2.6
Classificações de Cães
criador de cães
capaz de saber
raça de cães
fica na hierarquia
na hierarquia canina
engenheiro de software
capaz de saber
a respeito do
respeito do comportamento
do comportamento esperado
comportamento esperado de
objeto por conhecer
por conhecer onde
situado na hierarquia
na hierarquia da
hierarquia da classe
da classe em
classe em volta
geralmente compostos de
compostos de outros
de outros objetos
unidade central de
central de processamento
memória de acesso
de acesso aleatório
memória cachede alta
cachede alta velocidade
alta velocidade e
velocidade e armazenamento
e armazenamento secundário
dividido em pequeno
em pequeno objetos.Se
continuar a subdividir
encontrará no nível
no nível molecular
o problema sendo
problema sendo resolvido
sendo resolvido determina
resolvido determina o
determina o nível
o nível apropriado
nível apropriado de
apropriado de granularidade
de granularidade na
granularidade na modelagem
na modelagem de
modelagem de algum
de algum objeto
algum objeto como
de outros objetos
Vamos rever novamente
rever novamente o
novamente o modelo
o modelo de
modelo de objeto
de objeto de
jogo de rodas
de rodas e
rodas e pneus
de escapamento e
escapamento e componentes
e componentes do
componentes do interior
partes essenciais do
essenciais do carro
do carro e
carro e podem
modelados como classes
O objeto deve
capaz de satisfazer
em respeito a
respeito a cada
A Figura 2.7
Figura 2.7 Demostra
relações de associação
de associação de
Relações de associação
O círculo escuro
círculo escuro conectando
escuro conectando a
conectando a classeCarro
2.3.3 Relação de
Relação de uso
de uso Muitas
uso Muitas vezes
classe precisa usar
estar intimamente relacionada
intimamente relacionada a
precisar realizar operações
realizar operações matemáticas
e raiz quadrada
encontrados na classe
na classe MATEMÁTICA.Além
classe MATEMÁTICA.Além disso
a classe SIMULAÇÃO
classe SIMULAÇÃO precisa
SIMULAÇÃO precisa desenhar
precisa desenhar figuras
desenhar figuras geométricas
figuras geométricas na
geométricas na tela
serviços para fazer
encontrados na classe
na classe GRÁFICOS
A figura 2.8
figura 2.8 demostra
2.8 demostra a
demostra a relação
a relação de
relação de uso
a classe SIMULAÇÃO
classe SIMULAÇÃO e
classes MATEMÁTICA e
MATEMÁTICA e GRÁFICOS
círculos claros ligados
claros ligados à
ligados à classe
à classe SIMULAÇÃO
classe SIMULAÇÃO indicam
SIMULAÇÃO indicam a
indicam a relação
a relação de
relação de uso
classes MATEMÁTICA e
MATEMÁTICA e GRÁFICOS
relação de uso
classes 2.4 Tipos
2.4 Tipos abstratos
Tipos abstratos de
abstratos de dados
abstrato de dados
modelo de dados
de dados e
conjunto de operações
de operações associadas
modelo de dados
A classe CONTADOR
classe CONTADOR definida
CONTADOR definida anteriormente
exemplo perfeito de
abstrato de dados
O modelo de
modelo de dados
de dados consiste
dados consiste em
definem o comportamento
modelo de dados
de dados sãocriar
abstrato de dados
de dados CONTADOR
elemento unificado cujo
unificado cujo propósito
valor inteiro arbitrário
objeto CONTADOR por
CONTADOR por outro
por outro objeto
outro objeto CONTADOR
abstrato de dados
de dados definiu
dados definiu propriedades
definiu propriedades singulares
incluem tal aritmética
Tipos abstratos de
abstratos de dados
de dados proporcionam
dados proporcionam poderosas
proporcionam poderosas abstrações
usadas como base
como base para
base para solução
para solução de
solução de problemas
detalhes de baixo
de baixo nível
baixo nível do
nível do modelo
do modelo de
modelo de dados
internos do TAD
propriedades externas do
externas do TAD
conjunto de operações
importantes na determinação
na determinação de
Tipos abstratos de
abstratos de dados
representados por classes
linguagem orientada por
orientada por objetos
Nas linguagens procedurais
linguagens procedurais como
procedurais como C
como C e
C e Pascal
sintaxe de linguagem
de linguagem direta
suporte para tipos
para tipos abstratos
tipos abstratos de
abstratos de dados
Programação cuidadosa e
cuidadosa e disciplinada
e disciplinada permite
programador simular TADs
omissão de –dados
o modelo de
modelo de dados
O estado interno
modificado apenas através
apenas através do
através do conjunto
do conjunto de
conjunto de operações
de operações definidas
omissão de dados
O estado interno
estado interno de
protegido de corrupções
de corrupções negligentes
abstrato de dados
de dados para
O modelo de
modelo de dados
de dados da
dados da luz
da luz deve
luz deve permitir
estados internos verde
amarelo e vermelho
tal modelo de
modelo de dados
de dados permitiria
dados permitiria somente
permitiria somente três
somente três valores
três valores para
instância de COR_DE_LUZ
efetuados na luz
na luz incluem
• prossiga A
prossiga A operaçãomuda_cor
A operaçãomuda_cor permite
usuário ajustar o
ajustar o estado
o estado interno
estado interno da
interno da luz
A operaçãoprossigamuda a
operaçãoprossigamuda a cor
a cor da
cor da luz
da luz através
luz através da
através da seqüência
da seqüência verde
O comportamento do
comportamento do semáforo
2.5 Produtores e
Produtores e consumidores
geralmente composto de
composto de vários
de vários componentes
vários componentes individuais
organização orientada por
orientada por objeto
biblioteca de classes
de classes contém
coleção de classes
de classes unidas
classes unidas por
suportes para alguma
para alguma área
alguma área de
área de aplicação
Bibliotecas de classes
sido construídas para
construídas para apoiar
para apoiar interfaces
apoiar interfaces gráficas
interfaces gráficas de
gráficas de usuário
de usuário dentro
usuário dentro da
dentro da programação
da programação em
programação em Windows
banco de dados
de dados para
dados para armazenamento
para armazenamento de
armazenamento de informações
de informações complexas
matemática computacional para
computacional para aplicações
para aplicações em
aplicações em engenharia
em engenharia e
engenharia e ciências
estruturas de dados
de dados para
dados para representação
para representação de
representação de tipos
de tipos abstratos
tipos abstratos de
abstratos de dados
operações de entrada
de entrada e
entrada e saída
e saída e
saída e outras
e outras áreas
outras áreas de
áreas de aplicações
programador cujo objetivo
cujo objetivo principal
a construção de
construção de bibliotecas
de bibliotecas de
bibliotecas de classes
de classes para
classes para serem
para serem usadas
serem usadas por
usadas por outros
por outros programadores
por outras partes
outras partes de
faz uso da
uso da biblioteca
da biblioteca de
biblioteca de classes
de classes para
classes para aplicações
para aplicações específicas
programador faz o
faz o papel
o papel dos
papel dos dois
produtor e consumidor
produzindo algumas classes
algumas classes para
serem usadas por
usadas por outras
na própria aplicação
geralmente aconselhável usar
aconselhável usar recursos
usar recursos disponíveis
recursos disponíveis de
biblioteca existente para
existente para desenvolver
nova aplicação a
aplicação a menos
deseje desenvolver novas
desenvolver novas aplicações
novas aplicações a
aplicações a partir
a partir de
por exemplo reinventar
exemplo reinventar a
reinventar a roda
capaz de construir
de construir aplicações
construir aplicações de
aplicações de software
de software através
software através do
através do uso
do uso de
uso de componentes
de componentes de
componentes de software
de software existentes
pequena porção de
porção de código
de código novo
atividade de consumidor
típica aplicação inicial
aplicação inicial de
inicial de programação
nome na tela
na tela de
Muitas linguagens de
linguagens de programação
bibliotecas para fazer
para fazer entrada
fazer entrada e
entrada e saída
e saída de
saída de dados
Entrada de dados
o processo de
processo de interação
o usuário e
usuário e computador
e computador na
o usuário transfere
usuário transfere informação
transfere informação para
informação para o
para o programa
Saída de dados
o processo de
processo de interação
o usuário e
usuário e o
e o computador
o computador no
programa transfere informação
O primeiro programa
desejamos construir envolve
construir envolve somente
O programa deverá
programa deverá mostrar
deverá mostrar o
mostrar o nome
o nome do
nome do usuário
do usuário no
usuário no terminal
no terminal de
terminal de vídeo
A identação segue
identação segue o
segue o estilo
o estilo geral
estilo geral do
geral do Eiffel
class PRIMEIRO_PROGRAMA creation
PRIMEIRO_PROGRAMA creation inicio
creation inicio feature
inicio feature inicio
feature inicio is
inicio is do
is do io.putstring
nome e ’
e ’ xxx
end -– class
-– class PRIMEIRO_PROGRAMA
class PRIMEIRO_PROGRAMA Na
PRIMEIRO_PROGRAMA Na listagem
Na listagem 2.1
a classe PRIMEIRO_PROGRAMA
classe PRIMEIRO_PROGRAMA contém
inicia a aplicação
arquivo de configuração
de configuração chamado
configuração chamado arquivoACE
chamado arquivoACE informa
a classe de
classe de aplicação
de aplicação e
aplicação e especifica
e especifica queinicio
o ponto de
ponto de entrada
de entrada para
entrada para a
para a aplicação
O leitor deve
leitor deve consultar
deve consultar o
guia do usuário
do usuário do
EIFFEL para detalhes
para detalhes relacionados
a construção de
A rotina inicio
rotina inicio contém
inicio contém somente
única linha executável
linha executável de
executável de código
nome e ’
e ’ xxx
onde o usuário
o usuário deve
usuário deve substituir
deve substituir o
biblioteca padrão de
padrão de entrada
de entrada e
entrada e saída
e saída de
saída de dados
de dados disponível
dados disponível em
importante componente reusável
componente reusável de
reusável de software
A rotina putstring
das muitas rotinas
muitas rotinas definidas
rotinas definidas nesta
definidas nesta biblioteca
no terminal de
terminal de vídeo
seqüência de caracteres
detalhes formais para
formais para escrita
para escrita de
escrita de programas
de programas em
programas em Eiffel
em Eiffel e
Eiffel e o
e o uso
o uso das
uso das bibliotecas
das bibliotecas existentes
bibliotecas existentes nele
introduzidos no capítulo
Contudo o leitor
querer digitar o
digitar o código
o código da
código da listagem
da listagem 2.1
compilar e executá-lo
o primeiro programa
primeiro programa de
programa de alguém
O autor da
autor da listagem
da listagem 2.1
listagem 2.1 agiu
2.1 agiu como
a biblioteca padrão
biblioteca padrão de
padrão de entrada
de entrada e
entrada e saída
e saída de
saída de dados
Em capítulos posteriores
verá como inspecionar
como inspecionar a
inspecionar a interface
a interface das
interface das bibliotecas
das bibliotecas e
bibliotecas e como
e como usar
fim deste livro
usadas rotinas importante
rotinas importante de
importante de bibliotecas
de bibliotecas importantes
bibliotecas importantes do
importantes do Eiffel
do Eiffel na
Eiffel na construção
na construção de
construção de aplicações
de aplicações específicas
deverá verá o
verá o processo
o processo de
processo de criação
de criação de
criação de rotinas
de rotinas para
rotinas para uso
para uso por
uso por outras
por outras pessoas
consumidor competente antes
competente antes de
Vários capítulos posteriores
capítulos posteriores enfatizam
responsabilidades do produtor
2.6 Modelagem de
Modelagem de objetos
de objetos Modelagem
objetos Modelagem de
Modelagem de objetos
envolve análise edesign
Por causa da
causa da natureza
da natureza introdutória
natureza introdutória deste
introdutória deste livro
conceitos fundamentais dedesigne
fundamentais dedesigne análise
dedesigne análise de
análise de objetos
explorados nesta sessão
2.6.1 Análise Análise
Análise Análise desoftware
tanto orientado por
orientado por objeto
envolve entendimento e
entendimento e modelagem
e modelagem do
modelagem do problema
principais elementos do
elementos do problema
mapeados em componentes
em componentes de
componentes de software
A arquitetura inicial
arquitetura inicial destes
inicial destes componentes
destes componentes desoftwareé
componentes desoftwareé construída
desoftwareé construída de
construída de maneira
de maneira precisa
várias entidades do
entidades do problema
No contexto da
contexto da orientação
da orientação por
orientação por objeto
instância de classe
de classe particular
A análises orientada
análises orientada por
orientada por objetos
por objetos envolve
objetos envolve a
envolve a descoberta
a descoberta de
descoberta de classes
de classes importantes
classes importantes e
outras classes importantes
Como discutido anteriormente
cada classe encapsula
modelo de dados
de dados e
conjunto de serviços
de serviços associados
serviços representam o
representam o modelo
o modelo de
modelo de comportamento
de comportamento das
comportamento das classes
do trabalho de
trabalho de análise
de análise orientada
análise orientada por
orientada por objeto
por objeto envolve
objeto envolve determinar
envolve determinar o
determinar o modelo
o modelo de
modelo de dados
de dados e
dados e comportamento
e comportamento de
comportamento de cada
de cada classe
A arquitetura estática
desenvolvida no nível
no nível de
nível de análise
associações incluem relações
incluem relações de
relações de associação
relação de uso
de uso e
uso e relações
e relações de
relações de generalização
discutidas e ilustradas
e ilustradas a
ilustradas a seguir
2.6.1.1 Relação de
Relação de associação
relação de associação
composto da parte
essencial para a
para a integridade
a integridade do
A relação de
relação de associaçãoé
natural de associação
Muitos dos objetos
compostos de partes
de partes constituintes
capa de plástico
tubo de vídeo
de vídeo e
vídeo e botões
e botões de
botões de controle
dessas partes constituintes
essenciais para o
para o funcionamento
o funcionamento do
funcionamento do monitor
O motor em
parte essencial do
essencial do carro
Embora podendo certamente
próprio número de
número de série
produzido em local
em local separado
local separado e
colocado dentro e
maioria das aplicações
das aplicações o
aplicações o carro
o funcionamento do
funcionamento do carro
totalmente dependente da
dependente da presença
da presença de
ponto de vista
a identidade de
o objeto inteiro
separado do motor
a parte constituinte
parte constituinte e
constituinte e essencial
de transmissão do
transmissão do carro
do carro poderia
parte essencial do
essencial do carro
relação de associação
o motor e
motor e a
e a transmissão
muitos outros componentes
outros componentes essenciais
componentes essenciais do
essenciais do carro
anel de diamante
relação de associação
aro de ouro
de ouro e
pedra de diamante
ponto de vista
de vista de
vista de modelo
de modelo a
modelo a identidade
a identidade d
identidade d aro
d aro de
aro de ouro
de ouro e
ouro e da
e da pedra
da pedra de
pedra de diamante
a identidade de
A notação deBoochpara
relação de associação
mostrada na figura
na figura 2.9
o retângulo escuro
e a classe
o círculo escuro
Relação de associação
2.6.1.2 Relação de
Relação de Uso
de Uso Como
Uso Como exemplo
Como exemplo de
relação de uso
algumas mesas e
mesas e cadeiras
mesas e cadeiras
A sala ainda
sala ainda existe
mesas e cadeiras
e cadeiras podem
A notação de
notação de Booch
de Booch para
relação de uso
mostrada na figura
na figura 2.10
relacionamento de uso
de uso para
uso para zero
cadeiras e zero
Relação de Uso
de Uso 2.6.1.3
Uso 2.6.1.3 Relação
2.6.1.3 Relação de
Relação de Herança
de Herança Herança
contexto de programa
de programa orientado
programa orientado por
orientado por objeto
implica em especialização
classe pai define
pai define atributos
define atributos gerais
atributos gerais e
gerais e comportamento
Cada classe criança
classe criança contém
criança contém atributos
presentes no pai
especial de veículo
avião podem compartilhar
podem compartilhar certos
compartilhar certos atributos
número de pistões
de pistões para
envergadura de asa
de asa para
A notação de
notação de Booch
de Booch para
Booch para herança
mostrada na Figura
na Figura 2.11
Figura 2.11 usando
CARRO e AVIAO
setas apontam da
apontam da criança
na direção da
direção da generalização
Relação de Herança
2.6.2 Análise de
elevador Discutiremos alguns
Discutiremos alguns elementos
alguns elementos simples
elementos simples da
simples da análise
da análise orientada
análise orientada por
orientada por objeto
por objeto de
aspectos relevantes para
relevantes para o
para o problema
conjunto de botões
andar em particular
em particular do
particular do prédio
do prédio comercial
relevante para o
para o funcionamento
o funcionamento de
incluído no modelo
no modelo de
modelo de análise
entra no elevador
no elevador e
elevador e deseja
transportado para outro
para outro andar
tanto superior quanto
superior quanto inferior
no prédio comercial
Baseado na descrição
na descrição do
descrição do problema
o elevador e
conjunto de botões
locais onde o
onde o elevador
partes essenciais de
Na Figura 2.12
simples diagrama de
diagrama de classe
de classe exibindo
classe exibindo a
exibindo a classe
a classe ELEVADOR
classe ELEVADOR e
ELEVADOR e a
e a classe
a classe BOTÃO
Diagrama de classe
de classe paraelevador
classe paraelevador Cada
paraelevador Cada nuvem
Cada nuvem pontilhada
nuvem pontilhada representa
O nome de
nome de classe
dado dentro da
dentro da nuvem
Como indicado anteriormente
une a classe
a classe ELEVADOR
classe ELEVADOR à
ELEVADOR à classe
à classe BOTAO
relação de associação
no final da
final da linha
da linha indica
partes do elevador
O quadrado no
quadrado no final
no final desta
final desta linha
desta linha indica
a classe ELEVADOR
classe ELEVADOR contém
conjunto de botões
compartilhados por quaisquer
por quaisquer outros
quaisquer outros objetos
pessoa entra em
mostrada no diagrama
no diagrama de
diagrama de cenário
de cenário de
cenário de objeto
de objeto dado
objeto dado na
dado na Figura
na Figura 2.13
Cada nuvem sólida
nuvem sólida representa
nome dado dentro
dado dentro da
dentro da nuvem
números seguidos de
seguidos de dois
de dois pontos
dois pontos representam
pontos representam a
representam a seqüência
a seqüência das
seqüência das ações
mostrados na Figura
na Figura 2.13
pessoa entra no
entra no elevador
a pessoa escolhe
dos vários botões
a pessoa aperta
Diagrama de cenário
de cenário de
cenário de objetos
de objetos para
pessoa entrando no
entrando no elevador
O primeiro evento
pessoa entrando no
entrando no elevador
descrito na figura
na figura 2.13
objetouma_pessoamandando a mensagementrar
a mensagementrar para
mensagementrar para o
para o objetoum_elevador
O segundo evento
segundo evento na
evento na figura
na figura 2.13
objetouma_pessoamandando a mensagemselecionar_botãopara
coleção de objetosbotões
mostrado por três
por três nuvens
O botão selecionado
O terceiro evento
terceiro evento exibido
o objetouma_pessoaenviando a
objetouma_pessoaenviando a mensagemapertar
a mensagemapertar para
mensagemapertar para o
para o objetobotao_selecionado
alguém olha para
olha para o
para o problema
deve olhar para
olhar para a
para a solução
faz o projeto
desoftwarecontendo vários objetos
tipicamente definido por
Durante o projeto
identifica-se precisamente classes
precisamente classes adicionais
classes principais identificadas
principais identificadas na
identificadas na análise
na análise para
análise para completar
solução para o
para o problema
A natureza preliminar
natureza preliminar deste
preliminar deste livro
deste livro o
livro o faz
o faz impróprio
faz impróprio para
impróprio para detalhar
para detalhar a
detalhar a fase
a fase de
fase de projeto
2.7 Sumário •
Sumário • Objetos
• Objetos ordinários
seres humanos possuem
habilidade natural de
natural de classificar
de classificar objetos
classificações de classes
• A palavra
usada para significar
objeto cujas propriedades
• A descrição
A descrição de
a abstração do
abstração do objeto
baseada no domínio
no domínio do
domínio do problema
do problema no
o objeto existe
descrição simplificada da
simplificada da realidade
características do objeto
solução do problema
do problema dado
problema dado deve
representada no modelo
no modelo do
modelo do objeto
• Coad e
Coad e Yourdon
e Yourdon definem
abstração de algo
de algo no
algo no domínio
no domínio de
refletindo a capacidade
a capacidade de
de manter informação
encapsulamento de atributos
de atributos e
• O modelo
O modelo de
modelo de dados
de dados fornece
precisa especificação de
mantida em cada
em cada objeto
• O modelo
O modelo de
modelo de comportamento
de comportamento fornece
precisa especificação dos
especificação dos comandos
realizados no objeto
conectado à operação
à operação nesse
operação nesse objeto
nesse objeto usando
diagrama de classe
usado para descrever
para descrever a
descrever a arquitetura
a arquitetura estática
arquitetura estática do
diagrama de cenário
de cenário de
cenário de objeto
usado para descrever
ajuda a determinar
a determinar a
determinar a ação
a ação realizada
• Ciência em
Ciência em geral
em geral e
geral e ciência
e ciência da
ciência da computação
da computação em
computação em particular
em particular envolve
particular envolve modelagem
envolve modelagem e
modelagem e compreensão
e compreensão de
compreensão de sistemas
• Sistemas orientados
Sistemas orientados por
orientados por objetos
por objetos envolvem
objetos envolvem muitos
envolvem muitos objetos
muitos objetos de
objetos de tipos
de tipos diferentes
tipos diferentes trabalhando
diferentes trabalhando juntos
trabalhando juntos para
juntos para alcançar
de alguma maneira
• O processo
O processo de
processo de classificação
usado para gerenciar
para gerenciar complexidade
grupo de objetos
de objetos diferentes
relacionados de alguma
de alguma maneira
cuidadosa consideração de
semelhanças e diferenças
hierarquia de classes
compartilhados por muitas
por muitas subclasses
muitas subclasses devem
postos em classes
em classes no
classes no topo
no topo da
topo da hierarquia
• A base
A base fundamental
base fundamental para
fundamental para classificação
geralmente baseada na
baseada na distribuição
na distribuição e
distribuição e reunião
e reunião de
reunião de atributos
modelo de dados
• A subclasse
A subclasse deve
da classe mãe
atributos da classe
da classe mãe
classe mãe devem
fazer sentido como
sentido como parte
como parte do
parte do estado
do estado da
estado da subclasse
serviços da classe
da classe mãe
classe mãe devem
mãe devem fazer
devem fazer sentido
fazer sentido como
sentido como parte
como parte do
parte do comportamento
do comportamento da
comportamento da subclasse
feitos a partir
a partir de
partir de outros
de outros objetos
abstrato de dados
modelo de dados
de dados e
conjunto associado de
associado de operações
feitas no modelo
no modelo de
modelo de dados
tipos abstratos de
abstratos de dados
de dados fornecem
dados fornecem poderosas
fornecem poderosas abstrações
usadas como base
como base para
base para resolver
para resolver problemas
importância o interior
o interior dos
interior dos TADs
propriedades externas do
externas do TAD
conjunto de operações
importantes na determinação
na determinação de
tipos abstratos de
abstratos de dados
representados por classes
por classes em
classes em linguagens
em linguagens orientadas
linguagens orientadas por
orientadas por objetos
• O termo
omissão de dados
usado para dizer
o modelo de
modelo de dados
O estado interno
modificado através de
conjunto de operações
de operações pré-
operações pré- definidas
programador cujo objetivo
cujo objetivo principal
a construção de
biblioteca de classes
de classes para
classes para outros
para outros programadores
outras partes de
diagrama de Booch
de Booch de
hierarquia de veículos
A classe raiz
classe raiz nesta
raiz nesta hierarquia
nesta hierarquia deverá
a classe VEICULO
atributos associados a
associados a cada
a cada classe
cada classe na
hierarquia de veículos
dois primeiros elementos
primeiros elementos do
elementos do princípio
do princípio de
princípio de consistência
Explique em detalhes
• Acrescente alguns
Acrescente alguns métodos
para cada classe
cada classe em
hierarquia veículo do
veículo do problema
do problema anterior
O terceiro elemento
terceiro elemento do
elemento do princípio
do princípio de
princípio de consistência
diagrama de Booch
sala de aula
de aula universitária
e qualquer outra
qualquer outra coisa
o outro em
diagrama de classe
• Ilustre o
Ilustre o princípio
o princípio decomposição
princípio decomposição construindo
composta de outros
de outros objetos
diagrama de Booch
de Booch de
passos fundamentais envolvendo
fundamentais envolvendo o
envolvendo o ato
o ato de
ato de escrever
cheque pessoal usando
diagrama de cenário
de cenário de
cenário de objeto
de objeto de
objeto de Booch
objetos envolvidos em
cenário e a
e a sucessão
a sucessão de
sucessão de mensagens
de mensagens enviadas
mensagens enviadas a
enviadas a cada
a cada objeto
próprias palavras o
palavras o significado
o significado de
vaso de flor
avião a jato
planador e mobilete
seções de estantes
salas de aula
terminais de computador
desejar acrescentar algumas
acrescentar algumas entidades
algumas entidades adicionais
entidades adicionais para
adicionais para enriquecer
modelagem de objetos
sinta-se livre para
livre para fazer
propósito e mostre
classes especificadas acima
Elementos Básicos de
Básicos de Programas
de Programas de
Programas de Eiffel
de Eiffel 3.1
Eiffel 3.1 Programando
começaremos a programar
a programar neste
programar neste capítulo
coleção interconectada de
interconectada de unidades
de unidades algumas
unidades algumas vezes
algumas vezes chamadas
vezes chamadas módulos
Cada módulo contém
conjunto logicamente coerente
logicamente coerente de
coerente de operações
de operações e
modelo de dados
de dados subjacente
por trás das
trás das operações
contexto de orientação
de orientação por
orientação por objetos
modelo de dados
de dados e
dados e comportamento
e comportamento consistindo
comportamento consistindo em
conjunto de funções
de funções chamadas
funções chamadas consultas
chamadas consultas e
consultas e comandos
podem acessar e
acessar e manipular
informações contidas no
contidas no modelo
no modelo de
modelo de dados
A princípio cada
princípio cada módulo
cada módulo representa
pedaço potencialmente reutilizável
potencialmente reutilizável de
reutilizável de código
ponto de vista
de vista de
vista de ``
de `` sistemas
`` sistemas ""
bem diferente do
diferente do ponto
do ponto de
ponto de vista
de vista de
`` programa ""
programa "" monolítico
Usando a abordagem
a abordagem do
abordagem do ``
do `` programa
`` programa ""
o comportamento desejado
comportamento desejado do
desejado do software
do software deve
embutido e considerado
e considerado para
considerado para a
para a única
a única entidade
Usando a abordagem
a abordagem de
abordagem de ``
de `` sistemas
`` sistemas ""
responsável por apenas
bem enfocada porção
enfocada porção do
porção do comportamento
do comportamento desejado
comportamento desejado do
desejado do software
Linguagens de programação
abordagem de ``
de `` sistemas
`` sistemas ""
sistemas "" para
"" para construção
para construção desoftware
tomaremos desde o
desde o começo
primeiro programa de
programa de Eiffel
primeiro programa ""
dado na listagem
na listagem 3.1
recente padrão de
padrão de formatação
de formatação Eiffel
escritos em itálico
em itálico e
itálico e em
e em adição
palavras reservadas na
reservadas na linguagem
segue o padrão
o padrão de
padrão de formatação
de formatação Eiffel
Primeiro programa em
programa em Eiffel
em Eiffel class
Eiffel class APLICAÇÃO
class APLICAÇÃO creation
APLICAÇÃO creation comece
creation comece feature
comece feature comece
feature comece is
comece is do
is do io.put_string
primeiro programa ""
io.new_line end end
end end --
end -- class
-- class APLICAÇÃO
dois comandos de
comandos de saída
put_stringe new_linequando enviados
new_linequando enviados para
enviados para o
para o objeto
o objeto padrão
objeto padrão de
padrão de entrada
de entrada e
entrada e saída
exibida na saída
na saída padrão
monitor de vídeo
a posição do
posição do cursor
do cursor movida
cursor movida para
movida para a
para a próxima
a próxima linha
Como a saída
a saída e
saída e entrada
e entrada de
entrada de dados
existência ocorre por
ocorre por padrão
aplicações em Eiffell
capaz de escrever
o programador deve
algum conhecimento dos
conhecimento dos serviços
dos serviços de
serviços de saída
de saída de
saída de dados
de dados na
dados na classe
na classe STANDARD_FILES
resumo destes serviços
detalhes de implementação
de implementação e
implementação e revela
e revela somente
revela somente a
somente a informação
a informação de
informação de interface
relevante para o
para o uso
o uso desta
uso desta classe
A listagem 3.2
listagem 3.2 mostra
3.2 mostra parte
mostra parte destes
parte destes detalhes
destes detalhes de
detalhes de interface
de interface usando
interface usando o
usando o resultado
o resultado da
resultado da aplicação
da aplicação doshort
aplicação doshort na
doshort na classe
rotinas de saída
de saída de
saída de dados
de dados contidas
dados contidas nesta
contidas nesta classe
proporcionam meios para
o programador possa
programador possa imprimir
possa imprimir caracteres
strings e valores
e valores booleanos
Partes da interface
da interface da
interface da classe
da classe STANDARD_FILES
class interface STANDARD_FILES
interface STANDARD_FILES feature
STANDARD_FILES feature specification
feature specification --
specification -- rotinas
-- rotinas de
rotinas de saída
cm vários erros
vários erros de
erros de formatação
-- Escreve ‘
Escreve ‘ c
‘ c ’
c ’ no
’ no fim
no fim da
fim da saída
da saída default
-- Escreve ‘
Escreve ‘ s
‘ s ’
s ’ no
’ no fim
no fim da
fim da saída
da saída default
-- Escreve ‘
Escreve ‘ r
‘ r ’
r ’ no
’ no fim
no fim da
fim da saída
da saída default
-- Escreve ‘
Escreve ‘ d
‘ d ’
d ’ no
’ no fim
no fim da
fim da saída
da saída default
-- Escreve ‘
Escreve ‘ i
‘ i ’
i ’ no
’ no fim
no fim da
fim da saída
da saída default
-- Escreve ‘
Escreve ‘ b
‘ b ’
b ’ no
’ no fim
no fim da
fim da saída
da saída default
new_line -- Escreve
-- Escreve mudança
Escreve mudança de
mudança de linha
de linha no
linha no fim
no fim da
fim da saída
da saída default
-- Muitas rotinas
end interface –
interface – classe
– classe STANDARD_FILES
classe STANDARD_FILES A
STANDARD_FILES A classeAPLICAÇÃO
A classeAPLICAÇÃO na
classeAPLICAÇÃO na Listagem
na Listagem 3.1
Listagem 3.1 serve
3.1 serve para
serve para iniciar
para iniciar a
iniciar a execução
a execução do
execução do software
a classe raiz
classe raiz da
raiz da aplicação
softwares Eiffel devem
Eiffel devem estar
devem estar acompanhados
estar acompanhados de
arquivo das bibliotecas
das bibliotecas padrão
constituem a aplicação
a aplicação dada
o nome da
nome da classe
da classe raiz
e o nome
o nome da
nome da rotina
da rotina de
rotina de criação
de criação dentro
criação dentro da
dentro da classe
da classe raiz
O arquivo Ace
controla a aplicação
a aplicação dada
aplicação dada na
dada na Listagem
na Listagem 3.1
mostrado na Listagem
na Listagem 3.3
Arquivo Ace para
Ace para Listagem
para Listagem 3.1
system test root
test root aplication
cm erro no
erro no layout
querer consultar o
consultar o manual
o manual de
manual de instruções
Eiffel para maiores
para maiores detalhes
maiores detalhes a
detalhes a respeito
a respeito de
respeito de arquivos
de arquivos Ace
3.2 A linguagem
A linguagem Eiffel
linguagem Eiffel A
Eiffel A linguagem
A linguagem nasceu
linguagem nasceu no
nasceu no final
no final dos
final dos anos
dos anos 80
linguagem totalmente orientada
totalmente orientada por
orientada por objeto
chamadas somente através
somente através de
através de objetos
de objetos e
como entidades lógicas
entidades lógicas auto-suficientes
contraste evidente para
evidente para a
para a popular
complexa linguagem orientada
linguagem orientada por
orientada por objetos
por objetos C++
mistura de programação
de programação orientada
programação orientada por
orientada por objetos
por objetos e
objetos e estruturada
e estruturada na
estruturada na mesma
na mesma aplicação
sendo denominada linguagem
denominada linguagem híbrida
linguagem totalmente orientada
totalmente orientada por
orientada por objeto
a classe em
classe em Eiffel
a unidade básica
unidade básica lógica
básica lógica do
lógica do encapsulamento
do encapsulamento bem
encapsulamento bem como
bem como a
como a unidade
a unidade básica
unidade básica física
programa em Eiffel
conjunto de classes
de classes interligadas
classes interligadas e
interligadas e cooperando
Nas diversas seções
diversas seções seguintes
elementos básicos da
básicos da programação
da programação em
programação em Eiffel
de outras linguagens
O projetista do
projetista do Eiffel
grande estudioso da
estudioso da tecnologia
da tecnologia de
tecnologia de linguagens
de linguagens de
linguagens de programação
de programação e
programação e projetou
utiliza algumas das
algumas das melhores
das melhores características
melhores características encontradas
características encontradas nas
encontradas nas outras
nas outras linguagens
irá achar a
achar a sintaxe
a sintaxe do
sintaxe do Eiffel
do Eiffel coerente
lógica e legível
3.3 Criando e
Criando e destruindo
e destruindo objetos
destruindo objetos Programas
constituídos de classe
espaço na memória
destruído o espaço
o espaço reservado
liberado e poderá
reutilizado por outros
por outros objetos
outros objetos criados
objeto em Eiffel
e nas outras
nas outras linguagens
outras linguagens orientadas
linguagens orientadas por
orientadas por objetos
modelo de dados
de dados de
conjunto de rotinas
de rotinas dadas
rotinas dadas na
dadas na descrição
na descrição da
descrição da classe
criado no Eiffel
o nome da
nome da classe
da classe da
em Eiffel como
o compilador verifica
a classe referida
Normalmente o arquivo
define a classe
a classe deve
classe deve estar
deve estar no
subdiretório da classe
da classe na
a declaração existe
cm vários erros
vários erros de
erros de identação
de identação na
identação na listagem
instância da classe
da classe CARRO
reservada para o
para o objetomeu_carro
como em qualquer
em qualquer outro
qualquer outro objeto
assumindo o valor
o valor Void
receber qualquer comando
efetuar nenhuma tarefa
nenhuma tarefa proveitosa
instância da classe
da classe CARRO
classe CARRO e
região de memória
de memória corretamente
memória corretamente alocada
corretamente alocada para
alocada para si
rotina de criação
operador de criação
de criação deve
Considere o caso
o caso onde
caso onde a
onde a classe
a classe CARRO
nenhuma rotina de
rotina de criação
de criação especificada
poderia fazer o
fazer o objetomeu_carroexistir
local de armazenamento
de armazenamento para
usar o seguinte
o seguinte operador
seguinte operador de
operador de criação
O resultado desta
resultado desta expressão
a criação de
local para armazenarmeu_carro
providenciar qualquer inicialização
qualquer inicialização dos
inicialização dos atributos
definidos na classe
na classe CARRO
declarados como sendo
como sendo do
assumem inicialmente valores
inicialmente valores padrão
Considere outro caso
outro caso onde
caso onde a
onde a classe
a classe CARRO
classe CARRO providencie
CARRO providencie três
providencie três rotinas
três rotinas de
rotinas de criação
parte da classe
da classe CARRO
class CARRO creation
CARRO creation criar
construir feature criar
is -- Detalhes
mostrados end --
end -- criar
-- criar montar
is -- Detalhes
mostrados end --
end -- montar
-- montar construir
is -- Detalhes
mostrados end --
end -- construir
-- construir Algumas
construir Algumas expressões
poderiam criar o
criar o objetomeu_carroincluem
três expressões acima
o objetomeu_carroé criado
objetomeu_carroé criado e
criado e inicializado
valores dados como
dados como parâmetros
como parâmetros nas
parâmetros nas várias
nas várias rotinas
várias rotinas de
rotinas de criação
No primeiro caso
primeiro caso dado
caso dado acima
Deveria ficar claro
ficar claro nessa
claro nessa discussão
usando o operador
o operador de
operador de criação
na frente do
frente do objeto
rotina de criação
de criação específica
criação específica em
específica em conjunto
o operador de
operador de criação
como mostrado nos
mostrado nos três
nos três exemplos
três exemplos acima
objetos de Eiffel
sistemas Eiffel proporcionam
coleta automática de
automática de lixo
aplicativo Eiffel roda
processo de coleta
de coleta de
coleta de lixo
rodando em segundo
em segundo plano
segundo plano e
plano e detectando
região de memória
nome de variável
momento oportuno o
oportuno o processo
o processo de
processo de coleta
de coleta de
coleta de lixo
de lixo recicla
o armazenamento desnecessário
O seguinte segmento
seguinte segmento de
segmento de código
de código mostra
o armazenamento de
armazenamento de memória
alocado e o
e o nome
o nome do
nome do objetomeu_carroanexado
do objetomeu_carroanexado a
A terceira sentença
novo armazenamento de
armazenamento de memória
alocado e o
e o nome
o nome do
nome do objetomeu_carro
do objetomeu_carro anexado
objetomeu_carro anexado a
deixando o antigo
o antigo desanexado
antigo desanexado de
desanexado de qualquer
de qualquer outro
qualquer outro nome
outro nome de
nome de objeto
A seqüência de
seqüência de ações
mostrada na Figura
na Figura 3.1
Produção de Lixo
A seção de
seção de memória
de memória destacada
coletor automático de
automático de lixo
enquanto o programa
da responsabilidade do
responsabilidade do programador
do programador deEiffel
programador deEiffel fazer
3.4 Tipos básicos
valores default e
default e atribuições
e atribuições Existem
atribuições Existem vários
Existem vários tipos
vários tipos básicos
tipos básicos de
básicos de objetos
criação definida para
definida para serem
para serem usados
REAL e BOOLEAN
objetos de tipos
de tipos básicos
tipos básicos recebe
valordefault do caracter
do caracter NULL
tipos básicos apresentados
básicos apresentados na
apresentados na seção
na seção anterior
significado de valores
a declaração de
declaração de tais
de tais objetos
tais objetos causam
objetos causam alocação
causam alocação automatica
alocação automatica de
automatica de memória
de memória e
memória e atribuição
e atribuição de
atribuição de valoresdefaultpara
básico de objeto
objeto de origem
atribuído para outro
básico de objeto
objeto de destino
região de memória
de memória diferente
memória diferente de
diferente de onde
o objeto de
objeto de origem
O operador de
operador de atribuição
de atribuição do
atribuição do Eiffel
O comando a
a recebe b
A figura 3.2
figura 3.2 mostra
3.2 mostra a
mostra a atribuição
dois objetos do
Atribuição de objetos
de objetos de
objetos de tipos
de tipos básicos
tipos básicos 3.5
básicos 3.5 Tipos
3.5 Tipos de
Tipos de objetos
de objetos ordinários
semântica de referência
alocação de memória
de memória através
memória através de
operador de criação
rotina de criação
de criação como
discutido na seção
na seção 3.3
O valor defaultde
objeto ordinário éVoid
Após o programador
o programador alocar
espaço na memória
na memória para
o nome do
nome do objeto
anexado àquela região
àquela região de
região de memória
ver figura 3.1
objeto ordinário a
ordinário a outro
Considere o segmento
o segmento de
segmento de código
de código abaixo
=meu_carro A figura
A figura 3.3
figura 3.3 representa
3.3 representa a
representa a semântica
a semântica do
semântica do segmento
do segmento de
segmento de código
de código acima
Atribuição de objetos
de objetos de
objetos de tipos
de tipos de
tipos de referência
da atribuição demeu_carroparaseu_carro
ambos nomes dos
nomes dos objetos
ligados à mesma
à mesma região
mesma região de
região de memória
dos atributos demeu_carrofor
atributos demeu_carrofor modificado
através do envio
do envio de
o atributo peso
atributo peso deseu_carro
modificado para 2500
dois objetos independentes
dois nomes diferentes
nomes diferentes para
diferentes para o
objeto na memória
objeto existe na
existe na memória
na memória do
memória do computador
3.6 Copiando Objetos
Copiando Objetos Supondo
o objetoseu_carroda seção
objetoseu_carroda seção anterior
mesmos valores de
valores de atributos
de atributos demeu_carro
ligado à mesma
à mesma região
mesma região de
região de memória
de memória demeu_carro
Suponha quemeu_carrotivesse sido
quemeu_carrotivesse sido criado
sido criado e
criado e inicializado
Crie o objetoseu_carroe
Use a rotinacopy
objetos em Eiffel
sido associado à
região de memória
de memória para
memória para a
para a rotinacopy
a rotinacopy trabalhar
erro de tempo
de tempo de
tempo de execução
invocar a rotinacopysobre
A semântica da
semântica da rotinacopyé
da rotinacopyé mostrada
rotinacopyé mostrada na
mostrada na figura
na figura 3.4
Semântica da cópia
3.7 Clonagem Suponha
deseja alocar memória
alocar memória paraseu_carroe
valores dos atributos
dos atributos demeu_carro
atributos demeu_carro para
demeu_carro para seu_carro
realizado usando a
usando a rotinaclone
a rotinaclone disponível
rotinaclone disponível para
feito da seguinte
da seguinte maneira
A semântica da
semântica da rotinacloneestá
da rotinacloneestá mostrada
rotinacloneestá mostrada na
mostrada na figura
na figura 3.5
Semântica da clonagem
da clonagem 3.8
clonagem 3.8 Operadores
3.8 Operadores básicos
exemplos Operador de
Operador de igualdade
mesma seção de
seção de memória
alguém quiser testar
objetosx e y
REAL if meu_valor=seu_valor
if meu_valor=seu_valor then
meu_valor=seu_valor then –-
mesmos tome alguma
tome alguma atitude
alguma atitude --
atitude -- alguma
-- alguma atitude
alguma atitude end
atitude end Operador
end Operador de
Operador de desigualdade
objetosx e y
expressão do tipoif
do tipoif x/=y
tipoif x/=y poderia
INTEGER if meu_valor/=seu_valor
if meu_valor/=seu_valor then
meu_valor/=seu_valor then –-
iguais tome alguma
tome alguma atitude
alguma atitude --
atitude -- alguma
-- alguma atitude
alguma atitude end
Operador binário para
binário para resto
=b\\\\c -- valor
Operador binário para
binário para menor
=4 if b
c then --
then -- realiza
-- realiza alguma
realiza alguma ação
alguma ação apenas
c -- alguma
-- alguma ação
alguma ação end
Operador binário para
binário para menor
Operador binário para
binário para maior
Operador binário para
binário para maior
Operador binário para
binário para adição
Operador binário para
binário para subtração
Operador binário para
binário para multiplicação
Operador binário para
binário para divisão
Operador binário para
binário para exponenciação
Operador binário para
binário para menor
Operador binário para
binário para menor
Operador binário para
binário para maior
Operador binário para
binário para maior
operador unário para
unário para negação
para negação lógica
=4 if not
then -- realiza
-- realiza alguma
realiza alguma ação
alguma ação apenas
igual a b
a b --
b -- alguma
-- alguma ação
alguma ação end
cm layout errado
operador lógico binário
=4 if b
then -- toma
-- toma a
toma a ação
a ação abaixo
-- alguma ação
alguma ação end
ação end and
then -- toma
-- toma a
toma a ação
a ação abaixo
positivo e c
-- alguma ação
alguma ação end
ação end implies
usada em assertivas
operador lógico binário
lógico binário para
40 if b=0
if b=0 or
b=0 or else
or else c//b
then -- toma
-- toma a
toma a ação
a ação abaixo
-- avalia a
avalia a expressão
a expressão c//b
expressão c//b apenas
-- alguma ação
alguma ação end
ação end and
end and then
operador lógico binário
lógico binário para
and then c//b
then -- execute
-- execute a
execute a ação
a ação apenas
positivo e c//b
-- calcule a
calcule a expressão
a expressão c//b
expressão c//b apenas
positivo -- alguma
-- alguma ação
alguma ação end
últimos dois operadores
chamados operadores de
operadores de curto
de curto circuito
Para o operador
o operador ``
operador `` or
`` or else
or else ""
a primeira expressão
a segunda expressão
segunda expressão nunca
Para o operador
o operador ``
operador `` and
`` and then
and then ""
a primeira expressão
a segunda expressão
segunda expressão nunca
3.9 Ramificação O
simples de ramificação
estrutura de controle
a execução de
bloco de código
baseada no resultado
no resultado de
executado antes de
antes de entrar
de entrar no
entrar no bloco
no bloco de
bloco de código
O teste lógico
teste lógico requer
lógico requer a
requer a avaliação
a avaliação de
expressão do tipoboolean
A forma desta
forma desta estrutura
if uma_expressão_booleana then
uma_expressão_booleana then comando
160 then --
then -- o
-- o avião
o avião decola
avião decola end
decola end Outra
end Outra estrutura
Outra estrutura simples
estrutura simples de
simples de controle
dois blocos de
blocos de código
baseada na avaliação
na avaliação de
expressão do tipoboolean
estrutura de controle
construída como segue
if expressão_booleana then
expressão_booleana then bloco_1
then bloco_1 else
bloco_1 else bloco_2
else bloco_2 end
bloco_2 end Aqui
bloco_1 e bloco_2
e bloco_2 representam
linhas de código
160 then --
then -- o
-- o avião
o avião decola
avião decola else
decola else --
else -- o
-- o avião
o avião para
avião para e
para e a
e a decolagem
interrompida end O
end O comandoif-then-else
O comandoif-then-else podem
Considere o segmento
o segmento de
segmento de código
de código seguinte
if expressão1 then
expressão1 then comando1
then comando1 else
comando1 else if
else if expressão2
if expressão2 then
expressão2 then comando2
then comando2 else
comando2 else comando3
else comando3 end
comando3 end end
executado o comando2
executado o comando3
executado baseado na
baseado na avaliação
na avaliação de
avaliação de expressões
if expressão1 then
expressão1 then comando1
then comando1 elseif
comando1 elseif expressão2
elseif expressão2 then
expressão2 then comando2
then comando2 elseif
comando2 elseif expressão3
elseif expressão3 then
expressão3 then comando3
then comando3 else
comando3 else comando4
else comando4 end
comando4 end A
end A expressãoelse
A expressãoelse na
expressãoelse na construção
na construção acima
limite para o
para o número
o número de
número de expressões
de expressões deelseif
220 then --
then -- diminuir
-- diminuir a
diminuir a velocidade
cm layout errado
operação lógica fundamental
lógica fundamental da
fundamental da computação
bloco de comandos
alguma condição de
condição de parada
a condição de
condição de parada
de parada nunca
a execução das
execução das declarações
das declarações dentro
declarações dentro do
dentro do loop
do loop continuará
loop continuará indefinidamente
continuará indefinidamente e
indefinidamente e o
e o programa
o programa tipicamente
programa tipicamente parece
o programa parece
estar fazendo qualquer
fazendo qualquer coisa
qualquer coisa de
coisa de útil
loop corretamente construído
a condição de
condição de parada
A forma geral
forma geral das
geral das construções
das construções de
construções de iteração
From instruções_de_inicialização Until
instruções_de_inicialização Until condições_de_saída_do_loop
Until condições_de_saída_do_loop loop
condições_de_saída_do_loop loop corpo_do_loop
loop corpo_do_loop end
corpo_do_loop end O
end O comando
compreendem asinstruções_de_inicializaçãosão executados
asinstruções_de_inicializaçãosão executados exatamente
Ascondições_de_saída_do_loopsão testadas antes
testadas antes de
antes de cada
de cada execução
cada execução do
execução do loop
avaliada como falsa
o loopé executado
de outra maneira
outra maneira o
maneira o loop
terminado e o
e o controle
transferido para a
para a linha
a linha abaixo
linha abaixo da
abaixo da declaração
da declaração end
encontradas no corpo
no corpo do
corpo do loop
palavras loop e
loop e end
eventualmente tornarão ascondições_de_saída_do_loop
tornarão ascondições_de_saída_do_loop verdadeiras
O segmento do
segmento do código
usando o comando
o comando loop
=1 until index=65536
until index=65536 loop
index=65536 loop index
io.new_line end A
end A instrução
A instrução index
=1 representa asinstruções_de_inicialização
index assuma o
assuma o valor
o valor inicial
valor inicial de
A declaração index=65536
declaração index=65536 representa
três linhas do
linhas do código
do código logo
código logo abaixo
logo abaixo de
abaixo de loop
de loop representam
loop representam o
representam o corpo_do_loop.
2substitui o valor
o valor antigo
valor antigo deindex
antigo deindex por
valor duas vezes
duas vezes maior
O comando deve
index recebe index
recebe index vezes
examinaremos outros exemplos
outros exemplos para
exemplos para ilustrar
para ilustrar o
ilustrar o uso
o uso doloop
No próximo exemplo
próximo exemplo suponha
queiramos computar a
computar a soma
a soma de
1+2+3+4+5+6+ .... +1000000
segmento de código
de código do
código do Eiffel
do Eiffel para
Eiffel para computar
várias partes da
partes da construção
da construção doloop
mostradas e comentadas
INTEGER from --
from -- comandos
-- comandos de
comandos de inicialização
de inicialização do
inicialização do loop
do loop soma
=0 until indice=1000000
until indice=1000000 --
indice=1000000 -- condição
encerra o loop
o loop loop
loop loop --
loop -- corpo
-- corpo do
corpo do loop
do loop indice
=soma+indice end io.put_string
io.new_line A instrução
A instrução indice
índice recebe índice
instruções de inicialização
=0 e indice
correta porém desnecessária
objetos assumem o
assumem o valor
em virtude de
a soma mostrada
soma mostrada na
mostrada na tela
outra aplicação vamos
aplicação vamos aproximar
vamos aproximar a
aproximar a bem
a bem conhecida
bem conhecida série
conhecida série geométrica
n cujo valor
cujo valor teórico
valor teórico equivale
teórico equivale a
queremos continuar adicionando
continuar adicionando números
o próximo número
próximo número da
número da série
O segmento de
segmento de código
de código a
código a seguir
a seguir usa
construção deloop para
deloop para aproximar
para aproximar a
aproximar a soma
REAL from soma
cm layout errado
=0.5 until proximo_termo
0.000000001 loop soma
=proximo_termo/2.0 end A
end A parte
A parte de
parte de inicialização
de inicialização do
inicialização do loop
do loop altera
loop altera o
altera o valor
o valor de
valor de soma
de soma para
soma para 1.0
para 1.0 eproximo_termo
1.0 eproximo_termo para
eproximo_termo para 05
No corpo doloop
valor corrente deproximo_termo
o valor deproximo_termoé
valor deproximo_termoé alterado
deproximo_termoé alterado para
alterado para metade
para metade de
A soma realizada
Muitos exemplos adicionais
exemplos adicionais de
adicionais de construções
de construções comloop
construções comloop aparecerão
tarde em listagens
em listagens de
listagens de programa
3.11 Rotinas Rotinas
Rotinas Rotinas existem
Rotinas existem em
existem em duas
em duas formas
comandos e consultas
o comando meu_ponto.alterar_coordenada_x
troca o atributox
o atributox demeu_pontopara
valor igual a
igual a 50
A consultameu_ponto.angulocomputa a
consultameu_ponto.angulocomputa a coordenada
a coordenada polar
coordenada polar doangulodemeu_ponto
Comandos tipicamente mudam
tipicamente mudam o
mudam o estado
o estado interno
estado interno do
interno do objeto
Consultas nunca mudam
nunca mudam o
mudam o estado
o estado interno
estado interno do
interno do objeto
consulta corretamente construída
corretamente construída retorna
construída retorna informações
retorna informações do
informações do objeto
Embora a linguagem
a linguagem Eiffel
linguagem Eiffel permita
Eiffel permita alguém
permita alguém definir
mude o estado
o estado interno
estado interno e
Comandos e consultas
seção de características
de características de
Tanto a informação
a informação de
informação de interface
de interface quanto
detalhes de implementação
O usuário de
precisa acessar somente
acessar somente a
somente a parte
a parte de
parte de interface
de interface da
interface da rotina
O criador da
criador da classe
da classe precisa
classe precisa acessar
detalhes de implementação
realiza manutenção de
manutenção de rotina
apresentados e corrigidos
melhoramentos em capacidade
melhorias em eficiência
consideraremos somente a
simples estrutura para
rotina neste capítulo
avançados outros componentes
outros componentes de
comopré e pós-
e pós- condições
cm layout errado
A estrutura de
estrutura de sintaxe
de sintaxe de
is local declaração_de_objetos
local declaração_de_objetos do
declaração_de_objetos do --
do -- corpo
-- corpo da
corpo da rotina
da rotina end
rotina end –-
end –- nome_rotina
–- nome_rotina O
nome_rotina O nome
O nome da
nome da rotina
deve descrever o
descrever o propósito
o propósito da
propósito da rotina
rotina comando para
comando para alterar
para alterar o
alterar o peso
o peso de
o nome mudar_peso
como função calcular
função calcular o
calcular o volume
o volume de
A lista de
lista de parâmetros
colocadas para usar
computada e retornada
e retornada para
chamou a rotina
chamou a função
A declaração de
declaração de objetos
lista de nomes
de nomes de
nomes de objetos
de objetos seguidos
objetos seguidos de
respectivos tipos de
tipos de classe
tipos básicos INTEGER
REAL e BOOLEAN
Cada objeto assume
padrão de Void
criado explicitamente por
delimitadoresdo e end
e end representam
end representam o
representam o corpo
detalhes de implementação
de implementação da
implementação da rotina
Para ilustrar o
ilustrar o conceito
o conceito de
conceito de comando
de comando e
comando e consulta
classe simplificada IMPOSTO
simplificada IMPOSTO cujos
IMPOSTO cujos detalhes
mostrados na listagem
na listagem 3.4
O atributo renda_dedutivelpode
alguém quiser mudar
quiser mudar o
mudar o valor
o valor deste
valor deste atributo
somente o comando
o comando criar
Listagem 3.4 Classe
3.4 Classe IMPOSTO
Classe IMPOSTO para
IMPOSTO para ilustrar
comandos e constultas
e constultas class
constultas class IMPOSTO
class IMPOSTO creation
IMPOSTO creation criar
creation criar feature
-- Atributo de
Atributo de consulta
de consulta renda_dedutivel
REAL -- Criação
-- Criação e
Criação e comando
e comando ordinário
comando ordinário criar
is do renda_dedutivel
quantia end --
end -- Função
-- Função consulta
Função consulta imposto_devido
REAL is --
is -- Computação
-- Computação do
Computação do imposto
do imposto baseada
imposto baseada no
baseada no atributo
no atributo renda_dedutivel
atributo renda_dedutivel do
renda_dedutivel do if
do if renda_dedutivel
6000.0 then Result
0.0 elseif renda_dedutivel
22000.0 then Result
renda_dedutivel else Result
end end end
end end --
end -- class
-- class IMPOSTO
class IMPOSTO Na
IMPOSTO Na funçãoimposto_devido
o imposto devido
darenda_dedutivelse o rendimento
do excesso de
excesso de 22000
de 22000 darenda_dedutivel
a renda ultrapassa
renda ultrapassa 22000
rotina de criação
O valor passado
valor passado altera
passado altera o
altera o valor
o valor corrente
valor corrente do
corrente do atributorenda_dedutivel
A listagem 3.5
listagem 3.5 exibe
exercita a classe
a classe IMPOSTO
Programa teste simples
teste simples para
simples para classe
para classe IMPOSTO
class APLICAÇÃO creation
APLICAÇÃO creation comece
creation comece feature
comece is local
is local meu_imposto
IMPOSTO do --
do -- use
-- use o
use o comando
o comando criar
comando criar para
criar para criar
para criar e
criar e inicializar
e inicializar o
inicializar o objeto
o objeto meu_imposto
impostos a pagar
a pagar por
-- use o
use o atributo
o atributo renda_dedutivel
atributo renda_dedutivel para
renda_dedutivel para retornar
para retornar informação
retornar informação io.put_real
-- use a
use a rotina
a rotina imposto_devido
rotina imposto_devido para
imposto_devido para retornar
para retornar informação
retornar informação io.put_real
impostos a pagar
a pagar por
io.new_line end end
end end –-
end –- classe
–- classe APLICAÇÃO
duas classes IMPOSTO
classes IMPOSTO eAPLICAÇÃO
IMPOSTO eAPLICAÇÃO constituem
O objeto meu_imposto
criado e inicializado
o valor 40000
valor 40000 usando
40000 usando o
usando o comando
o comando de
comando de criaçãocriar
A renda dedutível
renda dedutível atual
acessada diretamente usando
diretamente usando o
usando o atributo
o atributo de
atributo de consultarenda_dedutivel
A função de
função de consultaimposto_devidoé
de consultaimposto_devidoé usada
consultaimposto_devidoé usada para
usada para acessar
para acessar o
acessar o imposto
o imposto devido
imposto devido para
devido para a
para a renda
a renda dedutível
renda dedutível atual
O valor da
valor da renda
da renda dedutível
alterado para 200000
para 200000 usando
200000 usando o
usando o comandocriar
o parâmetro 200000
Então o atributo
o atributo e
atributo e a
e a função
a função de
função de consulta
usados para mostrar
para mostrar novos
mostrar novos dados
usados para armazenar
coleção de elementos
O significado de
Cada elemento do
elemento do vetor
endereço único dito
Através do índice
do índice alguém
local único no
único no vetor
Algumas linguagens fornecem
linguagens fornecem o
fornecem o vetor
o vetor como
básico enquanto outras
enquanto outras linguagens
tal como Eiffel
biblioteca externa como
externa como suporte
como suporte para
suporte para vetores
vetores em Eiffel
classe padrão chamada
padrão chamada ARRAY
A figura 3.6
figura 3.6 mostra
vetor de elementos
vetor de elementos
a natureza dos
natureza dos objetos
dos objetos em
vetor como o
como o representado
o representado na
representado na figura
programação orientada por
orientada por objeto
em relação à
elementos nos vetores
típica declaração de
instâncias de objetos
O comandoput da
comandoput da classe
da classe ARRAY
num índice especificadoé
Na expressão acimameu_vetoré
expressão acimameu_vetoré o
acimameu_vetoré o nome
o nome do
nome do vetor
do vetor ondemeu_objetoé
vetor ondemeu_objetoé inserido
A figura 3.7
figura 3.7 retrata
introdução domeu_ojetocomo o
domeu_ojetocomo o quarto
o quarto dos
quarto dos cinco
dos cinco elementos
cinco elementos do
elementos do vetore
do vetore mostrado
vetore mostrado na
mostrado na figura
A função de
função de consulta
de consulta da
consulta da classe
da classe ARRAY
valor inteiro dentro
inteiro dentro dos
dentro dos limites
dos limites legais
limites legais para
O vetor na
vetor na figura
na figura 3.7
limite legal de
A figura 3.8
figura 3.8 mostra
3.8 mostra o
mostra o elemento
o elemento na
elemento na posição
A rotina de
rotina de criação
de criação da
criação da classe
da classe ARRAY
para a construção
a construção de
instância da classe
da classe ARRAY
valores inteiroslimite_inferior e
inteiroslimite_inferior e limite_superiorespecificam
e limite_superiorespecificam a
limite_superiorespecificam a variação
a variação legal
variação legal do
legal do índice
do índice do
índice do vetor
Após criar o
criar o vetor
elementos em cada
em cada posição
cada posição assumem
idéias anteriores construindo
vetor de veículos
Haverá três tipos
três tipos de
tipos de veículos
de veículos no
veículos no vetor
Nenhum dos detalhes
dos detalhes das
detalhes das três
das três classes
subclasses da classe
da classe VEÍCULO
class VEÍCULO --
VEÍCULO -- Classe
-- Classe básica
Nenhum detalhe mostrado
end -- classe
-- classe VEÍCULO
classe VEÍCULO class
VEÍCULO class CARRO
class CARRO inherit
CARRO inherit VEÍCULO
inherit VEÍCULO --
VEÍCULO -- Nenhum
-- Nenhum detalhe
Nenhum detalhe mostrado
end -- classe
-- classe CARRO
classe CARRO class
CARRO class AVIÃO
class AVIÃO inherit
AVIÃO inherit VEÍCULO
inherit VEÍCULO --
VEÍCULO -- Nenhum
-- Nenhum detalhe
Nenhum detalhe mostrado
end -- classe
-- classe AVIÃO
classe AVIÃO class
AVIÃO class BARCO
class BARCO inherit
BARCO inherit VEÍCULO
inherit VEÍCULO --
VEÍCULO -- Nenhum
-- Nenhum detalhe
Nenhum detalhe mostrado
end –- classe
–- classe BARCO
classe BARCO class
BARCO class APLICAÇÃO
class APLICAÇÃO creation
APLICAÇÃO creation inicio
creation inicio feature
inicio feature inicio
feature inicio is
inicio is local
is local meu_vetor
end end --
end -- classe
-- classe Aplicação
classe Aplicação A
Aplicação A figura
A figura 3.9
figura 3.9 descreve
3.9 descreve a
descreve a construção
a construção demeu_vetorcontendo
construção demeu_vetorcontendo três
demeu_vetorcontendo três veículos
Vetor de três
de três veículos
consideraremos o problema
o problema da
problema da ordenação
da ordenação de
vetor de números
de números inteiros
números inteiros de
inteiros de tamanho
retornaremos o assunto
o assunto da
assunto da ordenação
da ordenação no
ordenação no Capítulo
o apresentaremos de
séria e discutiremos
e discutiremos diversos
discutiremos diversos métodos
diversos métodos importantes
métodos importantes de
importantes de ordenação
simples aplicação nos
aplicação nos permitirá
nos permitirá rever
permitirá rever o
rever o assunto
o assunto das
assunto das rotinas
das rotinas de
rotinas de ramificação
de ramificação e
vetor como a
como a seguir
queremos inserir valores
inserir valores inteiros
valores inteiros nas
inteiros nas posições
números no vetor
no vetor colocando
vetor colocando o
colocando o menor
o menor na
menor na posição
o segundo menor
segundo menor na
menor na posição
e o maior
o maior na
maior na posição
A listagem 3.6
listagem 3.6 nos
3.6 nos apresenta
rotina de ordenação
class APLICAÇÃO_ORDENACAO creation
APLICAÇÃO_ORDENACAO creation comece
creation comece feature
comece feature comece
feature comece is
comece is local
is local dados
is require vetor_de_tamanho_certo
cm layout errado
INTEGER do if
do if dados.item
end if dados.item
end end imprimir
is local índice
INTEGER do from
do from índice
os_dados.count loop índice
end io.new_line end
io.new_line end end
end end --
end -- classe
-- classe APLICACAO_ORDENACAO
classe APLICACAO_ORDENACAO A
APLICACAO_ORDENACAO A primeira
A primeira ordem
primeira ordem de
ordem de execução
de execução da
execução da rotinacomeceé
da rotinacomeceé a
rotinacomeceé a criação
a criação do
criação do vetordadoscom
do vetordadoscom índice
vetordadoscom índice inferior
índice inferior igual
inferior igual a
e superior igual
superior igual a
inseridos no vetor
A figura 3.10
figura 3.10 descreve
3.10 descreve o
descreve o vetordadosdepois
Vetor inicial de
inicial de três
de três inteiros
A rotina ordene_3é
rotina ordene_3é a
ordene_3é a próxima
a próxima a
solicitada comdadosenviado como
comdadosenviado como parâmetro
satisfeita no momento
no momento em
detalhes no capítulo
O primeiro teste
o inteiro do
inteiro do índice
o inteiro do
inteiro do índice
e do índice
em outras palavras
o inteiro do
inteiro do índice
como ocorre neste
ocorre neste caso
o inteiro do
inteiro do índice
e o do
o do índice
colocando então o
então o maior
o maior dos
maior dos três
dos três inteiros
três inteiros no
inteiros no índice
A figura 3.11
figura 3.11 mostra
3.11 mostra como
mostra como ficou
como ficou o
ficou o vetor
dessa operação de
operação de troca
Vetor de três
de três inteiros
da primeira troca
inteiros do índice
e do índice
o inteiro do
inteiro do índice
o inteiro do
inteiro do índice
ocorre neste caso
A figura 3.12
figura 3.12 mostra
3.12 mostra como
mostra como ficou
como ficou o
ficou o vetor
dessa última operação
última operação de
operação de troca
Vetor de três
de três inteiros
da última operação
última operação de
operação de troca
cm layout errado
série de operações
série de serviços
três números conforme
A rotina displaymostra
valores dos números
dos números crescentes
números crescentes nas
crescentes nas posições
A consultacounté usada
consultacounté usada para
usada para adquirir
para adquirir o
adquirir o maior
o maior número
maior número do
número do array
do array os_dados
3.13 Cadeias de
Cadeias de caracteres
vetor de caracteres
símbolos do teclado
do teclado como
teclado como ‘
espaço em branco
Por causa dos
causa dos vetores
dos vetores baseados
vetores baseados em
baseados em caracter
serem tão importante
tão importante em
importante em programação
especial de vetor
Em Eiffel a
Eiffel a classe
a classe STRING
classe STRING armazena
propriedades deste importante
usamosstrings para nomes
para nomes de
nomes de pessoas
tratamos umastring como
simples entidade única
entidade única apesar
constituída de vários
de vários caracteres
a sequência de
sequência de caracteres
de caracteres ‘
caracteres ‘ M
‘ M ’
‘ a ’
‘ r ’
‘ i ’
i ’ e
’ e ‘
e ‘ a
‘ a ’
a ’ geralmente
caracteres individuais de
individuais de umastring
de umastring podem
acessados usando a
usando a consultaitemdearray
a consultaitemdearray discutido
consultaitemdearray discutido na
discutido na sessão
na sessão anterior
seqüência de caracteres
de caracteres delimitados
caracteres delimitados por
par de aspas
Alguns exemplos destringssão
exemplos destringssão fornecidos
destringssão fornecidos abaixo
desejar parar e
parar e considerar
desejáveis em umastring
básicas poderiam incluir
determinado tamanho –
vetor de caracteres
número pré-determinado de
pré-determinado de caracteres
inserir caracteres nastring
caracteres nastring em
nastring em diferentes
em diferentes locais
atribuição de outrastring
seqüência de caracteres
de caracteres limitada
caracteres limitada por
limitada por aspas
acessar caracteres de
copiar umastring para
umastring para outra
retornar o tamanho
o tamanho de
tamanho de umastring
de umastring –
umastring – o
– o número
o número de
número de caracteres
de caracteres atuais
caracteres atuais dastring
Existem operações adicionais
desejar acrescentar a
lista relativamente pequena
o desenvolvedor da
desenvolvedor da classe
da classe STRING
classe STRING deve
componente de software
de software reutilizável
a classe STRING
classe STRING contida
STRING contida na
contida na biblioteca
na biblioteca do
biblioteca do Eiffel
do Eiffel contém
Eiffel contém aproximadamente
contém aproximadamente 60
aproximadamente 60 rotinas
definem o comportamento
comandos e consultas
A fim de
fim de apreciar
de apreciar o
apreciar o trabalho
o trabalho realizado
trabalho realizado no
realizado no desenvolvimento
no desenvolvimento de
importante componente de
componente de software
de software reutilizável
software reutilizável como
vamos examinar a
examinar a funcionalidade
a funcionalidade da
funcionalidade da classe
da classe STRING
pouco antes de
antes de olhar
de olhar a
interface formal e
formal e demonstrar
A classe STRING
dividida em várias
em várias seçõesfeature
conjunto logicamente relacionado
logicamente relacionado de
relacionado de operações
Na tabela 3.1
várias seçõesfeaturesão mostradas
lista de algumas
de algumas das
algumas das rotinas
das rotinas nas
rotinas nas seçõesfeaturesão
nas seçõesfeaturesão listadas
breve descrição de
Tabela 3.1 Análise
3.1 Análise da
Análise da classe
da classe STRING
Acesso– Usado para
Usado para obter
para obter várias
obter várias partes
várias partes do
partes do objeto
do objeto STRING
objeto STRING has–
STRING has– astring
has– astring inclui
caracter em particular
index_of – posição
– posição da
posição da primeira
da primeira ocorrência
primeira ocorrência de
caracter item –
item – caracter
– caracter em
caracter em índice
em índice específico
índice específico item_code–
específico item_code– código
item_code– código numérico
código numérico de
numérico de caracter
de caracter em
caracter em índice
em índice específico
índice específico substring_index–
específico substring_index– posição
substring_index– posição de
posição de ocorrência
de ocorrência de
ocorrência de outrastring
de outrastring contida
outrastring contida nastring
contida nastring dada
– caracter em
caracter em índice
em índice específico
alternativo à item
Comparação – Usado
– Usado para
Usado para comparar
para comparar duasstrings
comparar duasstrings is_equal–
duasstringscontém a mesma
a mesma seqüência
mesma seqüência de
seqüência de caracteres
Conversão – Usado
– Usado para
Usado para converterstring
para converterstring de
forma para outra
para outra mirror
outra mirror –
mirror – inverte
– inverte a
inverte a ordem
a ordem dos
ordem dos caracteres
dos caracteres nastring
caracteres nastring mirrored
nastring mirrored –
mirrored – teste
– teste para
teste para ver
espelho da primeira
da primeira to_double–
primeira to_double– converte
to_double– converte para
converte para o
possível to_integer –
to_integer – converte
– converte para
converte para o
caracteres maiúsculos em
maiúsculos em minúsculos
em minúsculos to_real
minúsculos to_real –
to_real – converte
– converte para
converte para o
possível to_upper –
to_upper – converte
caracteres minúsculos em
minúsculos em maiúsculos
Duplicação– usada para
usada para copiar
para copiar partes
copiar partes de
partes de umastring
de umastring para
umastring para outra
para outra substring
outra substring –
substring – cópia
– cópia de
cópia de umasubstring
string contida em
índice e outro
Mudança de elementos–
de elementos– usada
elementos– usada para
usada para modificar
para modificar partes
modificar partes de
partes de umastring
de umastring append
umastring append –adiciona
cópia de umastring
de umastring para
umastring para o
para o final
o final de
final de outra
de outra copy
outra copy –transfere
copy –transfere caracteres
–transfere caracteres dastring
caracteres dastring fonte
dastring fonte para
fonte para astring
para astring destino
astring destino extend
destino extend –adiciona
caracter no fim
no fim de
determinadastring fill_blank –
fill_blank – preenche
– preenche umastring
caracteres em branco
em branco head
branco head –remove
menos osn primeiros
osn primeiros caracteres
primeiros caracteres insert
caracteres insert –
insert – adiciona
– adiciona umastring
adiciona umastring à
umastring à esquerda
à esquerda do
esquerda do índice
do índice especificado
índice especificado em
determinadastring left_adjust –
left_adjust – remove
espaços iniciais em
iniciais em umastring
em umastring precede
umastring precede –adiciona
caracter na frente
na frente de
determinadastring prepend –adiciona
prepend –adiciona umastring
–adiciona umastring na
umastring na frente
na frente de
determinadastring put –
put – substitui
índice especificado por
determinado caracter replace_substring
caracter replace_substring –copia
replace_substring –copia caracteres
–copia caracteres de
outrastring para posições
para posições específicas
posições específicas dastring
específicas dastring dada
dastring dada replace_substring_all
dada replace_substring_all –substitui
ocorrências de certastring
de certastring por
certastring por novas
por novas right_adjust
novas right_adjust –
right_adjust – remove
espaços finais de
determinadastring set –impróprio
set –impróprio para
–impróprio para discutir
para discutir aqui
discutir aqui share
aqui share –faz
astring atual compartilhe
atual compartilhe o
compartilhe o texto
o texto de
texto de outrastring
qualquer mudança no
mudança no texto
no texto da
texto da outrastring
da outrastring afetará
outrastring afetará o
afetará o original
o original tail
original tail –
tail – remove
exceto osn últimos
osn últimos de
Inicialização– usada para
usada para criar
objeto da classe
da classe STRING
classe STRING make
STRING make –aloca
make –aloca espaço
–aloca espaço para
espaço para no
para no mínimon
no mínimon caracteres
Medição –usada para
–usada para obter
para obter aspectos
obter aspectos numéricos
aspectos numéricos de
numéricos de umastring
de umastring capacity
umastring capacity –espaço
capacity –espaço alocado
–espaço alocado count
alocado count –
count – número
– número atual
número atual de
atual de caracteres
de caracteres em
caracteres em umastring
em umastring occurrences
umastring occurrences –número
occurrences –número de
–número de vezes
caracter específico aparece
específico aparece em
aparece em umastring
Saída de dados–
de dados– usada
dados– usada para
usada para escrever
para escrever umastring
escrever umastring out
umastring out –
out – cria
Remoção– usada para
usada para remover
para remover partes
remover partes de
partes de umastring
de umastring prune
umastring prune –
prune – remove
– remove a
remove a primeira
a primeira ocorrência
primeira ocorrência de
caracter específico prune_all
específico prune_all –
prune_all – remove
caracter específico remove
específico remove –remove
remove –remove oi-ésimo
–remove oi-ésimo caracter
oi-ésimo caracter wipe_out
caracter wipe_out –remove
Redimensionamento– usada para
usada para mudar
para mudar dinamicamente
mudar dinamicamente o
dinamicamente o tamanho
o tamanho de
tamanho de umastring
de umastring adapt_size
umastring adapt_size –muda
adapt_size –muda o
–muda o tamanho
o tamanho para
tamanho para acomodar
para acomodar o
acomodar o número
o número atual
número atual de
atual de caracteres
de caracteres grow
caracteres grow –
grow – garante
menos o número
o número especificado
número especificado resize
especificado resize –realoca
resize –realoca espaço
–realoca espaço para
espaço para acomodar
número específico de
específico de caracteres
Relato de Status–
de Status– usada
Status– usada para
usada para obter
para obter algumas
obter algumas características
algumas características importantes
características importantes de
string consistent –a
consistent –a string
–a string dada
operação de cópia
REAL -- valor
-- valor real
-- por exemplo
produzirá 123.0 to_upper
123.0 to_upper --
to_upper -- converte
-- converte para
converte para letras
para letras maiúsculas
letras maiúsculas substring
like Current --
Current -- copia
caracteres do índice
do índice n1
cópia de ‘
de ‘ s
‘ s ’
s ’ no
’ no fim
-- reinicializa copiando
caracteres de outro
de outro --
‘ clone ’
fill_blank -- preenche
-- adiciona ‘
adiciona ‘ s
‘ s ’
s ’ à
’ à esquerda
à esquerda da
esquerda da posição
da posição ‘
posição ‘ i
‘ i ’
i ’ na
’ na string
na string atual
string atual put
caractere da posição
da posição ‘
posição ‘ i
‘ i ’
i ’ por
’ por ‘
por ‘ c
‘ c ’
c ’ capacity
INTEGER -- quantidade
-- quantidade de
quantidade de memória
de memória alocada
memória alocada count
INTEGER -- número
-- número de
número de caracteres
de caracteres de
INTEGER -- numera
-- numera quantas
numera quantas vezes
‘ c ’
c ’ aparece
’ aparece na
aparece na string
na string wipe_out
string wipe_out --
wipe_out -- remove
caracteres end --
end -- classe
-- classe STRING
classe STRING O
STRING O apêndice
requeridas para o
para o uso
o uso da
uso da classe
da classe STRING
Como parte do
parte do processo
do processo de
processo de aprendizagem
de aprendizagem para
e o leitor
o leitor deve
leitor deve estudar
deve estudar cuidadosamente
informações da interface
da interface deste
interface deste apêndice
estratégia altamente recomendável
altamente recomendável para
tornar familiar e
familiar e confortável
o uso de
classe tal como
tal como STRING
exercite algumas destas
algumas destas funções
Apesar disto poder
disto poder tomar
poder tomar algum
tomar algum tempo
algum tempo e
end io.new_line --
io.new_line -- Muda
-- Muda o
Muda o primeiro
o primeiro caracter
primeiro caracter da
caracter da string
da string str1
string str1 e
str1 e então
e então compara
então compara --
compara -- str1
-- str1 e
str1 e mensagem
e mensagem novamente
mensagem novamente str1.mirror
novamente str1.mirror io.put_string
io.new_line -- Inverte
-- Inverte a
Inverte a seqüência
a seqüência de
seqüência de caracteres
de caracteres na
caracteres na string
na string str1
string str1 str1.mirror
str1 str1.mirror str1.to_upper
str1.mirror str1.to_upper io.put_string
io.new_line -- Obtém
-- Obtém a
Obtém a primeira
a primeira ocorrência
primeira ocorrência da
ocorrência da letra
da letra ‘
letra ‘ G
‘ G ’
G ’ io.put_string
Primeira ocorência de
ocorência de ‘
de ‘ G
‘ G ’
G ’ 1
io.new_line -- Obtém
-- Obtém a
Obtém a primeira
a primeira ocorrência
primeira ocorrência da
ocorrência da substring
Primeira ocorência de
ocorência de ‘
de ‘ ING
‘ ING ’
ING ’ 1
io.new_line -- Escreve
-- Escreve o
Escreve o valor
o valor da
valor da string
da string true_constant
string true_constant io.put_string
io.new_line -- Atribui
-- Atribui a
Atribui a substring
a substring de
substring de str1
índices -- 24
27 para a
para a string
a string str2
string str2 str2
io.new_line -- Atribui
-- Atribui str2
valor real r
de converter a
converter a string
a string para
string para real
para real r
Como a entrada
a entrada de
entrada de dados
obtida no programa
A dispositivo de
dispositivo de entrada
de entrada padrão
O segmento seguinte
segmento seguinte de
seguinte de código
de código ilustra
código ilustra como
valor de caracter
REAL io.readint --
io.readint -- comando
-- comando de
comando de leitura
de leitura io.readchar
leitura io.readchar --
io.readchar -- comando
-- comando de
comando de leitura
de leitura io.readreal
leitura io.readreal --
io.readreal -- comando
-- comando de
comando de leitura
de leitura meu_inteiro
=io.lastint -- consulta
-- consulta meu_caracter
=io.lastchar -- consulta
-- consulta meu_real
=io.lastreal –- consulta
comandos de entrada
de entrada usados
entrada usados sãoreadint
transmitido através do
através do objeto
do objeto padrão
objeto padrão de
padrão de entrada
de entrada e
entrada e saída
informação datilografada no
datilografada no teclado
lastchar e lastreal
objeto padrão de
padrão de entrada
de entrada e
entrada e saída
O protocolo rigoroso
protocolo rigoroso de
rigoroso de separação
comados e consultas
tentador fazerreadint retornar
o ponto de
ponto de vista
de vista examinado
vista examinado aqui
o comandoreadintmuda o
comandoreadintmuda o estado
o estado da
estado da situação
da situação interna
situação interna do
interna do objetoio
do objetoio e
objetoio e a
e a consultalastint
retorna parte de
Existem muitos comandos
muitos comandos de
comandos de entrada
de entrada e
entrada e saída
e saída de
saída de comandos
de consultas definidas
consultas definidas na
definidas na classe
na classe STD_FILES
classe STD_FILES de
STD_FILES de Eiffel
entradas e saídas
porção da interface
da interface desta
interface desta classe
dada na listagem
na listagem 3.9
Porção da interfase
da interfase para
interfase para classe
para classe STD_FILES
classe STD_FILES class
STD_FILES class interface
class interface STD_FILES
interface STD_FILES feature
STD_FILES feature --
feature -- muda
-- muda elemento
muda elemento new_line
elemento new_line --
new_line -- Escreve
mudança de linha
de linha na
linha na saída
na saída padrão
saída padrão put_char
-- Escreve ´c´
Escreve ´c´ no
´c´ no final
no final da
final da saída
da saída padrão
-- escreve ‘
escreve ‘ d
‘ d ’
d ’ no
’ no final
no final da
final da saída
da saída default
saída default put_int
-- escreve ‘
escreve ‘ i
‘ i ’
i ’ no
’ no final
no final de
final de saída
de saída default
saída default put_real
-- escreve ‘
escreve ‘ r
‘ r ’
r ’ no
’ no final
no final de
final de saída
de saída default
saída default put_string
-- escreve ‘
escreve ‘ s
‘ s ’
s ’ no
’ no final
no final de
final de saída
de saída default
saída default feature
default feature --
feature -- entrada
-- entrada de
entrada de dados
de dados next_line
dados next_line --
next_line -- move
-- move para
move para a
para a próxima
a próxima linha
próxima linha na
linha na entrada
na entrada padrão
entrada padrão readchar
padrão readchar --
readchar -- lê
novo caracter da
caracter da entrada
da entrada padrão
entrada padrão --
padrão -- Disponibiliza
-- Disponibiliza o
Disponibiliza o resultado
o resultado em
resultado em ‘
em ‘ lastchar
‘ lastchar ’
lastchar ’ readdouble
’ readdouble --
readdouble -- lê
novo double da
double da entrada
da entrada padrão
entrada padrão --
padrão -- Disponibiliza
-- Disponibiliza o
Disponibiliza o resultado
o resultado em
resultado em ‘
em ‘ lastdouble
‘ lastdouble ’
lastdouble ’ readint
’ readint --
readint -- lê
novo inteiro da
inteiro da entrada
da entrada padrão
entrada padrão --
padrão -- disponibiliza
-- disponibiliza o
disponibiliza o resultado
o resultado em
resultado em ‘
em ‘ lastint
‘ lastint ’
lastint ’ readline
’ readline --
readline -- lê
linha da entrada
da entrada padrão
entrada padrão --
padrão -- disponibiliza
-- disponibiliza o
disponibiliza o resultado
o resultado em
resultado em ‘
em ‘ laststring
‘ laststring ’
laststring ’ readreal
’ readreal --
readreal -- lê
novo real da
real da entrada
da entrada padrão
entrada padrão --
padrão -- disponibiliza
-- disponibiliza o
disponibiliza o resultado
o resultado em
resultado em ‘
em ‘ lastreal
‘ lastreal ’
lastreal ’ readstream
string de no
de no máximo
no máximo ‘
máximo ‘ nb_char
‘ nb_char ’
nb_char ’ caracteres
’ caracteres da
caracteres da entrada
da entrada padrão
entrada padrão --
padrão -- disponibiliza
-- disponibiliza o
disponibiliza o resultado
o resultado em
resultado em ‘
em ‘ laststring
‘ laststring ’
laststring ’ readword
’ readword --
readword -- lê
nova palavra da
palavra da entrada
da entrada padrão
entrada padrão --
padrão -- disponibiliza
-- disponibiliza o
disponibiliza o resultado
o resultado em
resultado em ‘
em ‘ laststring
‘ laststring ’
laststring ’ feature
’ feature –
feature – relatório
– relatório de
relatório de status
de status https



